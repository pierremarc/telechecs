{"version":3,"file":"index-B0AB_75j.js","sources":["../../src/lib/option.ts","../../node_modules/zod/dist/esm/v4/core/core.js","../../node_modules/zod/dist/esm/v4/core/util.js","../../node_modules/zod/dist/esm/v4/core/errors.js","../../node_modules/zod/dist/esm/v4/core/parse.js","../../node_modules/zod/dist/esm/v4/core/regexes.js","../../node_modules/zod/dist/esm/v4/core/checks.js","../../node_modules/zod/dist/esm/v4/core/doc.js","../../node_modules/zod/dist/esm/v4/core/versions.js","../../node_modules/zod/dist/esm/v4/core/schemas.js","../../node_modules/zod/dist/esm/v4/core/registries.js","../../node_modules/zod/dist/esm/v4/core/api.js","../../node_modules/zod/dist/esm/v4/classic/iso.js","../../node_modules/zod/dist/esm/v4/classic/errors.js","../../node_modules/zod/dist/esm/v4/classic/parse.js","../../node_modules/zod/dist/esm/v4/classic/schemas.js","../../src/lib/ucui/types.ts","../../src/lib/util.ts","../../src/lib/dom.ts","../../src/lib/html.ts","../../node_modules/chess.js/dist/esm/pgn.js","../../node_modules/chess.js/dist/esm/chess.js","../../src/util.ts","../../src/store.ts","../../src/lib/remote.ts","../../src/lib/ucui/lichess-types.ts","../../src/api.ts","../../src/locale/home.ts","../../src/locale/buttons.ts","../../src/locale/players.ts","../../src/locale/end.ts","../../src/locale/challenge.ts","../../src/locale/formated.ts","../../src/locale/clock.ts","../../src/locale/arena.ts","../../src/locale/index.ts","../../src/view/clock.ts","../../src/san.ts","../../src/opponent.ts","../../src/view/buttons.ts","../../src/view/chat.ts","../../src/sound.ts","../../src/play.ts","../../src/input-san.ts","../../src/fullscreen.ts","../../src/game.ts","../../node_modules/@bity/oauth2-auth-code-pkce/index.js","../../src/lib/stream.ts","../../src/env.ts","../../src/auth.ts","../../src/view/login.ts","../../src/view/players.ts","../../src/view/home.ts","../../src/lock-screen.ts","../../src/lib/ucui/fen.ts","../../src/board.ts","../../src/view/end.ts","../../src/movelist.ts","../../src/view/events.ts","../../src/view/challenge.ts","../../src/online.ts","../../src/view/seek.ts","../../src/view/arena.ts","../../src/main.ts"],"sourcesContent":["import { tuple } from \"./tuple.js\";\n\nconst _none = \"none\";\nconst _some = \"some\";\n\nexport type None = {\n  readonly tag: typeof _none;\n};\n\nexport type Some<T> = {\n  readonly tag: typeof _some;\n  value: T;\n};\n\nexport type Option<T> = None | Some<T>;\n\nexport const none: Option<never> = { tag: _none };\n\nexport const some = <T>(value: T): Option<T> => ({ tag: _some, value });\n\nexport const isOption = (n: unknown): n is Option<unknown> =>\n  typeof n === \"object\" &&\n  n !== null &&\n  \"tag\" in n &&\n  // rome-ignore lint/suspicious/noExplicitAny: it is a type assertion\n  ((n as any)[\"tag\"] === _none || (n as any)[\"tag\"] === _some);\n\nexport const isNone = (o: Option<unknown>): o is None => o.tag === \"none\";\n\nexport const isSome = <T>(o: Option<T>): o is Some<T> => o.tag === \"some\";\n\nexport const map =\n  <T, R = unknown>(f: (v: T) => R) =>\n  (o: Option<T>): Option<R> =>\n    isNone(o) ? none : some(f(o.value));\n\nexport const bind =\n  <T, R = unknown>(f: (v: T) => Option<R>) =>\n  (o: Option<T>): Option<R> =>\n    isNone(o) ? none : f(o.value);\n\nexport const alt =\n  <R>(f: () => R) =>\n  (o: Option<unknown>): Option<R> =>\n    isSome(o) ? none : some(f());\n\nexport const orElse =\n  <O, T>(value: T) =>\n  (o: Option<O>) =>\n    isNone(o) ? value : o.value;\n\nexport const orElseL =\n  <T>(value: () => T) =>\n  (o: Option<T>) =>\n    isNone(o) ? value() : o.value;\n\nexport const fromNullable = <T>(value: T | null | undefined): Option<T> =>\n  value === null || value === undefined ? none : some(value);\n\nexport const toNullable = <T>(opt: Option<T>): T | null =>\n  isSome(opt) ? opt.value : null;\n\nexport const map2 =\n  <A, B = unknown, C = unknown>(\n    fa: (a: Option<A>) => Option<B>,\n    fb: (a: Option<B>) => C\n  ) =>\n  (a: Option<A> | A) => {\n    if (isOption(a)) {\n      return fb(fa(a));\n    }\n    return fb(fa(some(a)));\n  };\n\nexport const pipe2 = <A, B, C>(\n  a: Option<A>,\n  fa: (a: Option<A>) => Option<B>,\n  fb: (a: Option<B>) => C\n) => fb(fa(a));\n\nexport const merge = <A, B>(a: Option<A>, b: Option<B>) =>\n  bind((sa: A) => map((sb: B) => tuple(sa, sb))(b))(a);\n","export /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n","// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport function defineLazy(object, key, getter) {\n    const set = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!set) {\n                const value = getter();\n                object[key] = value;\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nfunction _isObject(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const newShape = {};\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        // pick key\n        newShape[key] = currDef.shape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function omit(schema, mask) {\n    const newShape = { ...schema._zod.def.shape };\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        delete newShape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function extend(schema, shape) {\n    const def = {\n        ...schema._zod.def,\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [], // delete existing checks\n    };\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    return clone(a, {\n        ...a._zod.def,\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        catchall: b._zod.def.catchall,\n        checks: [], // delete existing checks\n    });\n}\nexport function partial(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in oldShape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        checks: [],\n    });\n}\nexport function required(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in shape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        // optional: [],\n        checks: [],\n    });\n}\nexport function aborted(x, startIndex = 0) {\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i].continue !== true)\n            return true;\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n","import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"message\", {\n        get() {\n            return JSON.stringify(def, util.jsonStringifyReplacer, 2);\n        },\n        enumerable: true,\n        // configurable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   ✖ Expected number, received string at \"username\n * favoriteNumbers[0]\n *   ✖ Invalid input: expected number\n * ```\n */\nexport function toDotPath(path) {\n    const segs = [];\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => a.path.length - b.path.length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`✖ ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  → at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n","import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        Error.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        Error.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\n","export const cuid = /^[cC][^\\s-]{8,}$/;\nexport const cuid2 = /^[0-9a-z]+$/;\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\nexport const xid = /^[0-9a-vA-V]{20}$/;\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\n/** Returns a regex for validating an RFC 4122 UUID.\n *\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\nexport const uuid = (version) => {\n    if (!version)\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$/;\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\n};\nexport const uuid4 = /*@__PURE__*/ uuid(4);\nexport const uuid6 = /*@__PURE__*/ uuid(6);\nexport const uuid7 = /*@__PURE__*/ uuid(7);\n/** Practical email validation */\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nexport const _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nexport function emoji() {\n    return new RegExp(_emoji, \"u\");\n}\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/;\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\nexport const base64url = /^[A-Za-z0-9_-]*$/;\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\n// export const hostname: RegExp =\n//   /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/;\nexport const hostname = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\nconst dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\nfunction timeSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nexport function time(args) {\n    return new RegExp(`^${timeSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetime(args) {\n    let regex = `${dateSource}T${timeSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nexport const string = (params) => {\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\n    return new RegExp(`^${regex}$`);\n};\nexport const bigint = /^\\d+n?$/;\nexport const integer = /^\\d+$/;\nexport const number = /^-?\\d+(?:\\.\\d+)?/i;\nexport const boolean = /true|false/i;\nconst _null = /null/i;\nexport { _null as null };\nconst _undefined = /undefined/i;\nexport { _undefined as undefined };\n// regex for string with no uppercase letters\nexport const lowercase = /^[^A-Z]*$/;\n// regex for string with no lowercase letters\nexport const uppercase = /^[^a-z]*$/;\n","// import { $ZodType } from \"./schemas.js\";\nimport * as core from \"./core.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\n    var _a;\n    inst._zod ?? (inst._zod = {});\n    inst._zod.def = def;\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\n});\nconst numericOriginMap = {\n    number: \"number\",\n    bigint: \"bigint\",\n    object: \"date\",\n};\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\n        if (def.value < curr) {\n            if (def.inclusive)\n                bag.maximum = def.value;\n            else\n                bag.exclusiveMaximum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\n        if (def.value > curr) {\n            if (def.inclusive)\n                bag.minimum = def.value;\n            else\n                bag.exclusiveMinimum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin: origin,\n            code: \"too_small\",\n            minimum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMultipleOf = \n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        var _a;\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\n    });\n    inst._zod.check = (payload) => {\n        if (typeof payload.value !== typeof def.value)\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\n        const isMultiple = typeof payload.value === \"bigint\"\n            ? payload.value % def.value === BigInt(0)\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\n        if (isMultiple)\n            return;\n        payload.issues.push({\n            origin: typeof payload.value,\n            code: \"not_multiple_of\",\n            divisor: def.value,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    def.format = def.format || \"float64\";\n    const isInt = def.format?.includes(\"int\");\n    const origin = isInt ? \"int\" : \"number\";\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n        if (isInt)\n            bag.pattern = regexes.integer;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (isInt) {\n            if (!Number.isInteger(input)) {\n                // invalid_format issue\n                // payload.issues.push({\n                //   expected: def.format,\n                //   format: def.format,\n                //   code: \"invalid_format\",\n                //   input,\n                //   inst,\n                // });\n                // invalid_type issue\n                payload.issues.push({\n                    expected: origin,\n                    format: def.format,\n                    code: \"invalid_type\",\n                    input,\n                    inst,\n                });\n                return;\n                // not_multiple_of issue\n                // payload.issues.push({\n                //   code: \"not_multiple_of\",\n                //   origin: \"number\",\n                //   input,\n                //   inst,\n                //   divisor: 1,\n                // });\n            }\n            if (!Number.isSafeInteger(input)) {\n                if (input > 0) {\n                    // too_big\n                    payload.issues.push({\n                        input,\n                        code: \"too_big\",\n                        maximum: Number.MAX_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                else {\n                    // too_small\n                    payload.issues.push({\n                        input,\n                        code: \"too_small\",\n                        minimum: Number.MIN_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                return;\n            }\n        }\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"number\",\n                input: input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size <= def.maximum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_big\",\n            maximum: def.maximum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size >= def.minimum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_small\",\n            minimum: def.minimum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.size;\n        bag.maximum = def.size;\n        bag.size = def.size;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size === def.size)\n            return;\n        const tooBig = size > def.size;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length <= def.maximum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length >= def.minimum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.length;\n        bag.maximum = def.length;\n        bag.length = def.length;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length === def.length)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        const tooBig = length > def.length;\n        payload.issues.push({\n            origin,\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        if (def.pattern) {\n            bag.patterns ?? (bag.patterns = new Set());\n            bag.patterns.add(def.pattern);\n        }\n    });\n    (_a = inst._zod).check ?? (_a.check = (payload) => {\n        if (!def.pattern)\n            throw new Error(\"Not implemented.\");\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: def.format,\n            input: payload.value,\n            ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\n            inst,\n            continue: !def.abort,\n        });\n    });\n});\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\n    $ZodCheckStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"regex\",\n            input: payload.value,\n            pattern: def.pattern.toString(),\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.lowercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.uppercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const escapedRegex = util.escapeRegex(def.includes);\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\n    def.pattern = pattern;\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.includes(def.includes, def.position))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"includes\",\n            includes: def.includes,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.startsWith(def.prefix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"starts_with\",\n            prefix: def.prefix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.endsWith(def.suffix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"ends_with\",\n            suffix: def.suffix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n///////////////////////////////////\n/////    $ZodCheckProperty    /////\n///////////////////////////////////\nfunction handleCheckPropertyResult(result, payload, property) {\n    if (result.issues.length) {\n        payload.issues.push(...util.prefixIssues(property, result.issues));\n    }\n}\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        const result = def.schema._zod.run({\n            value: payload.value[def.property],\n            issues: [],\n        }, {});\n        if (result instanceof Promise) {\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\n        }\n        handleCheckPropertyResult(result, payload, def.property);\n        return;\n    };\n});\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const mimeSet = new Set(def.mime);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.mime = def.mime;\n    });\n    inst._zod.check = (payload) => {\n        if (mimeSet.has(payload.value.type))\n            return;\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.mime,\n            input: payload.value.type,\n            path: [\"type\"],\n            inst,\n        });\n    };\n});\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        payload.value = def.tx(payload.value);\n    };\n});\n","export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n","export const version = {\n    major: 4,\n    minor: 0,\n    patch: 0,\n};\n","import * as checks from \"./checks.js\";\nimport * as core from \"./core.js\";\nimport { Doc } from \"./doc.js\";\nimport { safeParse, safeParseAsync } from \"./parse.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nimport { version } from \"./versions.js\";\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\n    var _a;\n    inst ?? (inst = {});\n    // avoids issues with using Math.random() in Next.js caching\n    util.defineLazy(inst._zod, \"id\", () => def.type + \"_\" + util.randomString(10));\n    inst._zod.def = def; // set _def property\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\n    inst._zod.version = version;\n    const checks = [...(inst._zod.def.checks ?? [])];\n    // if inst is itself a checks.$ZodCheck, run it as a check\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\n        checks.unshift(inst);\n    }\n    //\n    for (const ch of checks) {\n        for (const fn of ch._zod.onattach) {\n            fn(inst);\n        }\n    }\n    if (checks.length === 0) {\n        // deferred initializer\n        // inst._zod.parse is not yet defined\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        inst._zod.deferred?.push(() => {\n            inst._zod.run = inst._zod.parse;\n        });\n    }\n    else {\n        const runChecks = (payload, checks, ctx) => {\n            let isAborted = util.aborted(payload);\n            let asyncResult;\n            for (const ch of checks) {\n                if (ch._zod.when) {\n                    const shouldRun = ch._zod.when(payload);\n                    if (!shouldRun)\n                        continue;\n                }\n                else if (isAborted) {\n                    continue;\n                }\n                const currLen = payload.issues.length;\n                const _ = ch._zod.check(payload);\n                if (_ instanceof Promise && ctx?.async === false) {\n                    throw new core.$ZodAsyncError();\n                }\n                if (asyncResult || _ instanceof Promise) {\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\n                        await _;\n                        const nextLen = payload.issues.length;\n                        if (nextLen === currLen)\n                            return;\n                        if (!isAborted)\n                            isAborted = util.aborted(payload, currLen);\n                    });\n                }\n                else {\n                    const nextLen = payload.issues.length;\n                    if (nextLen === currLen)\n                        continue;\n                    if (!isAborted)\n                        isAborted = util.aborted(payload, currLen);\n                }\n            }\n            if (asyncResult) {\n                return asyncResult.then(() => {\n                    return payload;\n                });\n            }\n            return payload;\n        };\n        inst._zod.run = (payload, ctx) => {\n            const result = inst._zod.parse(payload, ctx);\n            if (result instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return result.then((result) => runChecks(result, checks, ctx));\n            }\n            return runChecks(result, checks, ctx);\n        };\n    }\n    inst[\"~standard\"] = {\n        validate: (value) => {\n            try {\n                const r = safeParse(inst, value);\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\n            }\n            catch (_) {\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\n            }\n        },\n        vendor: \"zod\",\n        version: 1,\n    };\n});\nexport { clone } from \"./util.js\";\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\n    inst._zod.parse = (payload, _) => {\n        if (def.coerce)\n            try {\n                payload.value = String(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"string\")\n            return payload;\n        payload.issues.push({\n            expected: \"string\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\n    // check initialization must come first\n    checks.$ZodCheckStringFormat.init(inst, def);\n    $ZodString.init(inst, def);\n});\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.guid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\n    if (def.version) {\n        const versionMap = {\n            v1: 1,\n            v2: 2,\n            v3: 3,\n            v4: 4,\n            v5: 5,\n            v6: 6,\n            v7: 7,\n            v8: 8,\n        };\n        const v = versionMap[def.version];\n        if (v === undefined)\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\n        def.pattern ?? (def.pattern = regexes.uuid(v));\n    }\n    else\n        def.pattern ?? (def.pattern = regexes.uuid());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.email);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        try {\n            const url = new URL(payload.value);\n            if (def.hostname) {\n                def.hostname.lastIndex = 0;\n                if (!def.hostname.test(url.hostname)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid hostname\",\n                        pattern: regexes.hostname.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            if (def.protocol) {\n                def.protocol.lastIndex = 0;\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid protocol\",\n                        pattern: def.protocol.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            return;\n        }\n        catch (_) {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"url\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.emoji());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.nanoid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid2);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ulid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.xid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ksuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.datetime(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.date);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.time(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.duration);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv4);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv4`;\n    });\n});\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv6);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv6`;\n    });\n    inst._zod.check = (payload) => {\n        try {\n            new URL(`http://[${payload.value}]`);\n            // return;\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"ipv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv4);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        const [address, prefix] = payload.value.split(\"/\");\n        try {\n            if (!prefix)\n                throw new Error();\n            const prefixNum = Number(prefix);\n            if (`${prefixNum}` !== prefix)\n                throw new Error();\n            if (prefixNum < 0 || prefixNum > 128)\n                throw new Error();\n            new URL(`http://[${address}]`);\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"cidrv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64(data) {\n    if (data === \"\")\n        return true;\n    if (data.length % 4 !== 0)\n        return false;\n    try {\n        atob(data);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64URL(data) {\n    if (!regexes.base64url.test(data))\n        return false;\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\n    return isValidBase64(padded);\n}\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64url);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64url\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64URL(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64url\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.e164);\n    $ZodStringFormat.init(inst, def);\n});\n//////////////////////////////   ZodJWT   //////////////////////////////\nexport function isValidJWT(token, algorithm = null) {\n    try {\n        const tokensParts = token.split(\".\");\n        if (tokensParts.length !== 3)\n            return false;\n        const [header] = tokensParts;\n        const parsedHeader = JSON.parse(atob(header));\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\n            return false;\n        if (!parsedHeader.alg)\n            return false;\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (isValidJWT(payload.value, def.alg))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"jwt\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Number(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\n            return payload;\n        }\n        const received = typeof input === \"number\"\n            ? Number.isNaN(input)\n                ? \"NaN\"\n                : !Number.isFinite(input)\n                    ? \"Infinity\"\n                    : undefined\n            : undefined;\n        payload.issues.push({\n            expected: \"number\",\n            code: \"invalid_type\",\n            input,\n            inst,\n            ...(received ? { received } : {}),\n        });\n        return payload;\n    };\n});\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    checks.$ZodCheckNumberFormat.init(inst, def);\n    $ZodNumber.init(inst, def); // no format checksp\n});\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.boolean;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Boolean(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"boolean\")\n            return payload;\n        payload.issues.push({\n            expected: \"boolean\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.bigint;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = BigInt(payload.value);\n            }\n            catch (_) { }\n        const { value: input } = payload;\n        if (typeof input === \"bigint\")\n            return payload;\n        payload.issues.push({\n            expected: \"bigint\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    checks.$ZodCheckBigIntFormat.init(inst, def);\n    $ZodBigInt.init(inst, def); // no format checks\n});\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (typeof input === \"symbol\")\n            return payload;\n        payload.issues.push({\n            expected: \"symbol\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.undefined;\n    inst._zod.values = new Set([undefined]);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"undefined\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.null;\n    inst._zod.values = new Set([null]);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (input === null)\n            return payload;\n        payload.issues.push({\n            expected: \"null\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.issues.push({\n            expected: \"never\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"void\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce) {\n            try {\n                payload.value = new Date(payload.value);\n            }\n            catch (_err) { }\n        }\n        const input = payload.value;\n        const isDate = input instanceof Date;\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\n        if (isValidDate)\n            return payload;\n        payload.issues.push({\n            expected: \"date\",\n            code: \"invalid_type\",\n            input,\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\n            inst,\n        });\n        return payload;\n    };\n});\nfunction handleArrayResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                expected: \"array\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = Array(input.length);\n        const proms = [];\n        for (let i = 0; i < input.length; i++) {\n            const item = input[i];\n            const result = def.element._zod.run({\n                value: item,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\n            }\n            else {\n                handleArrayResult(result, payload, i);\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload; //handleArrayResultsAsync(parseResults, final);\n    };\n});\nfunction handleObjectResult(result, final, key) {\n    // if(isOptional)\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(key, result.issues));\n    }\n    final.value[key] = result.value;\n}\nfunction handleOptionalObjectResult(result, final, key, input) {\n    if (result.issues.length) {\n        // validation failed against value schema\n        if (input[key] === undefined) {\n            // if input was undefined, ignore the error\n            if (key in input) {\n                final.value[key] = undefined;\n            }\n            else {\n                final.value[key] = result.value;\n            }\n        }\n        else {\n            final.issues.push(...util.prefixIssues(key, result.issues));\n        }\n    }\n    else if (result.value === undefined) {\n        // validation returned `undefined`\n        if (key in input)\n            final.value[key] = undefined;\n    }\n    else {\n        // non-undefined value\n        final.value[key] = result.value;\n    }\n}\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodType.init(inst, def);\n    const _normalized = util.cached(() => {\n        const keys = Object.keys(def.shape);\n        for (const k of keys) {\n            if (!(def.shape[k] instanceof $ZodType)) {\n                throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\n            }\n        }\n        const okeys = util.optionalKeys(def.shape);\n        return {\n            shape: def.shape,\n            keys,\n            keySet: new Set(keys),\n            numKeys: keys.length,\n            optionalKeys: new Set(okeys),\n        };\n    });\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const shape = def.shape;\n        const propValues = {};\n        for (const key in shape) {\n            const field = shape[key]._zod;\n            if (field.values) {\n                propValues[key] ?? (propValues[key] = new Set());\n                for (const v of field.values)\n                    propValues[key].add(v);\n            }\n        }\n        return propValues;\n    });\n    const generateFastpass = (shape) => {\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\n        const { keys, optionalKeys } = _normalized.value;\n        const parseStr = (key) => {\n            const k = util.esc(key);\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\n        };\n        doc.write(`const input = payload.value;`);\n        const ids = Object.create(null);\n        for (const key of keys) {\n            ids[key] = util.randomString(15);\n        }\n        // A: preserve key order {\n        doc.write(`const newResult = {}`);\n        for (const key of keys) {\n            if (optionalKeys.has(key)) {\n                const id = ids[key];\n                doc.write(`const ${id} = ${parseStr(key)};`);\n                const k = util.esc(key);\n                doc.write(`\n        if (${id}.issues.length) {\n          if (input[${k}] === undefined) {\n            if (${k} in input) {\n              newResult[${k}] = undefined;\n            }\n          } else {\n            payload.issues = payload.issues.concat(\n              ${id}.issues.map((iss) => ({\n                ...iss,\n                path: iss.path ? [${k}, ...iss.path] : [${k}],\n              }))\n            );\n          }\n        } else if (${id}.value === undefined) {\n          if (${k} in input) newResult[${k}] = undefined;\n        } else {\n          newResult[${k}] = ${id}.value;\n        }\n        `);\n            }\n            else {\n                const id = ids[key];\n                //  const id = ids[key];\n                doc.write(`const ${id} = ${parseStr(key)};`);\n                doc.write(`\n          if (${id}.issues.length) payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\n            ...iss,\n            path: iss.path ? [${util.esc(key)}, ...iss.path] : [${util.esc(key)}]\n          })));`);\n                doc.write(`newResult[${util.esc(key)}] = ${id}.value`);\n            }\n        }\n        doc.write(`payload.value = newResult;`);\n        doc.write(`return payload;`);\n        const fn = doc.compile();\n        return (payload, ctx) => fn(shape, payload, ctx);\n    };\n    let fastpass;\n    const isObject = util.isObject;\n    const jit = !core.globalConfig.jitless;\n    const allowsEval = util.allowsEval;\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\n    const { catchall } = def;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\n            // always synchronous\n            if (!fastpass)\n                fastpass = generateFastpass(def.shape);\n            payload = fastpass(payload, ctx);\n        }\n        else {\n            payload.value = {};\n            const shape = value.shape;\n            for (const key of value.keys) {\n                const el = shape[key];\n                // do not add omitted optional keys\n                // if (!(key in input)) {\n                //   if (optionalKeys.has(key)) continue;\n                //   payload.issues.push({\n                //     code: \"invalid_type\",\n                //     path: [key],\n                //     expected: \"nonoptional\",\n                //     note: `Missing required key: \"${key}\"`,\n                //     input,\n                //     inst,\n                //   });\n                // }\n                const r = el._zod.run({ value: input[key], issues: [] }, ctx);\n                const isOptional = el._zod.optin === \"optional\" && el._zod.optout === \"optional\";\n                if (r instanceof Promise) {\n                    proms.push(r.then((r) => isOptional ? handleOptionalObjectResult(r, payload, key, input) : handleObjectResult(r, payload, key)));\n                }\n                else if (isOptional) {\n                    handleOptionalObjectResult(r, payload, key, input);\n                }\n                else {\n                    handleObjectResult(r, payload, key);\n                }\n            }\n        }\n        if (!catchall) {\n            // return payload;\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\n        }\n        const unrecognized = [];\n        // iterate over input keys\n        const keySet = value.keySet;\n        const _catchall = catchall._zod;\n        const t = _catchall.def.type;\n        for (const key of Object.keys(input)) {\n            if (keySet.has(key))\n                continue;\n            if (t === \"never\") {\n                unrecognized.push(key);\n                continue;\n            }\n            const r = _catchall.run({ value: input[key], issues: [] }, ctx);\n            if (r instanceof Promise) {\n                proms.push(r.then((r) => handleObjectResult(r, payload, key)));\n            }\n            else {\n                handleObjectResult(r, payload, key);\n            }\n        }\n        if (unrecognized.length) {\n            payload.issues.push({\n                code: \"unrecognized_keys\",\n                keys: unrecognized,\n                input,\n                inst,\n            });\n        }\n        if (!proms.length)\n            return payload;\n        return Promise.all(proms).then(() => {\n            return payload;\n        });\n    };\n});\nfunction handleUnionResults(results, final, inst, ctx) {\n    for (const result of results) {\n        if (result.issues.length === 0) {\n            final.value = result.value;\n            return final;\n        }\n    }\n    final.issues.push({\n        code: \"invalid_union\",\n        input: final.value,\n        inst,\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n    });\n    return final;\n}\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        if (def.options.every((o) => o._zod.values)) {\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\n        }\n        return undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        if (def.options.every((o) => o._zod.pattern)) {\n            const patterns = def.options.map((o) => o._zod.pattern);\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\n        }\n        return undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        let async = false;\n        const results = [];\n        for (const option of def.options) {\n            const result = option._zod.run({\n                value: payload.value,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                results.push(result);\n                async = true;\n            }\n            else {\n                if (result.issues.length === 0)\n                    return result;\n                results.push(result);\n            }\n        }\n        if (!async)\n            return handleUnionResults(results, payload, inst, ctx);\n        return Promise.all(results).then((results) => {\n            return handleUnionResults(results, payload, inst, ctx);\n        });\n    };\n});\nexport const $ZodDiscriminatedUnion = \n/*@__PURE__*/\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\n    $ZodUnion.init(inst, def);\n    const _super = inst._zod.parse;\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const propValues = {};\n        for (const option of def.options) {\n            const pv = option._zod.propValues;\n            if (!pv || Object.keys(pv).length === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\n            for (const [k, v] of Object.entries(pv)) {\n                if (!propValues[k])\n                    propValues[k] = new Set();\n                for (const val of v) {\n                    propValues[k].add(val);\n                }\n            }\n        }\n        return propValues;\n    });\n    const disc = util.cached(() => {\n        const opts = def.options;\n        const map = new Map();\n        for (const o of opts) {\n            const values = o._zod.propValues[def.discriminator];\n            if (!values || values.size === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\n            for (const v of values) {\n                if (map.has(v)) {\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\n                }\n                map.set(v, o);\n            }\n        }\n        return map;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isObject(input)) {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"object\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const opt = disc.value.get(input?.[def.discriminator]);\n        if (opt) {\n            return opt._zod.run(payload, ctx);\n        }\n        if (def.unionFallback) {\n            return _super(payload, ctx);\n        }\n        // no matching discriminator\n        payload.issues.push({\n            code: \"invalid_union\",\n            errors: [],\n            note: \"No matching discriminator\",\n            input,\n            path: [def.discriminator],\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const { value: input } = payload;\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\n        const async = left instanceof Promise || right instanceof Promise;\n        if (async) {\n            return Promise.all([left, right]).then(([left, right]) => {\n                return handleIntersectionResults(payload, left, right);\n            });\n        }\n        return handleIntersectionResults(payload, left, right);\n    };\n});\nfunction mergeValues(a, b) {\n    // const aType = parse.t(a);\n    // const bType = parse.t(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    if (a instanceof Date && b instanceof Date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\n        const bKeys = Object.keys(b);\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return { valid: false, mergeErrorPath: [] };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    return { valid: false, mergeErrorPath: [] };\n}\nfunction handleIntersectionResults(result, left, right) {\n    if (left.issues.length) {\n        result.issues.push(...left.issues);\n    }\n    if (right.issues.length) {\n        result.issues.push(...right.issues);\n    }\n    if (util.aborted(result))\n        return result;\n    const merged = mergeValues(left.value, right.value);\n    if (!merged.valid) {\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\n    }\n    result.value = merged.data;\n    return result;\n}\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const items = def.items;\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"tuple\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        payload.value = [];\n        const proms = [];\n        if (!def.rest) {\n            const tooBig = input.length > items.length;\n            const tooSmall = input.length < optStart - 1;\n            if (tooBig || tooSmall) {\n                payload.issues.push({\n                    input,\n                    inst,\n                    origin: \"array\",\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\n                });\n                return payload;\n            }\n        }\n        let i = -1;\n        for (const item of items) {\n            i++;\n            if (i >= input.length)\n                if (i >= optStart)\n                    continue;\n            const result = item._zod.run({\n                value: input[i],\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n            }\n            else {\n                handleTupleResult(result, payload, i);\n            }\n        }\n        if (def.rest) {\n            const rest = input.slice(items.length);\n            for (const el of rest) {\n                i++;\n                const result = def.rest._zod.run({\n                    value: el,\n                    issues: [],\n                }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n                }\n                else {\n                    handleTupleResult(result, payload, i);\n                }\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleTupleResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isPlainObject(input)) {\n            payload.issues.push({\n                expected: \"record\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (def.keyType._zod.values) {\n            const values = def.keyType._zod.values;\n            payload.value = {};\n            for (const key of values) {\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                    if (result instanceof Promise) {\n                        proms.push(result.then((result) => {\n                            if (result.issues.length) {\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\n                            }\n                            payload.value[key] = result.value;\n                        }));\n                    }\n                    else {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[key] = result.value;\n                    }\n                }\n            }\n            let unrecognized;\n            for (const key in input) {\n                if (!values.has(key)) {\n                    unrecognized = unrecognized ?? [];\n                    unrecognized.push(key);\n                }\n            }\n            if (unrecognized && unrecognized.length > 0) {\n                payload.issues.push({\n                    code: \"unrecognized_keys\",\n                    input,\n                    inst,\n                    keys: unrecognized,\n                });\n            }\n        }\n        else {\n            payload.value = {};\n            for (const key of Reflect.ownKeys(input)) {\n                if (key === \"__proto__\")\n                    continue;\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n                if (keyResult instanceof Promise) {\n                    throw new Error(\"Async schemas not supported in object keys currently\");\n                }\n                if (keyResult.issues.length) {\n                    payload.issues.push({\n                        origin: \"record\",\n                        code: \"invalid_key\",\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        input: key,\n                        path: [key],\n                        inst,\n                    });\n                    payload.value[keyResult.value] = keyResult.value;\n                    continue;\n                }\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[keyResult.value] = result.value;\n                    }));\n                }\n                else {\n                    if (result.issues.length) {\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\n                    }\n                    payload.value[keyResult.value] = result.value;\n                }\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload;\n    };\n});\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Map)) {\n            payload.issues.push({\n                expected: \"map\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Map();\n        for (const [key, value] of input) {\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n                }));\n            }\n            else {\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\n    if (keyResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_key\",\n                input,\n                inst,\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    if (valueResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_element\",\n                input,\n                inst,\n                key: key,\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    final.value.set(keyResult.value, valueResult.value);\n}\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Set)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"set\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Set();\n        for (const item of input) {\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleSetResult(result, payload)));\n            }\n            else\n                handleSetResult(result, payload);\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleSetResult(result, final) {\n    if (result.issues.length) {\n        final.issues.push(...result.issues);\n    }\n    final.value.add(result.value);\n}\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const values = util.getEnumValues(def.entries);\n    inst._zod.values = new Set(values);\n    inst._zod.pattern = new RegExp(`^(${values\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.values = new Set(def.values);\n    inst._zod.pattern = new RegExp(`^(${def.values\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? o.toString() : String(o)))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input instanceof File)\n            return payload;\n        payload.issues.push({\n            expected: \"file\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const _out = def.transform(payload.value, payload);\n        if (_ctx.async) {\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        if (_out instanceof Promise) {\n            throw new core.$ZodAsyncError();\n        }\n        payload.value = _out;\n        return payload;\n    };\n});\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            return payload;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\n    });\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === null)\n            return payload;\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // inst._zod.qin = \"true\";\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n            /**\n             * $ZodDefault always returns the default value immediately.\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\n            return payload;\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleDefaultResult(result, def));\n        }\n        return handleDefaultResult(result, def);\n    };\n});\nfunction handleDefaultResult(payload, def) {\n    if (payload.value === undefined) {\n        payload.value = def.defaultValue;\n    }\n    return payload;\n}\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        const v = def.innerType._zod.values;\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleNonOptionalResult(result, inst));\n        }\n        return handleNonOptionalResult(result, inst);\n    };\n});\nfunction handleNonOptionalResult(payload, inst) {\n    if (!payload.issues.length && payload.value === undefined) {\n        payload.issues.push({\n            code: \"invalid_type\",\n            expected: \"nonoptional\",\n            input: payload.value,\n            inst,\n        });\n    }\n    return payload;\n}\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.issues.length === 0;\n                return payload;\n            });\n        }\n        payload.value = result.issues.length === 0;\n        return payload;\n    };\n});\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.value;\n                if (result.issues.length) {\n                    payload.value = def.catchValue({\n                        ...payload,\n                        error: {\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        },\n                        input: payload.value,\n                    });\n                    payload.issues = [];\n                }\n                return payload;\n            });\n        }\n        payload.value = result.value;\n        if (result.issues.length) {\n            payload.value = def.catchValue({\n                ...payload,\n                error: {\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                },\n                input: payload.value,\n            });\n            payload.issues = [];\n        }\n        return payload;\n    };\n});\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"nan\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const left = def.in._zod.run(payload, ctx);\n        if (left instanceof Promise) {\n            return left.then((left) => handlePipeResult(left, def, ctx));\n        }\n        return handlePipeResult(left, def, ctx);\n    };\n});\nfunction handlePipeResult(left, def, ctx) {\n    if (util.aborted(left)) {\n        return left;\n    }\n    return def.out._zod.run({ value: left.value, issues: left.issues }, ctx);\n}\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then(handleReadonlyResult);\n        }\n        return handleReadonlyResult(result);\n    };\n});\nfunction handleReadonlyResult(payload) {\n    payload.value = Object.freeze(payload.value);\n    return payload;\n}\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const regexParts = [];\n    for (const part of def.parts) {\n        if (part instanceof $ZodType) {\n            if (!part._zod.pattern) {\n                // if (!source)\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\n            }\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\n            if (!source)\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\n            const start = source.startsWith(\"^\") ? 1 : 0;\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n            regexParts.push(source.slice(start, end));\n        }\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\n            regexParts.push(util.escapeRegex(`${part}`));\n        }\n        else {\n            throw new Error(`Invalid template literal part: ${part}`);\n        }\n    }\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"string\") {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"template_literal\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        inst._zod.pattern.lastIndex = 0;\n        if (!inst._zod.pattern.test(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                code: \"invalid_format\",\n                format: \"template_literal\",\n                pattern: inst._zod.pattern.source,\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\n    };\n});\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const inner = inst._zod.innerType;\n        return inner._zod.run(payload, ctx);\n    };\n});\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\n    checks.$ZodCheck.init(inst, def);\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _) => {\n        return payload;\n    };\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const r = def.fn(input);\n        if (r instanceof Promise) {\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\n        }\n        handleRefineResult(r, payload, input, inst);\n        return;\n    };\n});\nfunction handleRefineResult(result, payload, input, inst) {\n    if (!result) {\n        const _iss = {\n            code: \"custom\",\n            input,\n            inst, // incorporates params.error into issue reporting\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\n            continue: !inst._zod.def.abort,\n            // params: inst._zod.def.params,\n        };\n        if (inst._zod.def.params)\n            _iss.params = inst._zod.def.params;\n        payload.issues.push(util.issue(_iss));\n    }\n}\n","export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    remove(schema) {\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            return { ...pm, ...this._map.get(schema) };\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n","import * as checks from \"./checks.js\";\nimport * as schemas from \"./schemas.js\";\nimport * as util from \"./util.js\";\nexport function _string(Class, params) {\n    return new Class({\n        type: \"string\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedString(Class, params) {\n    return new Class({\n        type: \"string\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _email(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"email\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _guid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"guid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v4\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v6\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv7(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v7\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _emoji(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"emoji\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nanoid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"nanoid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid2(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid2\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ulid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ulid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _xid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"xid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ksuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ksuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _e164(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"e164\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _jwt(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"jwt\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDateTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"datetime\",\n        check: \"string_format\",\n        offset: false,\n        local: false,\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDate(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"date\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"time\",\n        check: \"string_format\",\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDuration(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"duration\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _number(Class, params) {\n    return new Class({\n        type: \"number\",\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedNumber(Class, params) {\n    return new Class({\n        type: \"number\",\n        coerce: true,\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"safeint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float64(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"int32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"uint32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _boolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBoolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _bigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"int64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"uint64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _symbol(Class, params) {\n    return new Class({\n        type: \"symbol\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _undefined(Class, params) {\n    return new Class({\n        type: \"undefined\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _null(Class, params) {\n    return new Class({\n        type: \"null\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _any(Class) {\n    return new Class({\n        type: \"any\",\n    });\n}\nexport function _unknown(Class) {\n    return new Class({\n        type: \"unknown\",\n    });\n}\nexport function _never(Class, params) {\n    return new Class({\n        type: \"never\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _void(Class, params) {\n    return new Class({\n        type: \"void\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _date(Class, params) {\n    return new Class({\n        type: \"date\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedDate(Class, params) {\n    return new Class({\n        type: \"date\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nan(Class, params) {\n    return new Class({\n        type: \"nan\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lt(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _lte(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.lte()` instead. */\n_lte as _max, };\nexport function _gt(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _gte(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.gte()` instead. */\n_gte as _min, };\nexport function _positive(params) {\n    return _gt(0, params);\n}\n// negative\nexport function _negative(params) {\n    return _lt(0, params);\n}\n// nonpositive\nexport function _nonpositive(params) {\n    return _lte(0, params);\n}\n// nonnegative\nexport function _nonnegative(params) {\n    return _gte(0, params);\n}\nexport function _multipleOf(value, params) {\n    return new checks.$ZodCheckMultipleOf({\n        check: \"multiple_of\",\n        ...util.normalizeParams(params),\n        value,\n    });\n}\nexport function _maxSize(maximum, params) {\n    return new checks.$ZodCheckMaxSize({\n        check: \"max_size\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n}\nexport function _minSize(minimum, params) {\n    return new checks.$ZodCheckMinSize({\n        check: \"min_size\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _size(size, params) {\n    return new checks.$ZodCheckSizeEquals({\n        check: \"size_equals\",\n        ...util.normalizeParams(params),\n        size,\n    });\n}\nexport function _maxLength(maximum, params) {\n    const ch = new checks.$ZodCheckMaxLength({\n        check: \"max_length\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n    return ch;\n}\nexport function _minLength(minimum, params) {\n    return new checks.$ZodCheckMinLength({\n        check: \"min_length\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _length(length, params) {\n    return new checks.$ZodCheckLengthEquals({\n        check: \"length_equals\",\n        ...util.normalizeParams(params),\n        length,\n    });\n}\nexport function _regex(pattern, params) {\n    return new checks.$ZodCheckRegex({\n        check: \"string_format\",\n        format: \"regex\",\n        ...util.normalizeParams(params),\n        pattern,\n    });\n}\nexport function _lowercase(params) {\n    return new checks.$ZodCheckLowerCase({\n        check: \"string_format\",\n        format: \"lowercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uppercase(params) {\n    return new checks.$ZodCheckUpperCase({\n        check: \"string_format\",\n        format: \"uppercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _includes(includes, params) {\n    return new checks.$ZodCheckIncludes({\n        check: \"string_format\",\n        format: \"includes\",\n        ...util.normalizeParams(params),\n        includes,\n    });\n}\nexport function _startsWith(prefix, params) {\n    return new checks.$ZodCheckStartsWith({\n        check: \"string_format\",\n        format: \"starts_with\",\n        ...util.normalizeParams(params),\n        prefix,\n    });\n}\nexport function _endsWith(suffix, params) {\n    return new checks.$ZodCheckEndsWith({\n        check: \"string_format\",\n        format: \"ends_with\",\n        ...util.normalizeParams(params),\n        suffix,\n    });\n}\nexport function _property(property, schema, params) {\n    return new checks.$ZodCheckProperty({\n        check: \"property\",\n        property,\n        schema,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _mime(types, params) {\n    return new checks.$ZodCheckMimeType({\n        check: \"mime_type\",\n        mime: types,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _overwrite(tx) {\n    return new checks.$ZodCheckOverwrite({\n        check: \"overwrite\",\n        tx,\n    });\n}\n// normalize\nexport function _normalize(form) {\n    return _overwrite((input) => input.normalize(form));\n}\n// trim\nexport function _trim() {\n    return _overwrite((input) => input.trim());\n}\n// toLowerCase\nexport function _toLowerCase() {\n    return _overwrite((input) => input.toLowerCase());\n}\n// toUpperCase\nexport function _toUpperCase() {\n    return _overwrite((input) => input.toUpperCase());\n}\nexport function _array(Class, element, params) {\n    return new Class({\n        type: \"array\",\n        element,\n        // get element() {\n        //   return element;\n        // },\n        ...util.normalizeParams(params),\n    });\n}\nexport function _union(Class, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _discriminatedUnion(Class, discriminator, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _intersection(Class, left, right) {\n    return new Class({\n        type: \"intersection\",\n        left,\n        right,\n    });\n}\n// export function _tuple(\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\n//   items: [],\n//   params?: string | $ZodTupleParams\n// ): schemas.$ZodTuple<[], null>;\nexport function _tuple(Class, items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new Class({\n        type: \"tuple\",\n        items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _record(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"record\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _map(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"map\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _set(Class, valueType, params) {\n    return new Class({\n        type: \"set\",\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _enum(Class, values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    // if (Array.isArray(values)) {\n    //   for (const value of values) {\n    //     entries[value] = value;\n    //   }\n    // } else {\n    //   Object.assign(entries, values);\n    // }\n    // const entries: util.EnumLike = {};\n    // for (const val of values) {\n    //   entries[val] = val;\n    // }\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function _nativeEnum(Class, entries, params) {\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _literal(Class, value, params) {\n    return new Class({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _file(Class, params) {\n    return new Class({\n        type: \"file\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _transform(Class, fn) {\n    return new Class({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport function _optional(Class, innerType) {\n    return new Class({\n        type: \"optional\",\n        innerType,\n    });\n}\nexport function _nullable(Class, innerType) {\n    return new Class({\n        type: \"nullable\",\n        innerType,\n    });\n}\nexport function _default(Class, innerType, defaultValue) {\n    return new Class({\n        type: \"default\",\n        innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport function _nonoptional(Class, innerType, params) {\n    return new Class({\n        type: \"nonoptional\",\n        innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _success(Class, innerType) {\n    return new Class({\n        type: \"success\",\n        innerType,\n    });\n}\nexport function _catch(Class, innerType, catchValue) {\n    return new Class({\n        type: \"catch\",\n        innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport function _pipe(Class, in_, out) {\n    return new Class({\n        type: \"pipe\",\n        in: in_,\n        out,\n    });\n}\nexport function _readonly(Class, innerType) {\n    return new Class({\n        type: \"readonly\",\n        innerType,\n    });\n}\nexport function _templateLiteral(Class, parts, params) {\n    return new Class({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lazy(Class, getter) {\n    return new Class({\n        type: \"lazy\",\n        getter,\n    });\n}\nexport function _promise(Class, innerType) {\n    return new Class({\n        type: \"promise\",\n        innerType,\n    });\n}\nexport function _custom(Class, fn, _params) {\n    const norm = util.normalizeParams(_params);\n    norm.abort ?? (norm.abort = true); // default to abort:false\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...norm,\n    });\n    return schema;\n}\n// export function _refine<T>(\n//   Class: util.SchemaClass<schemas.$ZodCustom>,\n//   fn: (arg: NoInfer<T>) => util.MaybeAsync<unknown>,\n//   _params: string | $ZodCustomParams = {}\n// ): checks.$ZodCheck<T> {\n//   return _custom(Class, fn, _params);\n// }\n// same as _custom but deafults to abort:false\nexport function _refine(Class, fn, _params) {\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...util.normalizeParams(_params),\n    });\n    return schema;\n}\nexport function _stringbool(Classes, _params) {\n    const { case: _case, error, truthy, falsy } = util.normalizeParams(_params);\n    let truthyArray = truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\n    let falsyArray = falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\n    if (_case !== \"sensitive\") {\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n    }\n    const truthySet = new Set(truthyArray);\n    const falsySet = new Set(falsyArray);\n    const _Pipe = Classes.Pipe ?? schemas.$ZodPipe;\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\n    const _String = Classes.String ?? schemas.$ZodString;\n    const _Transform = Classes.Transform ?? schemas.$ZodTransform;\n    const tx = new _Transform({\n        type: \"transform\",\n        transform: (input, payload) => {\n            let data = input;\n            if (_case !== \"sensitive\")\n                data = data.toLowerCase();\n            if (truthySet.has(data)) {\n                return true;\n            }\n            else if (falsySet.has(data)) {\n                return false;\n            }\n            else {\n                payload.issues.push({\n                    code: \"invalid_value\",\n                    expected: \"stringbool\",\n                    values: [...truthySet, ...falsySet],\n                    input: payload.value,\n                    inst: tx,\n                });\n                return {};\n            }\n        },\n        error,\n    });\n    const innerPipe = new _Pipe({\n        type: \"pipe\",\n        in: new _String({ type: \"string\", error }),\n        out: tx,\n        error,\n    });\n    const outerPipe = new _Pipe({\n        type: \"pipe\",\n        in: innerPipe,\n        out: new _Boolean({\n            type: \"boolean\",\n            error,\n        }),\n        error,\n    });\n    return outerPipe;\n}\n","import * as core from \"zod/v4/core\";\nimport * as schemas from \"./schemas.js\";\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\n    core.$ZodISODateTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function datetime(params) {\n    return core._isoDateTime(ZodISODateTime, params);\n}\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\n    core.$ZodISODate.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function date(params) {\n    return core._isoDate(ZodISODate, params);\n}\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\n    core.$ZodISOTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function time(params) {\n    return core._isoTime(ZodISOTime, params);\n}\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\n    core.$ZodISODuration.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function duration(params) {\n    return core._isoDuration(ZodISODuration, params);\n}\n","import * as core from \"zod/v4/core\";\nimport { $ZodError } from \"zod/v4/core\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => inst.issues.push(issue),\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => inst.issues.push(...issues),\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n","import * as core from \"zod/v4/core\";\nimport { ZodRealError } from \"./errors.js\";\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\n","import * as core from \"zod/v4/core\";\nimport { util } from \"zod/v4/core\";\nimport * as checks from \"./checks.js\";\nimport * as iso from \"./iso.js\";\nimport * as parse from \"./parse.js\";\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\n    core.$ZodType.init(inst, def);\n    inst.def = def;\n    Object.defineProperty(inst, \"_def\", { value: def });\n    // base methods\n    inst.check = (...checks) => {\n        return inst.clone({\n            ...def,\n            checks: [\n                ...(def.checks ?? []),\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\n            ],\n        }\n        // { parent: true }\n        );\n    };\n    inst.clone = (def, params) => core.clone(inst, def, params);\n    inst.brand = () => inst;\n    inst.register = ((reg, meta) => {\n        reg.add(inst, meta);\n        return inst;\n    });\n    // parsing\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\n    inst.spa = inst.safeParseAsync;\n    // refinements\n    inst.refine = (check, params) => inst.check(refine(check, params));\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\n    // wrappers\n    inst.optional = () => optional(inst);\n    inst.nullable = () => nullable(inst);\n    inst.nullish = () => optional(nullable(inst));\n    inst.nonoptional = (params) => nonoptional(inst, params);\n    inst.array = () => array(inst);\n    inst.or = (arg) => union([inst, arg]);\n    inst.and = (arg) => intersection(inst, arg);\n    inst.transform = (tx) => pipe(inst, transform(tx));\n    inst.default = (def) => _default(inst, def);\n    inst.prefault = (def) => prefault(inst, def);\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\n    inst.catch = (params) => _catch(inst, params);\n    inst.pipe = (target) => pipe(inst, target);\n    inst.readonly = () => readonly(inst);\n    // meta\n    inst.describe = (description) => {\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, { description });\n        return cl;\n    };\n    Object.defineProperty(inst, \"description\", {\n        get() {\n            return core.globalRegistry.get(inst)?.description;\n        },\n        configurable: true,\n    });\n    inst.meta = (...args) => {\n        if (args.length === 0) {\n            return core.globalRegistry.get(inst);\n        }\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, args[0]);\n        return cl;\n    };\n    // helpers\n    inst.isOptional = () => inst.safeParse(undefined).success;\n    inst.isNullable = () => inst.safeParse(null).success;\n    return inst;\n});\n/** @internal */\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    ZodType.init(inst, def);\n    const bag = inst._zod.bag;\n    inst.format = bag.format ?? null;\n    inst.minLength = bag.minimum ?? null;\n    inst.maxLength = bag.maximum ?? null;\n    // validations\n    inst.regex = (...args) => inst.check(checks.regex(...args));\n    inst.includes = (...args) => inst.check(checks.includes(...args));\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\n    inst.min = (...args) => inst.check(checks.minLength(...args));\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\n    inst.length = (...args) => inst.check(checks.length(...args));\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\n    // transforms\n    inst.trim = () => inst.check(checks.trim());\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\n});\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    _ZodString.init(inst, def);\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\n    // iso\n    inst.datetime = (params) => inst.check(iso.datetime(params));\n    inst.date = (params) => inst.check(iso.date(params));\n    inst.time = (params) => inst.check(iso.time(params));\n    inst.duration = (params) => inst.check(iso.duration(params));\n});\nexport function string(params) {\n    return core._string(ZodString, params);\n}\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\n    core.$ZodStringFormat.init(inst, def);\n    _ZodString.init(inst, def);\n});\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmail.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function email(params) {\n    return core._email(ZodEmail, params);\n}\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodGUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function guid(params) {\n    return core._guid(ZodGUID, params);\n}\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodUUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function uuid(params) {\n    return core._uuid(ZodUUID, params);\n}\nexport function uuidv4(params) {\n    return core._uuidv4(ZodUUID, params);\n}\n// ZodUUIDv6\nexport function uuidv6(params) {\n    return core._uuidv6(ZodUUID, params);\n}\n// ZodUUIDv7\nexport function uuidv7(params) {\n    return core._uuidv7(ZodUUID, params);\n}\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodURL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function url(params) {\n    return core._url(ZodURL, params);\n}\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmoji.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function emoji(params) {\n    return core._emoji(ZodEmoji, params);\n}\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodNanoID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function nanoid(params) {\n    return core._nanoid(ZodNanoID, params);\n}\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid(params) {\n    return core._cuid(ZodCUID, params);\n}\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID2.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid2(params) {\n    return core._cuid2(ZodCUID2, params);\n}\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodULID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ulid(params) {\n    return core._ulid(ZodULID, params);\n}\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodXID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function xid(params) {\n    return core._xid(ZodXID, params);\n}\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodKSUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ksuid(params) {\n    return core._ksuid(ZodKSUID, params);\n}\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv4(params) {\n    return core._ipv4(ZodIPv4, params);\n}\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv6(params) {\n    return core._ipv6(ZodIPv6, params);\n}\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\n    core.$ZodCIDRv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv4(params) {\n    return core._cidrv4(ZodCIDRv4, params);\n}\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\n    core.$ZodCIDRv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv6(params) {\n    return core._cidrv6(ZodCIDRv6, params);\n}\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64(params) {\n    return core._base64(ZodBase64, params);\n}\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64URL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64url(params) {\n    return core._base64url(ZodBase64URL, params);\n}\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodE164.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function e164(params) {\n    return core._e164(ZodE164, params);\n}\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodJWT.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function jwt(params) {\n    return core._jwt(ZodJWT, params);\n}\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\n    core.$ZodNumber.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.int = (params) => inst.check(int(params));\n    inst.safe = (params) => inst.check(int(params));\n    inst.positive = (params) => inst.check(checks.gt(0, params));\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\n    inst.negative = (params) => inst.check(checks.lt(0, params));\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\n    // inst.finite = (params) => inst.check(core.finite(params));\n    inst.finite = () => inst;\n    const bag = inst._zod.bag;\n    inst.minValue =\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\n    inst.maxValue =\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\n    inst.isFinite = true;\n    inst.format = bag.format ?? null;\n});\nexport function number(params) {\n    return core._number(ZodNumber, params);\n}\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\n    core.$ZodNumberFormat.init(inst, def);\n    ZodNumber.init(inst, def);\n});\nexport function int(params) {\n    return core._int(ZodNumberFormat, params);\n}\nexport function float32(params) {\n    return core._float32(ZodNumberFormat, params);\n}\nexport function float64(params) {\n    return core._float64(ZodNumberFormat, params);\n}\nexport function int32(params) {\n    return core._int32(ZodNumberFormat, params);\n}\nexport function uint32(params) {\n    return core._uint32(ZodNumberFormat, params);\n}\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\n    core.$ZodBoolean.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function boolean(params) {\n    return core._boolean(ZodBoolean, params);\n}\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\n    core.$ZodBigInt.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    const bag = inst._zod.bag;\n    inst.minValue = bag.minimum ?? null;\n    inst.maxValue = bag.maximum ?? null;\n    inst.format = bag.format ?? null;\n});\nexport function bigint(params) {\n    return core._bigint(ZodBigInt, params);\n}\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\n    core.$ZodBigIntFormat.init(inst, def);\n    ZodBigInt.init(inst, def);\n});\n// int64\nexport function int64(params) {\n    return core._int64(ZodBigIntFormat, params);\n}\n// uint64\nexport function uint64(params) {\n    return core._uint64(ZodBigIntFormat, params);\n}\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\n    core.$ZodSymbol.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function symbol(params) {\n    return core._symbol(ZodSymbol, params);\n}\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\n    core.$ZodUndefined.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _undefined(params) {\n    return core._undefined(ZodUndefined, params);\n}\nexport { _undefined as undefined };\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\n    core.$ZodNull.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _null(params) {\n    return core._null(ZodNull, params);\n}\nexport { _null as null };\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\n    core.$ZodAny.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function any() {\n    return core._any(ZodAny);\n}\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\n    core.$ZodUnknown.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function unknown() {\n    return core._unknown(ZodUnknown);\n}\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\n    core.$ZodNever.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function never(params) {\n    return core._never(ZodNever, params);\n}\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\n    core.$ZodVoid.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _void(params) {\n    return core._void(ZodVoid, params);\n}\nexport { _void as void };\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\n    core.$ZodDate.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    const c = inst._zod.bag;\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\n});\nexport function date(params) {\n    return core._date(ZodDate, params);\n}\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\n    core.$ZodArray.init(inst, def);\n    ZodType.init(inst, def);\n    inst.element = def.element;\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\n    inst.length = (len, params) => inst.check(checks.length(len, params));\n    inst.unwrap = () => inst.element;\n});\nexport function array(element, params) {\n    return core._array(ZodArray, element, params);\n}\n// .keyof\nexport function keyof(schema) {\n    const shape = schema._zod.def.shape;\n    return literal(Object.keys(shape));\n}\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\n    core.$ZodObject.init(inst, def);\n    ZodType.init(inst, def);\n    util.defineLazy(inst, \"shape\", () => {\n        return Object.fromEntries(Object.entries(inst._zod.def.shape));\n    });\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    // inst.nonstrict = () => inst.clone({ ...inst._zod.def, catchall: api.unknown() });\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\n    inst.extend = (incoming) => {\n        return util.extend(inst, incoming);\n    };\n    inst.merge = (other) => util.merge(inst, other);\n    inst.pick = (mask) => util.pick(inst, mask);\n    inst.omit = (mask) => util.omit(inst, mask);\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\n});\nexport function object(shape, params) {\n    const def = {\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        ...util.normalizeParams(params),\n    };\n    return new ZodObject(def);\n}\n// strictObject\nexport function strictObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        catchall: never(),\n        ...util.normalizeParams(params),\n    });\n}\n// looseObject\nexport function looseObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        catchall: unknown(),\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\n    core.$ZodUnion.init(inst, def);\n    ZodType.init(inst, def);\n    inst.options = def.options;\n});\nexport function union(options, params) {\n    return new ZodUnion({\n        type: \"union\",\n        options: options,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\n    ZodUnion.init(inst, def);\n    core.$ZodDiscriminatedUnion.init(inst, def);\n});\nexport function discriminatedUnion(discriminator, options, params) {\n    // const [options, params] = args;\n    return new ZodDiscriminatedUnion({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\n    core.$ZodIntersection.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function intersection(left, right) {\n    return new ZodIntersection({\n        type: \"intersection\",\n        left: left,\n        right: right,\n    });\n}\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\n    core.$ZodTuple.init(inst, def);\n    ZodType.init(inst, def);\n    inst.rest = (rest) => inst.clone({\n        ...inst._zod.def,\n        rest: rest,\n    });\n});\nexport function tuple(items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new ZodTuple({\n        type: \"tuple\",\n        items: items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\n    core.$ZodRecord.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function record(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\n// type alksjf = core.output<core.$ZodRecordKey>;\nexport function partialRecord(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType: union([keyType, never()]),\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\n    core.$ZodMap.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function map(keyType, valueType, params) {\n    return new ZodMap({\n        type: \"map\",\n        keyType: keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\n    core.$ZodSet.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (...args) => inst.check(core._minSize(...args));\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\n    inst.max = (...args) => inst.check(core._maxSize(...args));\n    inst.size = (...args) => inst.check(core._size(...args));\n});\nexport function set(valueType, params) {\n    return new ZodSet({\n        type: \"set\",\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\n    core.$ZodEnum.init(inst, def);\n    ZodType.init(inst, def);\n    inst.enum = def.entries;\n    inst.options = Object.values(def.entries);\n    const keys = new Set(Object.keys(def.entries));\n    inst.extract = (values, params) => {\n        const newEntries = {};\n        for (const value of values) {\n            if (keys.has(value)) {\n                newEntries[value] = def.entries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n    inst.exclude = (values, params) => {\n        const newEntries = { ...def.entries };\n        for (const value of values) {\n            if (keys.has(value)) {\n                delete newEntries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n});\nfunction _enum(values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport { _enum as enum };\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function nativeEnum(entries, params) {\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\n    core.$ZodLiteral.init(inst, def);\n    ZodType.init(inst, def);\n    inst.values = new Set(def.values);\n    Object.defineProperty(inst, \"value\", {\n        get() {\n            if (def.values.length > 1) {\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\n            }\n            return def.values[0];\n        },\n    });\n});\nexport function literal(value, params) {\n    return new ZodLiteral({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\n    core.$ZodFile.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\n});\nexport function file(params) {\n    return core._file(ZodFile, params);\n}\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\n    core.$ZodTransform.init(inst, def);\n    ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = inst);\n                _issue.continue ?? (_issue.continue = true);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        const output = def.transform(payload.value, payload);\n        if (output instanceof Promise) {\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        payload.value = output;\n        return payload;\n    };\n});\nexport function transform(fn) {\n    return new ZodTransform({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\n    core.$ZodOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function optional(innerType) {\n    return new ZodOptional({\n        type: \"optional\",\n        innerType: innerType,\n    });\n}\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\n    core.$ZodNullable.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nullable(innerType) {\n    return new ZodNullable({\n        type: \"nullable\",\n        innerType: innerType,\n    });\n}\n// nullish\nexport function nullish(innerType) {\n    return optional(nullable(innerType));\n}\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\n    core.$ZodDefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeDefault = inst.unwrap;\n});\nexport function _default(innerType, defaultValue) {\n    return new ZodDefault({\n        type: \"default\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\n    core.$ZodPrefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function prefault(innerType, defaultValue) {\n    return new ZodPrefault({\n        type: \"prefault\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\n    core.$ZodNonOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nonoptional(innerType, params) {\n    return new ZodNonOptional({\n        type: \"nonoptional\",\n        innerType: innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\n    core.$ZodSuccess.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function success(innerType) {\n    return new ZodSuccess({\n        type: \"success\",\n        innerType: innerType,\n    });\n}\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\n    core.$ZodCatch.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeCatch = inst.unwrap;\n});\nfunction _catch(innerType, catchValue) {\n    return new ZodCatch({\n        type: \"catch\",\n        innerType: innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport { _catch as catch };\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\n    core.$ZodNaN.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function nan(params) {\n    return core._nan(ZodNaN, params);\n}\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\n    core.$ZodPipe.init(inst, def);\n    ZodType.init(inst, def);\n    inst.in = def.in;\n    inst.out = def.out;\n});\nexport function pipe(in_, out) {\n    return new ZodPipe({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        // ...util.normalizeParams(params),\n    });\n}\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\n    core.$ZodReadonly.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function readonly(innerType) {\n    return new ZodReadonly({\n        type: \"readonly\",\n        innerType: innerType,\n    });\n}\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\n    core.$ZodTemplateLiteral.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function templateLiteral(parts, params) {\n    return new ZodTemplateLiteral({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\n    core.$ZodLazy.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.getter();\n});\nexport function lazy(getter) {\n    return new ZodLazy({\n        type: \"lazy\",\n        getter: getter,\n    });\n}\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\n    core.$ZodPromise.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function promise(innerType) {\n    return new ZodPromise({\n        type: \"promise\",\n        innerType: innerType,\n    });\n}\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\n    core.$ZodCustom.init(inst, def);\n    ZodType.init(inst, def);\n});\n// custom checks\nexport function check(fn, params) {\n    const ch = new core.$ZodCheck({\n        check: \"custom\",\n        ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function custom(fn, _params) {\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\n}\nexport function refine(fn, _params = {}) {\n    return core._refine(ZodCustom, fn, _params);\n}\n// superRefine\nexport function superRefine(fn, params) {\n    const ch = check((payload) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = ch);\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        return fn(payload.value, payload);\n    }, params);\n    return ch;\n}\nfunction _instanceof(cls, params = {\n    error: `Input not instance of ${cls.name}`,\n}) {\n    const inst = new ZodCustom({\n        type: \"custom\",\n        check: \"custom\",\n        fn: (data) => data instanceof cls,\n        abort: true,\n        ...util.normalizeParams(params),\n    });\n    inst._zod.bag.Class = cls;\n    return inst;\n}\nexport { _instanceof as instanceof };\n// stringbool\nexport const stringbool = (...args) => core._stringbool({\n    Pipe: ZodPipe,\n    Boolean: ZodBoolean,\n    String: ZodString,\n    Transform: ZodTransform,\n}, ...args);\nexport function json(params) {\n    const jsonSchema = lazy(() => {\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\n    });\n    return jsonSchema;\n}\n// preprocess\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\nexport function preprocess(fn, schema) {\n    return pipe(transform(fn), schema);\n}\n","/**\n * lint hint: this file should import nothing\n * and hold only types and contructors/accessors\n */\n\nimport { HttpClient } from \"@bity/oauth2-auth-code-pkce\";\nimport { Streamer } from \"../stream\";\nimport { ChatLineEvent, RequestSeekClock } from \"./lichess-types\";\nimport { z } from \"zod/v4\";\n\nexport const LangZ = z.union([z.literal(\"en\"), z.literal(\"fr\")]);\nexport type Lang = z.infer<typeof LangZ>;\n\nexport type Screen =\n  | \"home\"\n  | \"game\"\n  | \"events\"\n  | \"seek\"\n  | \"movelist\"\n  | \"challenge\"\n  | \"follow\"\n  | \"end-game\"\n  | \"arena\";\n\nexport type Role = \"Pawn\" | \"Knight\" | \"Bishop\" | \"Rook\" | \"Queen\" | \"King\";\n\nexport const roleToUCILetter = (role: Role) => {\n  switch (role) {\n    case \"Pawn\":\n      return \"p\";\n    case \"Knight\":\n      return \"n\";\n    case \"Bishop\":\n      return \"b\";\n    case \"Rook\":\n      return \"r\";\n    case \"Queen\":\n      return \"q\";\n    case \"King\":\n      return \"k\";\n  }\n};\n\nexport const uciLetterToRole = (letter: \"p\" | \"n\" | \"b\" | \"r\" | \"q\" | \"k\") => {\n  switch (letter) {\n    case \"p\":\n      return \"Pawn\";\n    case \"n\":\n      return \"Knight\";\n    case \"b\":\n      return \"Bishop\";\n    case \"r\":\n      return \"Rook\";\n    case \"q\":\n      return \"Queen\";\n    case \"k\":\n      return \"King\";\n  }\n};\n\nexport type SquareFile = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\";\nexport type SquareRank = \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\";\nexport type Square = `${SquareFile}${SquareRank}`;\n\nexport const squareFiles: SquareFile[] = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n];\nexport const squareRanks: SquareRank[] = [\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n];\nexport const getFile = (s: Square) => s[0] as SquareFile;\nexport const getRank = (s: Square) => s[1] as SquareRank;\nexport const makeSquare = (f: SquareFile, r: SquareRank) => (f + r) as Square;\n\nexport type Nullable<T> = T | null;\n\nexport type MoveEffect = {\n  check: boolean;\n  checkmate: boolean;\n};\nexport type MoveNormal = MoveEffect & {\n  readonly _tag: \"Normal\";\n  role: Role;\n  from: Square;\n  capture: Nullable<Role>;\n  to: Square;\n  promotion: Nullable<Role>;\n};\n\nexport const moveNormal = (\n  role: Role,\n  from: Square,\n  to: Square,\n  capture: Nullable<Role>,\n  promotion: Nullable<Role>,\n  check: boolean,\n  checkmate: boolean\n): MoveNormal => ({\n  _tag: \"Normal\",\n  role,\n  from,\n  to,\n  capture: capture,\n  promotion: promotion,\n  check,\n  checkmate,\n});\n\nexport type MoveEnPassant = MoveEffect & {\n  readonly _tag: \"EnPassant\";\n  from: Square;\n  to: Square;\n};\nexport const moveEnPassant = (\n  from: Square,\n  to: Square,\n  check: boolean,\n  checkmate: boolean\n): MoveEnPassant => ({\n  _tag: \"EnPassant\",\n  from,\n  to,\n  check,\n  checkmate,\n});\n\ntype CastleKingSquare = \"E1\" | \"E8\";\ntype CastleRookSquare = \"H1\" | \"H8\" | \"A1\" | \"A8\";\n\nexport type MoveCastle = MoveEffect & {\n  readonly _tag: \"Castle\";\n  king: CastleKingSquare;\n  rook: CastleRookSquare;\n};\n\nexport const moveCastle = (\n  king: CastleKingSquare,\n  rook: CastleRookSquare,\n  check: boolean,\n  checkmate: boolean\n): MoveCastle => ({\n  _tag: \"Castle\",\n  king,\n  rook,\n  check,\n  checkmate,\n});\n\nexport type Move = MoveNormal | MoveCastle | MoveEnPassant;\n\nexport const getMoveRole = (move: Move): Role => {\n  switch (move._tag) {\n    case \"Castle\":\n      return \"King\";\n    case \"EnPassant\":\n      return \"Pawn\";\n    case \"Normal\":\n      return move.role;\n  }\n};\n\nexport const getMoveTo = (move: Move): Square => {\n  switch (move._tag) {\n    case \"Castle\": {\n      switch (move.king) {\n        case \"E1\":\n          return move.rook === \"H1\" ? \"G1\" : \"C1\";\n        case \"E8\":\n          return move.rook === \"H8\" ? \"G8\" : \"C8\";\n      }\n    }\n    case \"EnPassant\":\n    case \"Normal\":\n      return move.to;\n  }\n};\n\nexport const getMoveFrom = (move: Move): Square => {\n  switch (move._tag) {\n    case \"Castle\": {\n      return move.king;\n    }\n    case \"EnPassant\":\n    case \"Normal\":\n      return move.from;\n  }\n};\nexport const getMoveCapture = (move: Move): boolean => {\n  switch (move._tag) {\n    case \"Castle\": {\n      return false;\n    }\n    case \"EnPassant\":\n      return true;\n    case \"Normal\":\n      return move.capture !== null;\n  }\n};\n\nexport const moveToUCI = (move: Move): string => {\n  const parts = [\n    getMoveFrom(move),\n    getMoveTo(move),\n    move._tag === \"Normal\" && move.promotion !== null\n      ? roleToUCILetter(move.promotion)\n      : \"\",\n  ];\n\n  return parts.join(\"\").toLowerCase();\n};\n\nexport type Color = \"black\" | \"white\";\n\nexport const otherColor = (color: Color): Color =>\n  color === \"black\" ? \"white\" : \"black\";\n\nexport type ChallengeColor = Color | \"random\";\n\n// export type ClockInitial = { readonly _tag: \"initial\" };\n\n// export const clockInitial = (): ClockInitial => ({ _tag: \"initial\" });\n\n// export type ClockRunning = {\n//   readonly _tag: \"running\";\n//   start_time: number;\n//   remaining_white: number;\n//   remaining_black: number;\n// };\n\n// export const clockRunning = (\n//   start_time: number,\n//   remaining_white: number,\n//   remaining_black: number\n// ): ClockRunning => ({\n//   _tag: \"running\",\n//   start_time,\n//   remaining_white,\n//   remaining_black,\n// });\n\n// export type ClockFlag = {\n//   readonly _tag: \"flag\";\n//   color: Color; // fallen color\n//   other: number; // other's time\n// };\n\n// export const clockFlag = (color: Color, other: number): ClockFlag => ({\n//   _tag: \"flag\",\n//   color,\n//   other,\n// });\n\nexport type ClockState = {\n  interval: number;\n  gameId: string;\n};\n\nexport type Position = {\n  // turn: Color;\n  legalMoves: Move[];\n  fen: string;\n};\n\nexport const position = (legalMoves: Move[], fen: string): Position => ({\n  legalMoves,\n  fen,\n});\n\nexport const FEN_INITIAL_POSITION =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nexport type InputNone = {\n  readonly _tag: \"none\";\n};\n\nexport const inputNone = (): InputNone => ({\n  _tag: \"none\",\n});\n\nexport type InputRole = {\n  readonly _tag: \"role\";\n  role: Role;\n};\n\nexport const inputRole = (role: Role): InputRole => ({\n  _tag: \"role\",\n  role,\n});\n\nexport type InputCandidates = {\n  readonly _tag: \"candidates\";\n  role: Role;\n  candidates: Move[];\n};\n\nexport const inputCandidates = (\n  role: Role,\n  candidates: Move[]\n): InputCandidates => ({\n  _tag: \"candidates\",\n  role,\n  candidates,\n});\n\nexport type InputMove = {\n  readonly _tag: \"move\";\n  move: Move;\n};\n\nexport const inputMove = (move: Move): InputMove => ({\n  _tag: \"move\",\n  move,\n});\n\nexport type SomeInput = InputRole | InputCandidates | InputMove;\nexport type Input = InputNone | SomeInput;\n\nexport const getInputRole = (input: SomeInput): Role => {\n  switch (input._tag) {\n    case \"role\":\n    case \"candidates\":\n      return input.role;\n    case \"move\":\n      return getMoveRole(input.move);\n  }\n};\n\nexport const getInputMove = (input: Input): Nullable<Move> => {\n  switch (input._tag) {\n    case \"none\":\n    case \"role\":\n    case \"candidates\":\n      return null;\n    case \"move\":\n      return input.move;\n  }\n};\n\nexport const getInputTo = (input: Input): Nullable<Square> => {\n  const move = getInputMove(input);\n  return move ? getMoveTo(move) : null;\n};\n\ntype EngineIdle = { readonly _tag: \"idle\" };\nexport const engineIdle = (): EngineIdle => ({ _tag: \"idle\" });\n\ntype EngineComputing = { readonly _tag: \"compute\" };\nexport const engineCompute = (): EngineComputing => ({ _tag: \"compute\" });\n\nexport type EngineScoreNone = { readonly _tag: \"None\" };\nexport type EngineScoreMate = { readonly _tag: \"Mate\"; moves: number };\nexport type EngineScoreCentiPawns = {\n  readonly _tag: \"CentiPawns\";\n  score: number;\n};\nexport type EngineScore =\n  | EngineScoreNone\n  | EngineScoreMate\n  | EngineScoreCentiPawns;\n\nexport const engineScoreNone = (): EngineScore => ({ _tag: \"None\" });\n\ntype EngineMove = {\n  readonly _tag: \"move\";\n  move: Move;\n  legals: Move[];\n  status: string;\n  score: EngineScore;\n};\nexport const engineMove = (\n  move: Move,\n  legals: Move[],\n  score: EngineScore,\n  status: string\n): EngineMove => ({\n  _tag: \"move\",\n  move,\n  legals,\n  score,\n  status,\n});\n\nexport type EngineState = EngineIdle | EngineComputing | EngineMove;\nexport const defaultEngine = (): EngineState => engineIdle();\n\nexport type MoveHist = {\n  readonly _tag: \"hist\";\n  move: Move;\n  legals: Move[];\n  resultingFen: string;\n};\nexport const moveHist = (\n  move: Move,\n  legals: Move[],\n  resultingFen: string\n): MoveHist => ({\n  _tag: \"hist\",\n  move,\n  legals,\n  resultingFen,\n});\n\ntype GameConfig = {\n  black: number;\n  white: number;\n  engineColor: Color;\n  fen: Nullable<string>;\n};\n\nexport const gameConfig = (\n  white: number,\n  black: number,\n  engineColor: Color,\n  position = null as Nullable<string>\n): GameConfig => ({ black, white, engineColor, fen: position });\n\nexport type Eco = {\n  name: string;\n  code: string;\n  fen: string;\n  moves: Move[];\n  pgn: string;\n};\n\nexport type SavedGame = {\n  hist: MoveHist[];\n  config: GameConfig;\n  outcome: Nullable<string>;\n  timestamp: number;\n};\n\nexport const savedGame = (\n  hist: MoveHist[],\n  config: GameConfig,\n  outcome: Nullable<string>,\n  timestamp: number\n): SavedGame => ({\n  hist,\n  config,\n  outcome,\n  timestamp,\n});\nexport type UserConfig_ = {\n  id: string;\n  username: string;\n  httpClient: HttpClient;\n  streamer: Streamer;\n  perfs: { [key: string]: any }; // ??\n};\n\nexport type UserConfig = Omit<UserConfig_, \"perfs\">;\n\nexport const stampEvent = <T>(event: T): T & { timestamp: number } => ({\n  ...event,\n  timestamp: Date.now(),\n});\n\nexport type LichessAI = {\n  readonly _tag: \"lichess-ai\";\n  level: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\n};\n\nexport type SeekRequestSending = {\n  readonly _tag: \"sending\";\n  since: number;\n  request: RequestSeekClock;\n};\n\nexport const seekRequestSending = (\n  request: RequestSeekClock\n): SeekRequestSending => ({\n  _tag: \"sending\",\n  since: Date.now(),\n  request,\n});\n\nexport type SeekRequestSent = {\n  readonly _tag: \"sent\";\n  since: number;\n  request: RequestSeekClock;\n  cancel: () => void;\n};\n\nexport const seekRequestSent = (\n  request: RequestSeekClock,\n  cancel: () => void\n): SeekRequestSent => ({\n  _tag: \"sent\",\n  since: Date.now(),\n  request,\n  cancel,\n});\n\nexport type SeekRequest = SeekRequestSending | SeekRequestSent;\n\nexport type TournamentJoin = {\n  id: string;\n  since: number;\n  interval: number;\n};\n\nexport type Message = {\n  from: string;\n  body: string;\n  timestamp: number;\n};\n\nexport const message = (from: string, body: string): Message =>\n  stampEvent({ from, body });\n\nexport const messageFromChatEvent = ({ username, text }: ChatLineEvent) =>\n  message(username, text);\n","import { none, some } from \"./option.js\";\n\nexport const tryNumber = (n: unknown) => {\n  if (typeof n === \"number\") {\n    return some(n);\n  }\n  if (typeof n === \"string\") {\n    const tn = parseFloat(n);\n    if (!Number.isNaN(tn)) {\n      return some(tn);\n    }\n  }\n  return none;\n};\n\nexport const index = <T>(i: number, xs: T[]) =>\n  i >= 0 && i < xs.length ? some(xs[i]) : none;\n\nexport const iife = <T>(f: () => T) => f();\n\nexport const zip = <T0, T1>(\n  a: T0[] | Readonly<T0[]>,\n  b: T1[] | Readonly<T1[]>\n): [T0, T1][] => {\n  const max = Math.min(a.length, b.length);\n  const result: [T0, T1][] = new Array(max);\n  for (let i = 0; i < max; i += 1) {\n    result[i] = [a[i], b[i]];\n  }\n  return result;\n};\n\nconst withUnit = (suffix: string) => (n: number) => `${n}${suffix}`;\n\nexport const px = withUnit(\"px\");\n\n// export const match =\n//   <D extends string, T extends { _tag: D }>(discriminant: D) =>\n//   <R>(value: T, fn: (value: T) => R) =>\n//     value._tag === discriminant ? some(fn(value)) : none;\n\n// export function convertToMercator(\n//   lonLat: [number, number] | Position\n// ): [number, number] {\n//   var D2R = Math.PI / 180,\n//     // 900913 properties\n//     A = 6378137.0,\n//     MAXEXTENT = 20037508.342789244;\n\n//   // compensate longitudes passing the 180th meridian\n//   // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\n//   var adjusted =\n//     Math.abs(lonLat[0]) <= 180 ? lonLat[0] : lonLat[0] - sign(lonLat[0]) * 360;\n//   var xy: [number, number] = [\n//     A * adjusted * D2R,\n//     A * Math.log(Math.tan(Math.PI * 0.25 + 0.5 * lonLat[1] * D2R)),\n//   ];\n\n//   // if xy value is beyond maxextent (e.g. poles), return maxextent\n//   if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n//   if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n//   if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n//   if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n\n//   return xy;\n// }\n\n// function sign(x: number) {\n//   return x < 0 ? -1 : x > 0 ? 1 : 0;\n// }\n\nexport const dist = (a: [number, number], b: [number, number]) =>\n  Math.sqrt(Math.pow(b[0] - a[0], 2) + Math.pow(b[1] - a[1], 2));\n\nexport const toggle = <R = void>(\n  left: () => R,\n  right: () => R,\n  init = false\n) => {\n  let value = init;\n\n  return () => {\n    value = !value;\n    return value ? right() : left();\n  };\n};\n\nexport const setClipboard = (text: string) =>\n  navigator.clipboard\n    .writeText(text)\n    .catch((err) => console.warn(\"Failed to set cliploard\", text, err));\n\nexport const group = <T>(n: number, as: T[]): T[][] => {\n  const result: T[][] = [[]];\n  for (let i = 0; i < as.length; i++) {\n    let index = Math.floor(i / n);\n    if (index === result.length) {\n      result.push([]);\n    }\n    result[index].push(as[i]);\n  }\n  return result;\n};\n\n// we could play with https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/dns/resolve\n// but it's basically just for me at home :)\nconst localPatterns = [\n  \"localhost\",\n  \"127.0.0.1\",\n  \"10\\\\..+\",\n  \"172\\\\.16\\\\..+\",\n  \"192\\\\.168\\\\..+\",\n].map((p) => new RegExp(p));\nexport const isPrivateIP = (hostname: string) =>\n  localPatterns.some((re) => re.test(hostname));\n\nexport const letMap = <T, R>(\n  a: null | undefined | T,\n  f: (a: T) => R\n): null | R => (a !== null && a !== undefined ? f(a) : null);\n\nexport const once = (f: () => void) => {\n  let ran = false;\n  return () => {\n    if (!ran) {\n      ran = true;\n      f();\n    }\n  };\n};\n\nexport const defaultTimeControls: [number, number][] = [\n  // [10, 0],\n  [15, 10],\n  [30, 20],\n  [40, 30],\n  // [50, 0],\n  [60, 60],\n  [90, 60],\n  [120, 60],\n];\n\n// from https://github.com/behnammodi/polyfill/blob/master/string.polyfill.js\nexport const padStart = (\n  source: string,\n  targetLength: number,\n  padString = \" \"\n) => {\n  targetLength = targetLength >> 0; // floor if number or convert non-number to 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (source.length > targetLength) {\n    return String(source);\n  } else {\n    targetLength = targetLength - source.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length); // append to original to ensure we are longer than needed\n    }\n    return padString.slice(0, targetLength) + String(source);\n  }\n};\n","interface ToString {\n  toString(): string;\n}\n\nexport const attrs = <E extends HTMLElement>(\n  e: E,\n  f: (s: (k: string, v: ToString) => void) => void\n) => {\n  const set = (k: string, v: ToString) => {\n    e.setAttribute(k, v.toString());\n  };\n  f(set);\n  return e;\n};\n\nexport const events = <E extends HTMLElement>(\n  e: E,\n  f: (\n    s: <K extends keyof HTMLElementEventMap>(\n      k: K,\n      listener: (ev: HTMLElementEventMap[K]) => void\n    ) => void\n  ) => void\n) => {\n  const add = <K extends keyof HTMLElementEventMap>(\n    k: K,\n    listener: (ev: HTMLElementEventMap[K]) => void\n  ) => {\n    e.addEventListener(k, listener);\n  };\n  f(add);\n  return e;\n};\n\nexport function emptyElement(elem: Node) {\n  while (elem.firstChild) {\n    removeElement(elem.firstChild);\n  }\n  return elem;\n}\n\nexport function removeElement(elem: Node, keepChildren = false) {\n  if (!keepChildren) {\n    emptyElement(elem);\n  }\n  const parent = elem.parentNode;\n  if (parent) {\n    parent.removeChild(elem);\n  }\n}\n","import { attrs, emptyElement } from \"./dom.js\";\nimport { isOption, map, Option } from \"./option.js\";\n\nexport interface HTMLTags {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  big: HTMLElement;\n  blockquote: HTMLElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLElement;\n  details: HTMLElement;\n  dfn: HTMLElement;\n  dialog: HTMLElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  keygen: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  menu: HTMLElement;\n  menuitem: HTMLElement;\n  meta: HTMLMetaElement;\n  meter: HTMLElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  // object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\nconst createBase = <T extends keyof HTMLTags>(tag: T): HTMLTags[T] =>\n  document.createElement(tag) as HTMLTags[T];\n\nexport const appendText = (text: string) => (node: HTMLElement) => {\n  return node.appendChild(document.createTextNode(text));\n};\n\nexport type BaseNode = Element | HTMLElement | string | number;\n\nexport type AcNode = BaseNode | Option<BaseNode>;\n\nconst createWithClass = <T extends keyof HTMLTags>(\n  tag: T,\n  className: string\n) => {\n  const node = createBase(tag);\n  node.setAttribute(\"class\", className);\n  return node;\n};\n\nconst appendLiteral = (node: HTMLElement) => (value: string | number) => {\n  if (typeof value === \"number\") {\n    appendText(value.toLocaleString())(node);\n  } else {\n    appendText(value)(node);\n  }\n};\n\nconst appendElement = (node: HTMLElement) => (value: HTMLElement | Element) => {\n  node.appendChild(value);\n};\n\nconst appendBaseNode = (node: HTMLElement, value: BaseNode) => {\n  if (typeof value === \"number\" || typeof value === \"string\") {\n    appendLiteral(node)(value);\n  } else {\n    appendElement(node)(value);\n  }\n};\n\nexport const appendNode = (node: HTMLElement) => (value: AcNode) => {\n  if (isOption(value)) {\n    map((inner: BaseNode) => appendBaseNode(node, inner))(value);\n  } else {\n    appendBaseNode(node, value);\n  }\n};\n\nexport const replaceNodeContent =\n  (node: HTMLElement) =>\n  (...values: AcNode[]) => {\n    const append = appendNode(node);\n    emptyElement(node);\n    values.forEach(append);\n  };\n\nexport const hasClass =\n  (c: string) =>\n  <T extends Element>(node: T) =>\n    node.classList.contains(c);\n\nexport const addClass =\n  (...c: string[]) =>\n  <T extends Element>(node: T) => {\n    node.classList.add(...c);\n    return node;\n  };\n\nexport const removeClass =\n  (...c: string[]) =>\n  <T extends Element>(node: T) => {\n    node.classList.remove(...c);\n    return node;\n  };\n\nexport const toggleClass =\n  (c: string) =>\n  <T extends Element>(node: T) => {\n    node.classList.contains(c)\n      ? node.classList.remove(c)\n      : node.classList.add(c);\n    return node;\n  };\n\nconst createWithChildren = <T extends keyof HTMLTags>(\n  tag: T,\n  className: string,\n  ns: AcNode[]\n) => {\n  const node = createWithClass(tag, className);\n  ns.forEach(appendNode(node));\n  return node;\n};\n\nexport const DIV = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"div\", className, ns);\n\nexport const PARA = (...ns: AcNode[]) => createWithChildren(\"p\", \"\", ns);\n\nexport const SPAN = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"span\", className, ns);\n\nexport const LABEL = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"label\", className, ns);\n\nexport const FIELDSET = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"fieldset\", className, ns);\n\nexport const H1 = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"h1\", className, ns);\n\nexport const H2 = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"h2\", className, ns);\n\nexport const H3 = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"h3\", className, ns);\n\nexport const BUTTON = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"button\", className, ns);\n\nexport const SUPERSCRIPT = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"sup\", className, ns);\n\nexport const TEXTAREA = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"textarea\", className, ns);\n\nexport const PRE = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"pre\", className, ns);\n\nexport type InputType =\n  | \"checkbox\"\n  | \"date\"\n  | \"button\"\n  | \"email\"\n  | \"color\"\n  | \"hidden\"\n  | \"datetime-local\"\n  | \"month\"\n  | \"file\"\n  | \"password\"\n  | \"image\"\n  | \"range\"\n  | \"number\"\n  | \"search\"\n  | \"radio\"\n  | \"tel\"\n  | \"reset\"\n  | \"time\"\n  | \"submit\"\n  | \"week\"\n  | \"text\"\n  | \"url\";\n\nexport const INPUT = (className: string, inputType: InputType) =>\n  attrs(createWithClass(\"input\", className), (set) => set(\"type\", inputType));\n\nexport const ANCHOR = (className: string, href: string, ...ns: AcNode[]) =>\n  attrs(createWithChildren(\"a\", className, ns), (set) => set(\"href\", href));\n\nexport const IMG = (className: string, src: string) => {\n  const el = createWithClass(\"img\", className);\n  el.setAttribute(\"src\", src);\n  return el;\n};\n\nexport const CANVAS = (className: string, width: number, height: number) =>\n  attrs(createWithClass(\"canvas\", className), (set) => {\n    set(\"width\", width);\n    set(\"height\", height);\n  });\n\nexport const IFRAME = (className: string, src: string) =>\n  attrs(createWithClass(\"iframe\", className), (set) => {\n    set(\"src\", src);\n  });\n\nexport const AUDIO = (className: string, src: string) =>\n  attrs(createWithClass(\"audio\", className), (set) => {\n    set(\"src\", src);\n  });\n\nexport const DETAILS = (\n  className: string,\n  summary: AcNode,\n  ...rest: AcNode[]\n) => {\n  const details = createWithChildren(\"details\", className, [\n    createWithChildren(\"summary\", \"\", [summary]),\n  ]);\n  const append = appendNode(details);\n  rest.forEach(append);\n  return details;\n};\n","// @generated by Peggy 4.2.0.\n//\n// https://peggyjs.org/\n\n\"use strict\";\n\n\n\n  function rootNode(comment) {\n  \treturn comment !== null ? { comment, variations: [] } : { variations: []}\n  }\n\n  function node(move, suffix, nag, comment, variations) {\n  \tconst node = { move, variations }\n\n    if (suffix) {\n    \tnode.suffix = suffix\n    }\n\n    if (nag) {\n    \tnode.nag = nag\n    }\n\n    if (comment !== null) {\n    \tnode.comment = comment\n    }\n\n    return node\n  }\n\n  function lineToTree(...nodes) {\n  \tconst [root, ...rest] = nodes;\n\n    let parent = root\n\n    for (const child of rest) {\n    \tif (child !== null) {\n        \tparent.variations = [child, ...child.variations]\n            child.variations = []\n            parent = child\n        }\n    }\n\n  \treturn root\n  }\n\n  function pgn(headers, game) {\n  \tif (game.marker && game.marker.comment) {\n    \tlet node = game.root\n        while (true) {\n        \tconst next = node.variations[0]\n            if (!next) {\n            \tnode.comment = game.marker.comment\n            \tbreak\n            }\n            node = next\n        }\n    }\n\n  \treturn {\n    \theaders,\n        root: game.root,\n        result: (game.marker && game.marker.result) ?? undefined\n    }\n  }\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\n      ? this.location.source.offset(s)\n      : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + offset_s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { pgn: peg$parsepgn };\n  var peg$startRuleFunction = peg$parsepgn;\n\n  var peg$c0 = \"[\";\n  var peg$c1 = \"\\\"\";\n  var peg$c2 = \"]\";\n  var peg$c3 = \".\";\n  var peg$c4 = \"O-O-O\";\n  var peg$c5 = \"O-O\";\n  var peg$c6 = \"0-0-0\";\n  var peg$c7 = \"0-0\";\n  var peg$c8 = \"$\";\n  var peg$c9 = \"{\";\n  var peg$c10 = \"}\";\n  var peg$c11 = \";\";\n  var peg$c12 = \"(\";\n  var peg$c13 = \")\";\n  var peg$c14 = \"1-0\";\n  var peg$c15 = \"0-1\";\n  var peg$c16 = \"1/2-1/2\";\n  var peg$c17 = \"*\";\n\n  var peg$r0 = /^[a-zA-Z]/;\n  var peg$r1 = /^[^\"]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[.]/;\n  var peg$r4 = /^[a-zA-Z1-8\\-=]/;\n  var peg$r5 = /^[+#]/;\n  var peg$r6 = /^[!?]/;\n  var peg$r7 = /^[^}]/;\n  var peg$r8 = /^[^\\r\\n]/;\n  var peg$r9 = /^[ \\t\\r\\n]/;\n\n  var peg$e0 = peg$otherExpectation(\"tag pair\");\n  var peg$e1 = peg$literalExpectation(\"[\", false);\n  var peg$e2 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e3 = peg$literalExpectation(\"]\", false);\n  var peg$e4 = peg$otherExpectation(\"tag name\");\n  var peg$e5 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n  var peg$e6 = peg$otherExpectation(\"tag value\");\n  var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e8 = peg$otherExpectation(\"move number\");\n  var peg$e9 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\".\"], false, false);\n  var peg$e12 = peg$otherExpectation(\"standard algebraic notation\");\n  var peg$e13 = peg$literalExpectation(\"O-O-O\", false);\n  var peg$e14 = peg$literalExpectation(\"O-O\", false);\n  var peg$e15 = peg$literalExpectation(\"0-0-0\", false);\n  var peg$e16 = peg$literalExpectation(\"0-0\", false);\n  var peg$e17 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"1\", \"8\"], \"-\", \"=\"], false, false);\n  var peg$e18 = peg$classExpectation([\"+\", \"#\"], false, false);\n  var peg$e19 = peg$otherExpectation(\"suffix annotation\");\n  var peg$e20 = peg$classExpectation([\"!\", \"?\"], false, false);\n  var peg$e21 = peg$otherExpectation(\"NAG\");\n  var peg$e22 = peg$literalExpectation(\"$\", false);\n  var peg$e23 = peg$otherExpectation(\"brace comment\");\n  var peg$e24 = peg$literalExpectation(\"{\", false);\n  var peg$e25 = peg$classExpectation([\"}\"], true, false);\n  var peg$e26 = peg$literalExpectation(\"}\", false);\n  var peg$e27 = peg$otherExpectation(\"rest of line comment\");\n  var peg$e28 = peg$literalExpectation(\";\", false);\n  var peg$e29 = peg$classExpectation([\"\\r\", \"\\n\"], true, false);\n  var peg$e30 = peg$otherExpectation(\"variation\");\n  var peg$e31 = peg$literalExpectation(\"(\", false);\n  var peg$e32 = peg$literalExpectation(\")\", false);\n  var peg$e33 = peg$otherExpectation(\"game termination marker\");\n  var peg$e34 = peg$literalExpectation(\"1-0\", false);\n  var peg$e35 = peg$literalExpectation(\"0-1\", false);\n  var peg$e36 = peg$literalExpectation(\"1/2-1/2\", false);\n  var peg$e37 = peg$literalExpectation(\"*\", false);\n  var peg$e38 = peg$otherExpectation(\"whitespace\");\n  var peg$e39 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n\n  var peg$f0 = function(headers, game) { return pgn(headers, game) };\n  var peg$f1 = function(tagPairs) { return Object.fromEntries(tagPairs) };\n  var peg$f2 = function(tagName, tagValue) { return [tagName, tagValue] };\n  var peg$f3 = function(root, marker) { return { root, marker} };\n  var peg$f4 = function(comment, moves) { return lineToTree(rootNode(comment), ...moves.flat()) };\n  var peg$f5 = function(san, suffix, nag, comment, variations) { return node(san, suffix, nag, comment, variations) };\n  var peg$f6 = function(nag) { return nag };\n  var peg$f7 = function(comment) { return comment.replace(/[\\r\\n]+/g, \" \") };\n  var peg$f8 = function(comment) { return comment.trim() };\n  var peg$f9 = function(line) { return line };\n  var peg$f10 = function(result, comment) { return { result, comment } };\n  var peg$currPos = options.peg$currPos | 0;\n  var peg$savedPos = peg$currPos;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = peg$currPos;\n  var peg$maxFailExpected = options.peg$maxFailExpected || [];\n  var peg$silentFails = options.peg$silentFails | 0;\n\n  var peg$result;\n\n  if (options.startRule) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      if (pos >= peg$posDetailsCache.length) {\n        p = peg$posDetailsCache.length - 1;\n      } else {\n        p = pos;\n        while (!peg$posDetailsCache[--p]) {}\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsepgn() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsetagPairSection();\n    s2 = peg$parsemoveTextSection();\n    peg$savedPos = s0;\n    s0 = peg$f0(s1, s2);\n\n    return s0;\n  }\n\n  function peg$parsetagPairSection() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsetagPair();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsetagPair();\n    }\n    s2 = peg$parse_();\n    peg$savedPos = s0;\n    s0 = peg$f1(s1);\n\n    return s0;\n  }\n\n  function peg$parsetagPair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s2 = peg$c0;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsetagName();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s6 = peg$c1;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e2); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsetagValue();\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s8 = peg$c1;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parse_();\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s10 = peg$c2;\n              peg$currPos++;\n            } else {\n              s10 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e3); }\n            }\n            if (s10 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f2(s4, s7);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetagName() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r0.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = input.charAt(peg$currPos);\n        if (peg$r0.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e5); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetagValue() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r1.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = input.charAt(peg$currPos);\n      if (peg$r1.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e7); }\n      }\n    }\n    s0 = input.substring(s0, peg$currPos);\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e6); }\n\n    return s0;\n  }\n\n  function peg$parsemoveTextSection() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseline();\n    s2 = peg$parse_();\n    s3 = peg$parsegameTerminationMarker();\n    if (s3 === peg$FAILED) {\n      s3 = null;\n    }\n    s4 = peg$parse_();\n    peg$savedPos = s0;\n    s0 = peg$f3(s1, s3);\n\n    return s0;\n  }\n\n  function peg$parseline() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecomment();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = [];\n    s3 = peg$parsemove();\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      s3 = peg$parsemove();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f4(s1, s2);\n\n    return s0;\n  }\n\n  function peg$parsemove() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parsemoveNumber();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parse_();\n    s4 = peg$parsesan();\n    if (s4 !== peg$FAILED) {\n      s5 = peg$parsesuffixAnnotation();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = [];\n      s7 = peg$parsenag();\n      while (s7 !== peg$FAILED) {\n        s6.push(s7);\n        s7 = peg$parsenag();\n      }\n      s7 = peg$parse_();\n      s8 = peg$parsecomment();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      s9 = [];\n      s10 = peg$parsevariation();\n      while (s10 !== peg$FAILED) {\n        s9.push(s10);\n        s10 = peg$parsevariation();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f5(s4, s5, s6, s8, s9);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemoveNumber() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r2.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = input.charAt(peg$currPos);\n      if (peg$r2.test(s2)) {\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c3;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = [];\n      s5 = input.charAt(peg$currPos);\n      if (peg$r3.test(s5)) {\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e11); }\n      }\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = input.charAt(peg$currPos);\n        if (peg$r3.test(s5)) {\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e11); }\n        }\n      }\n      s1 = [s1, s2, s3, s4];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesan() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s2 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e13); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c5) {\n        s2 = peg$c5;\n        peg$currPos += 3;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e14); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c6) {\n          s2 = peg$c6;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e15); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c7) {\n            s2 = peg$c7;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e16); }\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = input.charAt(peg$currPos);\n            if (peg$r0.test(s3)) {\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e5); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = input.charAt(peg$currPos);\n              if (peg$r4.test(s5)) {\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e17); }\n              }\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = input.charAt(peg$currPos);\n                  if (peg$r4.test(s5)) {\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$e17); }\n                  }\n                }\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = input.charAt(peg$currPos);\n      if (peg$r5.test(s3)) {\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e18); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesuffixAnnotation() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = input.charAt(peg$currPos);\n    if (peg$r6.test(s2)) {\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e20); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (s1.length >= 2) {\n        s2 = peg$FAILED;\n      } else {\n        s2 = input.charAt(peg$currPos);\n        if (peg$r6.test(s2)) {\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e20); }\n        }\n      }\n    }\n    if (s1.length < 1) {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenag() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c8;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e22); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = input.charAt(peg$currPos);\n      if (peg$r2.test(s5)) {\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = input.charAt(peg$currPos);\n          if (peg$r2.test(s5)) {\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e9); }\n          }\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = input.substring(s3, peg$currPos);\n      } else {\n        s3 = s4;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f6(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0;\n\n    s0 = peg$parsebraceComment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parserestOfLineComment();\n    }\n\n    return s0;\n  }\n\n  function peg$parsebraceComment() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c9;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e24); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = input.charAt(peg$currPos);\n      if (peg$r7.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e25); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = input.charAt(peg$currPos);\n        if (peg$r7.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e25); }\n        }\n      }\n      s2 = input.substring(s2, peg$currPos);\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s3 = peg$c10;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e26); }\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f7(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n\n    return s0;\n  }\n\n  function peg$parserestOfLineComment() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e28); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = input.charAt(peg$currPos);\n      if (peg$r8.test(s4)) {\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e29); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = input.charAt(peg$currPos);\n        if (peg$r8.test(s4)) {\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e29); }\n        }\n      }\n      s2 = input.substring(s2, peg$currPos);\n      peg$savedPos = s0;\n      s0 = peg$f8(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevariation() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c12;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e31); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseline();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c13;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e32); }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f9(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e30); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsegameTerminationMarker() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c14) {\n      s1 = peg$c14;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e35); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c16) {\n          s1 = peg$c16;\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e36); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s1 = peg$c17;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e37); }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parsecomment();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f10(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = input.charAt(peg$currPos);\n    if (peg$r9.test(s1)) {\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = input.charAt(peg$currPos);\n      if (peg$r9.test(s1)) {\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e39); }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e38); }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (options.peg$library) {\n    return /** @type {any} */ ({\n      peg$result,\n      peg$currPos,\n      peg$FAILED,\n      peg$maxFailExpected,\n      peg$maxFailPos\n    });\n  }\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  StartRules: [\"pgn\"],\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","/**\n * @license\n * Copyright (c) 2025, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\nimport { parse } from './pgn';\nconst MASK64 = 0xffffffffffffffffn;\nfunction rotl(x, k) {\n    return ((x << k) | (x >> (64n - k))) & 0xffffffffffffffffn;\n}\nfunction wrappingMul(x, y) {\n    return (x * y) & MASK64;\n}\n// xoroshiro128**\nexport function xoroshiro128(state) {\n    return function () {\n        let s0 = BigInt(state & MASK64);\n        let s1 = BigInt((state >> 64n) & MASK64);\n        const result = wrappingMul(rotl(wrappingMul(s0, 5n), 7n), 9n);\n        s1 ^= s0;\n        s0 = (rotl(s0, 24n) ^ s1 ^ (s1 << 16n)) & MASK64;\n        s1 = rotl(s1, 37n);\n        state = (s1 << 64n) | s0;\n        return result;\n    };\n}\nconst rand = xoroshiro128(0xa187eb39cdcaed8f31c4b365b102e01en);\nconst PIECE_KEYS = Array.from({ length: 2 }, () => Array.from({ length: 6 }, () => Array.from({ length: 128 }, () => rand())));\nconst EP_KEYS = Array.from({ length: 8 }, () => rand());\nconst CASTLING_KEYS = Array.from({ length: 16 }, () => rand());\nconst SIDE_KEY = rand();\nexport const WHITE = 'w';\nexport const BLACK = 'b';\nexport const PAWN = 'p';\nexport const KNIGHT = 'n';\nexport const BISHOP = 'b';\nexport const ROOK = 'r';\nexport const QUEEN = 'q';\nexport const KING = 'k';\nexport const DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\nexport class Move {\n    color;\n    from;\n    to;\n    piece;\n    captured;\n    promotion;\n    /**\n     * @deprecated This field is deprecated and will be removed in version 2.0.0.\n     * Please use move descriptor functions instead: `isCapture`, `isPromotion`,\n     * `isEnPassant`, `isKingsideCastle`, `isQueensideCastle`, `isCastle`, and\n     * `isBigPawn`\n     */\n    flags;\n    san;\n    lan;\n    before;\n    after;\n    constructor(chess, internal) {\n        const { color, piece, from, to, flags, captured, promotion } = internal;\n        const fromAlgebraic = algebraic(from);\n        const toAlgebraic = algebraic(to);\n        this.color = color;\n        this.piece = piece;\n        this.from = fromAlgebraic;\n        this.to = toAlgebraic;\n        /*\n         * HACK: The chess['_method']() calls below invoke private methods in the\n         * Chess class to generate SAN and FEN. It's a bit of a hack, but makes the\n         * code cleaner elsewhere.\n         */\n        this.san = chess['_moveToSan'](internal, chess['_moves']({ legal: true }));\n        this.lan = fromAlgebraic + toAlgebraic;\n        this.before = chess.fen();\n        // Generate the FEN for the 'after' key\n        chess['_makeMove'](internal);\n        this.after = chess.fen();\n        chess['_undoMove']();\n        // Build the text representation of the move flags\n        this.flags = '';\n        for (const flag in BITS) {\n            if (BITS[flag] & flags) {\n                this.flags += FLAGS[flag];\n            }\n        }\n        if (captured) {\n            this.captured = captured;\n        }\n        if (promotion) {\n            this.promotion = promotion;\n            this.lan += promotion;\n        }\n    }\n    isCapture() {\n        return this.flags.indexOf(FLAGS['CAPTURE']) > -1;\n    }\n    isPromotion() {\n        return this.flags.indexOf(FLAGS['PROMOTION']) > -1;\n    }\n    isEnPassant() {\n        return this.flags.indexOf(FLAGS['EP_CAPTURE']) > -1;\n    }\n    isKingsideCastle() {\n        return this.flags.indexOf(FLAGS['KSIDE_CASTLE']) > -1;\n    }\n    isQueensideCastle() {\n        return this.flags.indexOf(FLAGS['QSIDE_CASTLE']) > -1;\n    }\n    isBigPawn() {\n        return this.flags.indexOf(FLAGS['BIG_PAWN']) > -1;\n    }\n}\nconst EMPTY = -1;\nconst FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q',\n};\n// prettier-ignore\nexport const SQUARES = [\n    'a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8',\n    'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7',\n    'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6',\n    'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5',\n    'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4',\n    'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3',\n    'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2',\n    'a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1'\n];\nconst BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64,\n};\n/* eslint-disable @typescript-eslint/naming-convention */\n// these are required, according to spec\nexport const SEVEN_TAG_ROSTER = {\n    Event: '?',\n    Site: '?',\n    Date: '????.??.??',\n    Round: '?',\n    White: '?',\n    Black: '?',\n    Result: '*',\n};\n/**\n * These nulls are placeholders to fix the order of tags (as they appear in PGN spec); null values will be\n * eliminated in getHeaders()\n */\nconst SUPLEMENTAL_TAGS = {\n    WhiteTitle: null,\n    BlackTitle: null,\n    WhiteElo: null,\n    BlackElo: null,\n    WhiteUSCF: null,\n    BlackUSCF: null,\n    WhiteNA: null,\n    BlackNA: null,\n    WhiteType: null,\n    BlackType: null,\n    EventDate: null,\n    EventSponsor: null,\n    Section: null,\n    Stage: null,\n    Board: null,\n    Opening: null,\n    Variation: null,\n    SubVariation: null,\n    ECO: null,\n    NIC: null,\n    Time: null,\n    UTCTime: null,\n    UTCDate: null,\n    TimeControl: null,\n    SetUp: null,\n    FEN: null,\n    Termination: null,\n    Annotator: null,\n    Mode: null,\n    PlyCount: null,\n};\nconst HEADER_TEMPLATE = {\n    ...SEVEN_TAG_ROSTER,\n    ...SUPLEMENTAL_TAGS,\n};\n/* eslint-enable @typescript-eslint/naming-convention */\n/*\n * NOTES ABOUT 0x88 MOVE GENERATION ALGORITHM\n * ----------------------------------------------------------------------------\n * From https://github.com/jhlywa/chess.js/issues/230\n *\n * A lot of people are confused when they first see the internal representation\n * of chess.js. It uses the 0x88 Move Generation Algorithm which internally\n * stores the board as an 8x16 array. This is purely for efficiency but has a\n * couple of interesting benefits:\n *\n * 1. 0x88 offers a very inexpensive \"off the board\" check. Bitwise AND (&) any\n *    square with 0x88, if the result is non-zero then the square is off the\n *    board. For example, assuming a knight square A8 (0 in 0x88 notation),\n *    there are 8 possible directions in which the knight can move. These\n *    directions are relative to the 8x16 board and are stored in the\n *    PIECE_OFFSETS map. One possible move is A8 - 18 (up one square, and two\n *    squares to the left - which is off the board). 0 - 18 = -18 & 0x88 = 0x88\n *    (because of two-complement representation of -18). The non-zero result\n *    means the square is off the board and the move is illegal. Take the\n *    opposite move (from A8 to C7), 0 + 18 = 18 & 0x88 = 0. A result of zero\n *    means the square is on the board.\n *\n * 2. The relative distance (or difference) between two squares on a 8x16 board\n *    is unique and can be used to inexpensively determine if a piece on a\n *    square can attack any other arbitrary square. For example, let's see if a\n *    pawn on E7 can attack E2. The difference between E7 (20) - E2 (100) is\n *    -80. We add 119 to make the ATTACKS array index non-negative (because the\n *    worst case difference is A8 - H1 = -119). The ATTACKS array contains a\n *    bitmask of pieces that can attack from that distance and direction.\n *    ATTACKS[-80 + 119=39] gives us 24 or 0b11000 in binary. Look at the\n *    PIECE_MASKS map to determine the mask for a given piece type. In our pawn\n *    example, we would check to see if 24 & 0x1 is non-zero, which it is\n *    not. So, naturally, a pawn on E7 can't attack a piece on E2. However, a\n *    rook can since 24 & 0x8 is non-zero. The only thing left to check is that\n *    there are no blocking pieces between E7 and E2. That's where the RAYS\n *    array comes in. It provides an offset (in this case 16) to add to E7 (20)\n *    to check for blocking pieces. E7 (20) + 16 = E6 (36) + 16 = E5 (52) etc.\n */\n// prettier-ignore\n// eslint-disable-next-line\nconst Ox88 = {\n    a8: 0, b8: 1, c8: 2, d8: 3, e8: 4, f8: 5, g8: 6, h8: 7,\n    a7: 16, b7: 17, c7: 18, d7: 19, e7: 20, f7: 21, g7: 22, h7: 23,\n    a6: 32, b6: 33, c6: 34, d6: 35, e6: 36, f6: 37, g6: 38, h6: 39,\n    a5: 48, b5: 49, c5: 50, d5: 51, e5: 52, f5: 53, g5: 54, h5: 55,\n    a4: 64, b4: 65, c4: 66, d4: 67, e4: 68, f4: 69, g4: 70, h4: 71,\n    a3: 80, b3: 81, c3: 82, d3: 83, e3: 84, f3: 85, g3: 86, h3: 87,\n    a2: 96, b2: 97, c2: 98, d2: 99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n};\nconst PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15],\n};\nconst PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1],\n};\n// prettier-ignore\nconst ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0,\n    0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n    0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n    0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n    0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0,\n    0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n    0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n    0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n    0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20\n];\n// prettier-ignore\nconst RAYS = [\n    17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0,\n    0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0,\n    0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0,\n    0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0,\n    0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0,\n    0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0,\n    0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,\n    0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0,\n    0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0,\n    -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17\n];\nconst PIECE_MASKS = { p: 0x1, n: 0x2, b: 0x4, r: 0x8, q: 0x10, k: 0x20 };\nconst SYMBOLS = 'pnbrqkPNBRQK';\nconst PROMOTIONS = [KNIGHT, BISHOP, ROOK, QUEEN];\nconst RANK_1 = 7;\nconst RANK_2 = 6;\n/*\n * const RANK_3 = 5\n * const RANK_4 = 4\n * const RANK_5 = 3\n * const RANK_6 = 2\n */\nconst RANK_7 = 1;\nconst RANK_8 = 0;\nconst SIDES = {\n    [KING]: BITS.KSIDE_CASTLE,\n    [QUEEN]: BITS.QSIDE_CASTLE,\n};\nconst ROOKS = {\n    w: [\n        { square: Ox88.a1, flag: BITS.QSIDE_CASTLE },\n        { square: Ox88.h1, flag: BITS.KSIDE_CASTLE },\n    ],\n    b: [\n        { square: Ox88.a8, flag: BITS.QSIDE_CASTLE },\n        { square: Ox88.h8, flag: BITS.KSIDE_CASTLE },\n    ],\n};\nconst SECOND_RANK = { b: RANK_7, w: RANK_2 };\n// Extracts the zero-based rank of an 0x88 square.\nfunction rank(square) {\n    return square >> 4;\n}\n// Extracts the zero-based file of an 0x88 square.\nfunction file(square) {\n    return square & 0xf;\n}\nfunction isDigit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n}\n// Converts a 0x88 square to algebraic notation.\nfunction algebraic(square) {\n    const f = file(square);\n    const r = rank(square);\n    return ('abcdefgh'.substring(f, f + 1) +\n        '87654321'.substring(r, r + 1));\n}\nfunction swapColor(color) {\n    return color === WHITE ? BLACK : WHITE;\n}\nexport function validateFen(fen) {\n    // 1st criterion: 6 space-seperated fields?\n    const tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: must contain six space-delimited fields',\n        };\n    }\n    // 2nd criterion: move number field is a integer value > 0?\n    const moveNumber = parseInt(tokens[5], 10);\n    if (isNaN(moveNumber) || moveNumber <= 0) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: move number must be a positive integer',\n        };\n    }\n    // 3rd criterion: half move counter is an integer >= 0?\n    const halfMoves = parseInt(tokens[4], 10);\n    if (isNaN(halfMoves) || halfMoves < 0) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: half move counter number must be a non-negative integer',\n        };\n    }\n    // 4th criterion: 4th field is a valid e.p.-string?\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n        return { ok: false, error: 'Invalid FEN: en-passant square is invalid' };\n    }\n    // 5th criterion: 3th field is a valid castle-string?\n    if (/[^kKqQ-]/.test(tokens[2])) {\n        return { ok: false, error: 'Invalid FEN: castling availability is invalid' };\n    }\n    // 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)?\n    if (!/^(w|b)$/.test(tokens[1])) {\n        return { ok: false, error: 'Invalid FEN: side-to-move is invalid' };\n    }\n    // 7th criterion: 1st field contains 8 rows?\n    const rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n        return {\n            ok: false,\n            error: \"Invalid FEN: piece data does not contain 8 '/'-delimited rows\",\n        };\n    }\n    // 8th criterion: every row is valid?\n    for (let i = 0; i < rows.length; i++) {\n        // check for right sum of fields AND not two numbers in succession\n        let sumFields = 0;\n        let previousWasNumber = false;\n        for (let k = 0; k < rows[i].length; k++) {\n            if (isDigit(rows[i][k])) {\n                if (previousWasNumber) {\n                    return {\n                        ok: false,\n                        error: 'Invalid FEN: piece data is invalid (consecutive number)',\n                    };\n                }\n                sumFields += parseInt(rows[i][k], 10);\n                previousWasNumber = true;\n            }\n            else {\n                if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                    return {\n                        ok: false,\n                        error: 'Invalid FEN: piece data is invalid (invalid piece)',\n                    };\n                }\n                sumFields += 1;\n                previousWasNumber = false;\n            }\n        }\n        if (sumFields !== 8) {\n            return {\n                ok: false,\n                error: 'Invalid FEN: piece data is invalid (too many squares in rank)',\n            };\n        }\n    }\n    // 9th criterion: is en-passant square legal?\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n        return { ok: false, error: 'Invalid FEN: illegal en-passant square' };\n    }\n    // 10th criterion: does chess position contain exact two kings?\n    const kings = [\n        { color: 'white', regex: /K/g },\n        { color: 'black', regex: /k/g },\n    ];\n    for (const { color, regex } of kings) {\n        if (!regex.test(tokens[0])) {\n            return { ok: false, error: `Invalid FEN: missing ${color} king` };\n        }\n        if ((tokens[0].match(regex) || []).length > 1) {\n            return { ok: false, error: `Invalid FEN: too many ${color} kings` };\n        }\n    }\n    // 11th criterion: are any pawns on the first or eighth rows?\n    if (Array.from(rows[0] + rows[7]).some((char) => char.toUpperCase() === 'P')) {\n        return {\n            ok: false,\n            error: 'Invalid FEN: some pawns are on the edge rows',\n        };\n    }\n    return { ok: true };\n}\n// this function is used to uniquely identify ambiguous moves\nfunction getDisambiguator(move, moves) {\n    const from = move.from;\n    const to = move.to;\n    const piece = move.piece;\n    let ambiguities = 0;\n    let sameRank = 0;\n    let sameFile = 0;\n    for (let i = 0, len = moves.length; i < len; i++) {\n        const ambigFrom = moves[i].from;\n        const ambigTo = moves[i].to;\n        const ambigPiece = moves[i].piece;\n        /*\n         * if a move of the same piece type ends on the same to square, we'll need\n         * to add a disambiguator to the algebraic notation\n         */\n        if (piece === ambigPiece && from !== ambigFrom && to === ambigTo) {\n            ambiguities++;\n            if (rank(from) === rank(ambigFrom)) {\n                sameRank++;\n            }\n            if (file(from) === file(ambigFrom)) {\n                sameFile++;\n            }\n        }\n    }\n    if (ambiguities > 0) {\n        if (sameRank > 0 && sameFile > 0) {\n            /*\n             * if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */\n            return algebraic(from);\n        }\n        else if (sameFile > 0) {\n            /*\n             * if the moving piece rests on the same file, use the rank symbol as the\n             * disambiguator\n             */\n            return algebraic(from).charAt(1);\n        }\n        else {\n            // else use the file symbol\n            return algebraic(from).charAt(0);\n        }\n    }\n    return '';\n}\nfunction addMove(moves, color, from, to, piece, captured = undefined, flags = BITS.NORMAL) {\n    const r = rank(to);\n    if (piece === PAWN && (r === RANK_1 || r === RANK_8)) {\n        for (let i = 0; i < PROMOTIONS.length; i++) {\n            const promotion = PROMOTIONS[i];\n            moves.push({\n                color,\n                from,\n                to,\n                piece,\n                captured,\n                promotion,\n                flags: flags | BITS.PROMOTION,\n            });\n        }\n    }\n    else {\n        moves.push({\n            color,\n            from,\n            to,\n            piece,\n            captured,\n            flags,\n        });\n    }\n}\nfunction inferPieceType(san) {\n    let pieceType = san.charAt(0);\n    if (pieceType >= 'a' && pieceType <= 'h') {\n        const matches = san.match(/[a-h]\\d.*[a-h]\\d/);\n        if (matches) {\n            return undefined;\n        }\n        return PAWN;\n    }\n    pieceType = pieceType.toLowerCase();\n    if (pieceType === 'o') {\n        return KING;\n    }\n    return pieceType;\n}\n// parses all of the decorators out of a SAN string\nfunction strippedSan(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n}\nexport class Chess {\n    _board = new Array(128);\n    _turn = WHITE;\n    _header = {};\n    _kings = { w: EMPTY, b: EMPTY };\n    _epSquare = -1;\n    _halfMoves = 0;\n    _moveNumber = 0;\n    _history = [];\n    _comments = {};\n    _castling = { w: 0, b: 0 };\n    _hash = 0n;\n    // tracks number of times a position has been seen for repetition checking\n    _positionCount = new Map();\n    constructor(fen = DEFAULT_POSITION, { skipValidation = false } = {}) {\n        this.load(fen, { skipValidation });\n    }\n    clear({ preserveHeaders = false } = {}) {\n        this._board = new Array(128);\n        this._kings = { w: EMPTY, b: EMPTY };\n        this._turn = WHITE;\n        this._castling = { w: 0, b: 0 };\n        this._epSquare = EMPTY;\n        this._halfMoves = 0;\n        this._moveNumber = 1;\n        this._history = [];\n        this._comments = {};\n        this._header = preserveHeaders ? this._header : { ...HEADER_TEMPLATE };\n        this._hash = this._computeHash();\n        this._positionCount = new Map();\n        /*\n         * Delete the SetUp and FEN headers (if preserved), the board is empty and\n         * these headers don't make sense in this state. They'll get added later\n         * via .load() or .put()\n         */\n        this._header['SetUp'] = null;\n        this._header['FEN'] = null;\n    }\n    load(fen, { skipValidation = false, preserveHeaders = false } = {}) {\n        let tokens = fen.split(/\\s+/);\n        // append commonly omitted fen tokens\n        if (tokens.length >= 2 && tokens.length < 6) {\n            const adjustments = ['-', '-', '0', '1'];\n            fen = tokens.concat(adjustments.slice(-(6 - tokens.length))).join(' ');\n        }\n        tokens = fen.split(/\\s+/);\n        if (!skipValidation) {\n            const { ok, error } = validateFen(fen);\n            if (!ok) {\n                throw new Error(error);\n            }\n        }\n        const position = tokens[0];\n        let square = 0;\n        this.clear({ preserveHeaders });\n        for (let i = 0; i < position.length; i++) {\n            const piece = position.charAt(i);\n            if (piece === '/') {\n                square += 8;\n            }\n            else if (isDigit(piece)) {\n                square += parseInt(piece, 10);\n            }\n            else {\n                const color = piece < 'a' ? WHITE : BLACK;\n                this._put({ type: piece.toLowerCase(), color }, algebraic(square));\n                square++;\n            }\n        }\n        this._turn = tokens[1];\n        if (tokens[2].indexOf('K') > -1) {\n            this._castling.w |= BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            this._castling.w |= BITS.QSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            this._castling.b |= BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            this._castling.b |= BITS.QSIDE_CASTLE;\n        }\n        this._epSquare = tokens[3] === '-' ? EMPTY : Ox88[tokens[3]];\n        this._halfMoves = parseInt(tokens[4], 10);\n        this._moveNumber = parseInt(tokens[5], 10);\n        this._hash = this._computeHash();\n        this._updateSetup(fen);\n        this._incPositionCount();\n    }\n    fen({ forceEnpassantSquare = false, } = {}) {\n        let empty = 0;\n        let fen = '';\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            if (this._board[i]) {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                const { color, type: piece } = this._board[i];\n                fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n            }\n            else {\n                empty++;\n            }\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty;\n                }\n                if (i !== Ox88.h1) {\n                    fen += '/';\n                }\n                empty = 0;\n                i += 8;\n            }\n        }\n        let castling = '';\n        if (this._castling[WHITE] & BITS.KSIDE_CASTLE) {\n            castling += 'K';\n        }\n        if (this._castling[WHITE] & BITS.QSIDE_CASTLE) {\n            castling += 'Q';\n        }\n        if (this._castling[BLACK] & BITS.KSIDE_CASTLE) {\n            castling += 'k';\n        }\n        if (this._castling[BLACK] & BITS.QSIDE_CASTLE) {\n            castling += 'q';\n        }\n        // do we have an empty castling flag?\n        castling = castling || '-';\n        let epSquare = '-';\n        /*\n         * only print the ep square if en passant is a valid move (pawn is present\n         * and ep capture is not pinned)\n         */\n        if (this._epSquare !== EMPTY) {\n            if (forceEnpassantSquare) {\n                epSquare = algebraic(this._epSquare);\n            }\n            else {\n                const bigPawnSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n                const squares = [bigPawnSquare + 1, bigPawnSquare - 1];\n                for (const square of squares) {\n                    // is the square off the board?\n                    if (square & 0x88) {\n                        continue;\n                    }\n                    const color = this._turn;\n                    // is there a pawn that can capture the epSquare?\n                    if (this._board[square]?.color === color &&\n                        this._board[square]?.type === PAWN) {\n                        // if the pawn makes an ep capture, does it leave its king in check?\n                        this._makeMove({\n                            color,\n                            from: square,\n                            to: this._epSquare,\n                            piece: PAWN,\n                            captured: PAWN,\n                            flags: BITS.EP_CAPTURE,\n                        });\n                        const isLegal = !this._isKingAttacked(color);\n                        this._undoMove();\n                        // if ep is legal, break and set the ep square in the FEN output\n                        if (isLegal) {\n                            epSquare = algebraic(this._epSquare);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return [\n            fen,\n            this._turn,\n            castling,\n            epSquare,\n            this._halfMoves,\n            this._moveNumber,\n        ].join(' ');\n    }\n    _pieceKey(i) {\n        if (!this._board[i]) {\n            return 0n;\n        }\n        const { color, type } = this._board[i];\n        const colorIndex = {\n            w: 0,\n            b: 1,\n        }[color];\n        const typeIndex = {\n            p: 0,\n            n: 1,\n            b: 2,\n            r: 3,\n            q: 4,\n            k: 5,\n        }[type];\n        return PIECE_KEYS[colorIndex][typeIndex][i];\n    }\n    _epKey() {\n        return this._epSquare === EMPTY ? 0n : EP_KEYS[this._epSquare & 7];\n    }\n    _castlingKey() {\n        const index = (this._castling.w >> 5) | (this._castling.b >> 3);\n        return CASTLING_KEYS[index];\n    }\n    _computeHash() {\n        let hash = 0n;\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // did we run off the end of the board\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            if (this._board[i]) {\n                hash ^= this._pieceKey(i);\n            }\n        }\n        hash ^= this._epKey();\n        hash ^= this._castlingKey();\n        if (this._turn === 'b') {\n            hash ^= SIDE_KEY;\n        }\n        return hash;\n    }\n    /*\n     * Called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object. If the FEN\n     * is equal to the default position, the SetUp and FEN are deleted the setup\n     * is only updated if history.length is zero, ie moves haven't been made.\n     */\n    _updateSetup(fen) {\n        if (this._history.length > 0)\n            return;\n        if (fen !== DEFAULT_POSITION) {\n            this._header['SetUp'] = '1';\n            this._header['FEN'] = fen;\n        }\n        else {\n            this._header['SetUp'] = null;\n            this._header['FEN'] = null;\n        }\n    }\n    reset() {\n        this.load(DEFAULT_POSITION);\n    }\n    get(square) {\n        return this._board[Ox88[square]];\n    }\n    findPiece(piece) {\n        const squares = [];\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // did we run off the end of the board\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            // if empty square or wrong color\n            if (!this._board[i] || this._board[i]?.color !== piece.color) {\n                continue;\n            }\n            // check if square contains the requested piece\n            if (this._board[i].color === piece.color &&\n                this._board[i].type === piece.type) {\n                squares.push(algebraic(i));\n            }\n        }\n        return squares;\n    }\n    put({ type, color }, square) {\n        if (this._put({ type, color }, square)) {\n            this._updateCastlingRights();\n            this._updateEnPassantSquare();\n            this._updateSetup(this.fen());\n            return true;\n        }\n        return false;\n    }\n    _set(sq, piece) {\n        this._hash ^= this._pieceKey(sq);\n        this._board[sq] = piece;\n        this._hash ^= this._pieceKey(sq);\n    }\n    _put({ type, color }, square) {\n        // check for piece\n        if (SYMBOLS.indexOf(type.toLowerCase()) === -1) {\n            return false;\n        }\n        // check for valid square\n        if (!(square in Ox88)) {\n            return false;\n        }\n        const sq = Ox88[square];\n        // don't let the user place more than one king\n        if (type == KING &&\n            !(this._kings[color] == EMPTY || this._kings[color] == sq)) {\n            return false;\n        }\n        const currentPieceOnSquare = this._board[sq];\n        // if one of the kings will be replaced by the piece from args, set the `_kings` respective entry to `EMPTY`\n        if (currentPieceOnSquare && currentPieceOnSquare.type === KING) {\n            this._kings[currentPieceOnSquare.color] = EMPTY;\n        }\n        this._set(sq, { type: type, color: color });\n        if (type === KING) {\n            this._kings[color] = sq;\n        }\n        return true;\n    }\n    _clear(sq) {\n        this._hash ^= this._pieceKey(sq);\n        delete this._board[sq];\n    }\n    remove(square) {\n        const piece = this.get(square);\n        this._clear(Ox88[square]);\n        if (piece && piece.type === KING) {\n            this._kings[piece.color] = EMPTY;\n        }\n        this._updateCastlingRights();\n        this._updateEnPassantSquare();\n        this._updateSetup(this.fen());\n        return piece;\n    }\n    _updateCastlingRights() {\n        this._hash ^= this._castlingKey();\n        const whiteKingInPlace = this._board[Ox88.e1]?.type === KING &&\n            this._board[Ox88.e1]?.color === WHITE;\n        const blackKingInPlace = this._board[Ox88.e8]?.type === KING &&\n            this._board[Ox88.e8]?.color === BLACK;\n        if (!whiteKingInPlace ||\n            this._board[Ox88.a1]?.type !== ROOK ||\n            this._board[Ox88.a1]?.color !== WHITE) {\n            this._castling.w &= ~BITS.QSIDE_CASTLE;\n        }\n        if (!whiteKingInPlace ||\n            this._board[Ox88.h1]?.type !== ROOK ||\n            this._board[Ox88.h1]?.color !== WHITE) {\n            this._castling.w &= ~BITS.KSIDE_CASTLE;\n        }\n        if (!blackKingInPlace ||\n            this._board[Ox88.a8]?.type !== ROOK ||\n            this._board[Ox88.a8]?.color !== BLACK) {\n            this._castling.b &= ~BITS.QSIDE_CASTLE;\n        }\n        if (!blackKingInPlace ||\n            this._board[Ox88.h8]?.type !== ROOK ||\n            this._board[Ox88.h8]?.color !== BLACK) {\n            this._castling.b &= ~BITS.KSIDE_CASTLE;\n        }\n        this._hash ^= this._castlingKey();\n    }\n    _updateEnPassantSquare() {\n        if (this._epSquare === EMPTY) {\n            return;\n        }\n        const startSquare = this._epSquare + (this._turn === WHITE ? -16 : 16);\n        const currentSquare = this._epSquare + (this._turn === WHITE ? 16 : -16);\n        const attackers = [currentSquare + 1, currentSquare - 1];\n        if (this._board[startSquare] !== null ||\n            this._board[this._epSquare] !== null ||\n            this._board[currentSquare]?.color !== swapColor(this._turn) ||\n            this._board[currentSquare]?.type !== PAWN) {\n            this._hash ^= this._epKey();\n            this._epSquare = EMPTY;\n            return;\n        }\n        const canCapture = (square) => !(square & 0x88) &&\n            this._board[square]?.color === this._turn &&\n            this._board[square]?.type === PAWN;\n        if (!attackers.some(canCapture)) {\n            this._hash ^= this._epKey();\n            this._epSquare = EMPTY;\n        }\n    }\n    _attacked(color, square, verbose) {\n        const attackers = [];\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // did we run off the end of the board\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            // if empty square or wrong color\n            if (this._board[i] === undefined || this._board[i].color !== color) {\n                continue;\n            }\n            const piece = this._board[i];\n            const difference = i - square;\n            // skip - to/from square are the same\n            if (difference === 0) {\n                continue;\n            }\n            const index = difference + 119;\n            if (ATTACKS[index] & PIECE_MASKS[piece.type]) {\n                if (piece.type === PAWN) {\n                    if ((difference > 0 && piece.color === WHITE) ||\n                        (difference <= 0 && piece.color === BLACK)) {\n                        if (!verbose) {\n                            return true;\n                        }\n                        else {\n                            attackers.push(algebraic(i));\n                        }\n                    }\n                    continue;\n                }\n                // if the piece is a knight or a king\n                if (piece.type === 'n' || piece.type === 'k') {\n                    if (!verbose) {\n                        return true;\n                    }\n                    else {\n                        attackers.push(algebraic(i));\n                        continue;\n                    }\n                }\n                const offset = RAYS[index];\n                let j = i + offset;\n                let blocked = false;\n                while (j !== square) {\n                    if (this._board[j] != null) {\n                        blocked = true;\n                        break;\n                    }\n                    j += offset;\n                }\n                if (!blocked) {\n                    if (!verbose) {\n                        return true;\n                    }\n                    else {\n                        attackers.push(algebraic(i));\n                        continue;\n                    }\n                }\n            }\n        }\n        if (verbose) {\n            return attackers;\n        }\n        else {\n            return false;\n        }\n    }\n    attackers(square, attackedBy) {\n        if (!attackedBy) {\n            return this._attacked(this._turn, Ox88[square], true);\n        }\n        else {\n            return this._attacked(attackedBy, Ox88[square], true);\n        }\n    }\n    _isKingAttacked(color) {\n        const square = this._kings[color];\n        return square === -1 ? false : this._attacked(swapColor(color), square);\n    }\n    hash() {\n        return this._hash.toString(16);\n    }\n    isAttacked(square, attackedBy) {\n        return this._attacked(attackedBy, Ox88[square]);\n    }\n    isCheck() {\n        return this._isKingAttacked(this._turn);\n    }\n    inCheck() {\n        return this.isCheck();\n    }\n    isCheckmate() {\n        return this.isCheck() && this._moves().length === 0;\n    }\n    isStalemate() {\n        return !this.isCheck() && this._moves().length === 0;\n    }\n    isInsufficientMaterial() {\n        /*\n         * k.b. vs k.b. (of opposite colors) with mate in 1:\n         * 8/8/8/8/1b6/8/B1k5/K7 b - - 0 1\n         *\n         * k.b. vs k.n. with mate in 1:\n         * 8/8/8/8/1n6/8/B7/K1k5 b - - 2 1\n         */\n        const pieces = {\n            b: 0,\n            n: 0,\n            r: 0,\n            q: 0,\n            k: 0,\n            p: 0,\n        };\n        const bishops = [];\n        let numPieces = 0;\n        let squareColor = 0;\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            squareColor = (squareColor + 1) % 2;\n            if (i & 0x88) {\n                i += 7;\n                continue;\n            }\n            const piece = this._board[i];\n            if (piece) {\n                pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1;\n                if (piece.type === BISHOP) {\n                    bishops.push(squareColor);\n                }\n                numPieces++;\n            }\n        }\n        // k vs. k\n        if (numPieces === 2) {\n            return true;\n        }\n        else if (\n        // k vs. kn .... or .... k vs. kb\n        numPieces === 3 &&\n            (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)) {\n            return true;\n        }\n        else if (numPieces === pieces[BISHOP] + 2) {\n            // kb vs. kb where any number of bishops are all on the same color\n            let sum = 0;\n            const len = bishops.length;\n            for (let i = 0; i < len; i++) {\n                sum += bishops[i];\n            }\n            if (sum === 0 || sum === len) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isThreefoldRepetition() {\n        return this._getPositionCount(this._hash) >= 3;\n    }\n    isDrawByFiftyMoves() {\n        return this._halfMoves >= 100; // 50 moves per side = 100 half moves\n    }\n    isDraw() {\n        return (this.isDrawByFiftyMoves() ||\n            this.isStalemate() ||\n            this.isInsufficientMaterial() ||\n            this.isThreefoldRepetition());\n    }\n    isGameOver() {\n        return this.isCheckmate() || this.isDraw();\n    }\n    moves({ verbose = false, square = undefined, piece = undefined, } = {}) {\n        const moves = this._moves({ square, piece });\n        if (verbose) {\n            return moves.map((move) => new Move(this, move));\n        }\n        else {\n            return moves.map((move) => this._moveToSan(move, moves));\n        }\n    }\n    _moves({ legal = true, piece = undefined, square = undefined, } = {}) {\n        const forSquare = square ? square.toLowerCase() : undefined;\n        const forPiece = piece?.toLowerCase();\n        const moves = [];\n        const us = this._turn;\n        const them = swapColor(us);\n        let firstSquare = Ox88.a8;\n        let lastSquare = Ox88.h1;\n        let singleSquare = false;\n        // are we generating moves for a single square?\n        if (forSquare) {\n            // illegal square, return empty moves\n            if (!(forSquare in Ox88)) {\n                return [];\n            }\n            else {\n                firstSquare = lastSquare = Ox88[forSquare];\n                singleSquare = true;\n            }\n        }\n        for (let from = firstSquare; from <= lastSquare; from++) {\n            // did we run off the end of the board\n            if (from & 0x88) {\n                from += 7;\n                continue;\n            }\n            // empty square or opponent, skip\n            if (!this._board[from] || this._board[from].color === them) {\n                continue;\n            }\n            const { type } = this._board[from];\n            let to;\n            if (type === PAWN) {\n                if (forPiece && forPiece !== type)\n                    continue;\n                // single square, non-capturing\n                to = from + PAWN_OFFSETS[us][0];\n                if (!this._board[to]) {\n                    addMove(moves, us, from, to, PAWN);\n                    // double square\n                    to = from + PAWN_OFFSETS[us][1];\n                    if (SECOND_RANK[us] === rank(from) && !this._board[to]) {\n                        addMove(moves, us, from, to, PAWN, undefined, BITS.BIG_PAWN);\n                    }\n                }\n                // pawn captures\n                for (let j = 2; j < 4; j++) {\n                    to = from + PAWN_OFFSETS[us][j];\n                    if (to & 0x88)\n                        continue;\n                    if (this._board[to]?.color === them) {\n                        addMove(moves, us, from, to, PAWN, this._board[to].type, BITS.CAPTURE);\n                    }\n                    else if (to === this._epSquare) {\n                        addMove(moves, us, from, to, PAWN, PAWN, BITS.EP_CAPTURE);\n                    }\n                }\n            }\n            else {\n                if (forPiece && forPiece !== type)\n                    continue;\n                for (let j = 0, len = PIECE_OFFSETS[type].length; j < len; j++) {\n                    const offset = PIECE_OFFSETS[type][j];\n                    to = from;\n                    while (true) {\n                        to += offset;\n                        if (to & 0x88)\n                            break;\n                        if (!this._board[to]) {\n                            addMove(moves, us, from, to, type);\n                        }\n                        else {\n                            // own color, stop loop\n                            if (this._board[to].color === us)\n                                break;\n                            addMove(moves, us, from, to, type, this._board[to].type, BITS.CAPTURE);\n                            break;\n                        }\n                        /* break, if knight or king */\n                        if (type === KNIGHT || type === KING)\n                            break;\n                    }\n                }\n            }\n        }\n        /*\n         * check for castling if we're:\n         *   a) generating all moves, or\n         *   b) doing single square move generation on the king's square\n         */\n        if (forPiece === undefined || forPiece === KING) {\n            if (!singleSquare || lastSquare === this._kings[us]) {\n                // king-side castling\n                if (this._castling[us] & BITS.KSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom + 2;\n                    if (!this._board[castlingFrom + 1] &&\n                        !this._board[castlingTo] &&\n                        !this._attacked(them, this._kings[us]) &&\n                        !this._attacked(them, castlingFrom + 1) &&\n                        !this._attacked(them, castlingTo)) {\n                        addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.KSIDE_CASTLE);\n                    }\n                }\n                // queen-side castling\n                if (this._castling[us] & BITS.QSIDE_CASTLE) {\n                    const castlingFrom = this._kings[us];\n                    const castlingTo = castlingFrom - 2;\n                    if (!this._board[castlingFrom - 1] &&\n                        !this._board[castlingFrom - 2] &&\n                        !this._board[castlingFrom - 3] &&\n                        !this._attacked(them, this._kings[us]) &&\n                        !this._attacked(them, castlingFrom - 1) &&\n                        !this._attacked(them, castlingTo)) {\n                        addMove(moves, us, this._kings[us], castlingTo, KING, undefined, BITS.QSIDE_CASTLE);\n                    }\n                }\n            }\n        }\n        /*\n         * return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal || this._kings[us] === -1) {\n            return moves;\n        }\n        // filter out illegal moves\n        const legalMoves = [];\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(us)) {\n                legalMoves.push(moves[i]);\n            }\n            this._undoMove();\n        }\n        return legalMoves;\n    }\n    move(move, { strict = false } = {}) {\n        /*\n         * The move function can be called with in the following parameters:\n         *\n         * .move('Nxb7')       <- argument is a case-sensitive SAN string\n         *\n         * .move({ from: 'h7', <- argument is a move object\n         *         to :'h8',\n         *         promotion: 'q' })\n         *\n         *\n         * An optional strict argument may be supplied to tell chess.js to\n         * strictly follow the SAN specification.\n         */\n        let moveObj = null;\n        if (typeof move === 'string') {\n            moveObj = this._moveFromSan(move, strict);\n        }\n        else if (typeof move === 'object') {\n            const moves = this._moves();\n            // convert the pretty move object to an ugly move object\n            for (let i = 0, len = moves.length; i < len; i++) {\n                if (move.from === algebraic(moves[i].from) &&\n                    move.to === algebraic(moves[i].to) &&\n                    (!('promotion' in moves[i]) || move.promotion === moves[i].promotion)) {\n                    moveObj = moves[i];\n                    break;\n                }\n            }\n        }\n        // failed to find move\n        if (!moveObj) {\n            if (typeof move === 'string') {\n                throw new Error(`Invalid move: ${move}`);\n            }\n            else {\n                throw new Error(`Invalid move: ${JSON.stringify(move)}`);\n            }\n        }\n        /*\n         * need to make a copy of move because we can't generate SAN after the move\n         * is made\n         */\n        const prettyMove = new Move(this, moveObj);\n        this._makeMove(moveObj);\n        this._incPositionCount();\n        return prettyMove;\n    }\n    _push(move) {\n        this._history.push({\n            move,\n            kings: { b: this._kings.b, w: this._kings.w },\n            turn: this._turn,\n            castling: { b: this._castling.b, w: this._castling.w },\n            epSquare: this._epSquare,\n            halfMoves: this._halfMoves,\n            moveNumber: this._moveNumber,\n        });\n    }\n    _movePiece(from, to) {\n        this._hash ^= this._pieceKey(from);\n        this._board[to] = this._board[from];\n        delete this._board[from];\n        this._hash ^= this._pieceKey(to);\n    }\n    _makeMove(move) {\n        const us = this._turn;\n        const them = swapColor(us);\n        this._push(move);\n        this._hash ^= this._epKey();\n        this._hash ^= this._castlingKey();\n        if (move.captured) {\n            this._hash ^= this._pieceKey(move.to);\n        }\n        this._movePiece(move.from, move.to);\n        // if ep capture, remove the captured pawn\n        if (move.flags & BITS.EP_CAPTURE) {\n            if (this._turn === BLACK) {\n                this._clear(move.to - 16);\n            }\n            else {\n                this._clear(move.to + 16);\n            }\n        }\n        // if pawn promotion, replace with new piece\n        if (move.promotion) {\n            this._clear(move.to);\n            this._set(move.to, { type: move.promotion, color: us });\n        }\n        // if we moved the king\n        if (this._board[move.to].type === KING) {\n            this._kings[us] = move.to;\n            // if we castled, move the rook next to the king\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                const castlingTo = move.to - 1;\n                const castlingFrom = move.to + 1;\n                this._movePiece(castlingFrom, castlingTo);\n            }\n            else if (move.flags & BITS.QSIDE_CASTLE) {\n                const castlingTo = move.to + 1;\n                const castlingFrom = move.to - 2;\n                this._movePiece(castlingFrom, castlingTo);\n            }\n            // turn off castling\n            this._castling[us] = 0;\n        }\n        // turn off castling if we move a rook\n        if (this._castling[us]) {\n            for (let i = 0, len = ROOKS[us].length; i < len; i++) {\n                if (move.from === ROOKS[us][i].square &&\n                    this._castling[us] & ROOKS[us][i].flag) {\n                    this._castling[us] ^= ROOKS[us][i].flag;\n                    break;\n                }\n            }\n        }\n        // turn off castling if we capture a rook\n        if (this._castling[them]) {\n            for (let i = 0, len = ROOKS[them].length; i < len; i++) {\n                if (move.to === ROOKS[them][i].square &&\n                    this._castling[them] & ROOKS[them][i].flag) {\n                    this._castling[them] ^= ROOKS[them][i].flag;\n                    break;\n                }\n            }\n        }\n        this._hash ^= this._castlingKey();\n        // if big pawn move, update the en passant square\n        if (move.flags & BITS.BIG_PAWN) {\n            let epSquare;\n            if (us === BLACK) {\n                epSquare = move.to - 16;\n            }\n            else {\n                epSquare = move.to + 16;\n            }\n            if ((!((move.to - 1) & 0x88) &&\n                this._board[move.to - 1]?.type === PAWN &&\n                this._board[move.to - 1]?.color === them) ||\n                (!((move.to + 1) & 0x88) &&\n                    this._board[move.to + 1]?.type === PAWN &&\n                    this._board[move.to + 1]?.color === them)) {\n                this._epSquare = epSquare;\n                this._hash ^= this._epKey();\n            }\n            else {\n                this._epSquare = EMPTY;\n            }\n        }\n        else {\n            this._epSquare = EMPTY;\n        }\n        // reset the 50 move counter if a pawn is moved or a piece is captured\n        if (move.piece === PAWN) {\n            this._halfMoves = 0;\n        }\n        else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n            this._halfMoves = 0;\n        }\n        else {\n            this._halfMoves++;\n        }\n        if (us === BLACK) {\n            this._moveNumber++;\n        }\n        this._turn = them;\n        this._hash ^= SIDE_KEY;\n    }\n    undo() {\n        const hash = this._hash;\n        const move = this._undoMove();\n        if (move) {\n            const prettyMove = new Move(this, move);\n            this._decPositionCount(hash);\n            return prettyMove;\n        }\n        return null;\n    }\n    _undoMove() {\n        const old = this._history.pop();\n        if (old === undefined) {\n            return null;\n        }\n        this._hash ^= this._epKey();\n        this._hash ^= this._castlingKey();\n        const move = old.move;\n        this._kings = old.kings;\n        this._turn = old.turn;\n        this._castling = old.castling;\n        this._epSquare = old.epSquare;\n        this._halfMoves = old.halfMoves;\n        this._moveNumber = old.moveNumber;\n        this._hash ^= this._epKey();\n        this._hash ^= this._castlingKey();\n        this._hash ^= SIDE_KEY;\n        const us = this._turn;\n        const them = swapColor(us);\n        this._movePiece(move.to, move.from);\n        // to undo any promotions\n        if (move.piece) {\n            this._clear(move.from);\n            this._set(move.from, { type: move.piece, color: us });\n        }\n        if (move.captured) {\n            if (move.flags & BITS.EP_CAPTURE) {\n                // en passant capture\n                let index;\n                if (us === BLACK) {\n                    index = move.to - 16;\n                }\n                else {\n                    index = move.to + 16;\n                }\n                this._set(index, { type: PAWN, color: them });\n            }\n            else {\n                // regular capture\n                this._set(move.to, { type: move.captured, color: them });\n            }\n        }\n        if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n            let castlingTo, castlingFrom;\n            if (move.flags & BITS.KSIDE_CASTLE) {\n                castlingTo = move.to + 1;\n                castlingFrom = move.to - 1;\n            }\n            else {\n                castlingTo = move.to - 2;\n                castlingFrom = move.to + 1;\n            }\n            this._movePiece(castlingFrom, castlingTo);\n        }\n        return move;\n    }\n    pgn({ newline = '\\n', maxWidth = 0, } = {}) {\n        /*\n         * using the specification from http://www.chessclub.com/help/PGN-spec\n         * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n         */\n        const result = [];\n        let headerExists = false;\n        /* add the PGN header information */\n        for (const i in this._header) {\n            /*\n             * TODO: order of enumerated properties in header object is not\n             * guaranteed, see ECMA-262 spec (section 12.6.4)\n             *\n             * By using HEADER_TEMPLATE, the order of tags should be preserved; we\n             * do have to check for null placeholders, though, and omit them\n             */\n            const headerTag = this._header[i];\n            if (headerTag)\n                result.push(`[${i} \"${this._header[i]}\"]` + newline);\n            headerExists = true;\n        }\n        if (headerExists && this._history.length) {\n            result.push(newline);\n        }\n        const appendComment = (moveString) => {\n            const comment = this._comments[this.fen()];\n            if (typeof comment !== 'undefined') {\n                const delimiter = moveString.length > 0 ? ' ' : '';\n                moveString = `${moveString}${delimiter}{${comment}}`;\n            }\n            return moveString;\n        };\n        // pop all of history onto reversed_history\n        const reversedHistory = [];\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        const moves = [];\n        let moveString = '';\n        // special case of a commented starting position with no moves\n        if (reversedHistory.length === 0) {\n            moves.push(appendComment(''));\n        }\n        // build the list of moves.  a move_string looks like: \"3. e3 e6\"\n        while (reversedHistory.length > 0) {\n            moveString = appendComment(moveString);\n            const move = reversedHistory.pop();\n            // make TypeScript stop complaining about move being undefined\n            if (!move) {\n                break;\n            }\n            // if the position started with black to move, start PGN with #. ...\n            if (!this._history.length && move.color === 'b') {\n                const prefix = `${this._moveNumber}. ...`;\n                // is there a comment preceding the first move?\n                moveString = moveString ? `${moveString} ${prefix}` : prefix;\n            }\n            else if (move.color === 'w') {\n                // store the previous generated move_string if we have one\n                if (moveString.length) {\n                    moves.push(moveString);\n                }\n                moveString = this._moveNumber + '.';\n            }\n            moveString =\n                moveString + ' ' + this._moveToSan(move, this._moves({ legal: true }));\n            this._makeMove(move);\n        }\n        // are there any other leftover moves?\n        if (moveString.length) {\n            moves.push(appendComment(moveString));\n        }\n        // is there a result? (there ALWAYS has to be a result according to spec; see Seven Tag Roster)\n        moves.push(this._header.Result || '*');\n        /*\n         * history should be back to what it was before we started generating PGN,\n         * so join together moves\n         */\n        if (maxWidth === 0) {\n            return result.join('') + moves.join(' ');\n        }\n        // TODO (jah): huh?\n        const strip = function () {\n            if (result.length > 0 && result[result.length - 1] === ' ') {\n                result.pop();\n                return true;\n            }\n            return false;\n        };\n        // NB: this does not preserve comment whitespace.\n        const wrapComment = function (width, move) {\n            for (const token of move.split(' ')) {\n                if (!token) {\n                    continue;\n                }\n                if (width + token.length > maxWidth) {\n                    while (strip()) {\n                        width--;\n                    }\n                    result.push(newline);\n                    width = 0;\n                }\n                result.push(token);\n                width += token.length;\n                result.push(' ');\n                width++;\n            }\n            if (strip()) {\n                width--;\n            }\n            return width;\n        };\n        // wrap the PGN output at max_width\n        let currentWidth = 0;\n        for (let i = 0; i < moves.length; i++) {\n            if (currentWidth + moves[i].length > maxWidth) {\n                if (moves[i].includes('{')) {\n                    currentWidth = wrapComment(currentWidth, moves[i]);\n                    continue;\n                }\n            }\n            // if the current move will push past max_width\n            if (currentWidth + moves[i].length > maxWidth && i !== 0) {\n                // don't end the line with whitespace\n                if (result[result.length - 1] === ' ') {\n                    result.pop();\n                }\n                result.push(newline);\n                currentWidth = 0;\n            }\n            else if (i !== 0) {\n                result.push(' ');\n                currentWidth++;\n            }\n            result.push(moves[i]);\n            currentWidth += moves[i].length;\n        }\n        return result.join('');\n    }\n    /**\n     * @deprecated Use `setHeader` and `getHeaders` instead. This method will return null header tags (which is not what you want)\n     */\n    header(...args) {\n        for (let i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n                this._header[args[i]] = args[i + 1];\n            }\n        }\n        return this._header;\n    }\n    // TODO: value validation per spec\n    setHeader(key, value) {\n        this._header[key] = value ?? SEVEN_TAG_ROSTER[key] ?? null;\n        return this.getHeaders();\n    }\n    removeHeader(key) {\n        if (key in this._header) {\n            this._header[key] = SEVEN_TAG_ROSTER[key] || null;\n            return true;\n        }\n        return false;\n    }\n    // return only non-null headers (omit placemarker nulls)\n    getHeaders() {\n        const nonNullHeaders = {};\n        for (const [key, value] of Object.entries(this._header)) {\n            if (value !== null) {\n                nonNullHeaders[key] = value;\n            }\n        }\n        return nonNullHeaders;\n    }\n    loadPgn(pgn, { strict = false, newlineChar = '\\r?\\n', } = {}) {\n        // If newlineChar is not the default, replace all instances with \\n\n        if (newlineChar !== '\\r?\\n') {\n            pgn = pgn.replace(new RegExp(newlineChar, 'g'), '\\n');\n        }\n        const parsedPgn = parse(pgn);\n        // Put the board in the starting position\n        this.reset();\n        // parse PGN header\n        const headers = parsedPgn.headers;\n        let fen = '';\n        for (const key in headers) {\n            // check to see user is including fen (possibly with wrong tag case)\n            if (key.toLowerCase() === 'fen') {\n                fen = headers[key];\n            }\n            this.header(key, headers[key]);\n        }\n        /*\n         * the permissive parser should attempt to load a fen tag, even if it's the\n         * wrong case and doesn't include a corresponding [SetUp \"1\"] tag\n         */\n        if (!strict) {\n            if (fen) {\n                this.load(fen, { preserveHeaders: true });\n            }\n        }\n        else {\n            /*\n             * strict parser - load the starting position indicated by [Setup '1']\n             * and [FEN position]\n             */\n            if (headers['SetUp'] === '1') {\n                if (!('FEN' in headers)) {\n                    throw new Error('Invalid PGN: FEN tag must be supplied with SetUp tag');\n                }\n                // don't clear the headers when loading\n                this.load(headers['FEN'], { preserveHeaders: true });\n            }\n        }\n        let node = parsedPgn.root;\n        while (node) {\n            if (node.move) {\n                const move = this._moveFromSan(node.move, strict);\n                if (move == null) {\n                    throw new Error(`Invalid move in PGN: ${node.move}`);\n                }\n                else {\n                    this._makeMove(move);\n                    this._incPositionCount();\n                }\n            }\n            if (node.comment !== undefined) {\n                this._comments[this.fen()] = node.comment;\n            }\n            node = node.variations[0];\n        }\n        /*\n         * Per section 8.2.6 of the PGN spec, the Result tag pair must match match\n         * the termination marker. Only do this when headers are present, but the\n         * result tag is missing\n         */\n        const result = parsedPgn.result;\n        if (result &&\n            Object.keys(this._header).length &&\n            this._header['Result'] !== result) {\n            this.setHeader('Result', result);\n        }\n    }\n    /*\n     * Convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} strict Use the strict SAN parser. It will throw errors\n     * on overly disambiguated moves (see below):\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    _moveToSan(move, moves) {\n        let output = '';\n        if (move.flags & BITS.KSIDE_CASTLE) {\n            output = 'O-O';\n        }\n        else if (move.flags & BITS.QSIDE_CASTLE) {\n            output = 'O-O-O';\n        }\n        else {\n            if (move.piece !== PAWN) {\n                const disambiguator = getDisambiguator(move, moves);\n                output += move.piece.toUpperCase() + disambiguator;\n            }\n            if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n                if (move.piece === PAWN) {\n                    output += algebraic(move.from)[0];\n                }\n                output += 'x';\n            }\n            output += algebraic(move.to);\n            if (move.promotion) {\n                output += '=' + move.promotion.toUpperCase();\n            }\n        }\n        this._makeMove(move);\n        if (this.isCheck()) {\n            if (this.isCheckmate()) {\n                output += '#';\n            }\n            else {\n                output += '+';\n            }\n        }\n        this._undoMove();\n        return output;\n    }\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    _moveFromSan(move, strict = false) {\n        // strip off any move decorations: e.g Nf3+?! becomes Nf3\n        let cleanMove = strippedSan(move);\n        if (!strict) {\n            if (cleanMove === '0-0') {\n                cleanMove = 'O-O';\n            }\n            else if (cleanMove === '0-0-0') {\n                cleanMove = 'O-O-O';\n            }\n        }\n        let pieceType = inferPieceType(cleanMove);\n        let moves = this._moves({ legal: true, piece: pieceType });\n        // strict parser\n        for (let i = 0, len = moves.length; i < len; i++) {\n            if (cleanMove === strippedSan(this._moveToSan(moves[i], moves))) {\n                return moves[i];\n            }\n        }\n        // the strict parser failed\n        if (strict) {\n            return null;\n        }\n        let piece = undefined;\n        let matches = undefined;\n        let from = undefined;\n        let to = undefined;\n        let promotion = undefined;\n        /*\n         * The default permissive (non-strict) parser allows the user to parse\n         * non-standard chess notations. This parser is only run after the strict\n         * Standard Algebraic Notation (SAN) parser has failed.\n         *\n         * When running the permissive parser, we'll run a regex to grab the piece, the\n         * to/from square, and an optional promotion piece. This regex will\n         * parse common non-standard notation like: Pe2-e4, Rc1c4, Qf3xf7,\n         * f7f8q, b1c3\n         *\n         * NOTE: Some positions and moves may be ambiguous when using the permissive\n         * parser. For example, in this position: 6k1/8/8/B7/8/8/8/BN4K1 w - - 0 1,\n         * the move b1c3 may be interpreted as Nc3 or B1c3 (a disambiguated bishop\n         * move). In these cases, the permissive parser will default to the most\n         * basic interpretation (which is b1c3 parsing to Nc3).\n         */\n        let overlyDisambiguated = false;\n        matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n        if (matches) {\n            piece = matches[1];\n            from = matches[2];\n            to = matches[3];\n            promotion = matches[4];\n            if (from.length == 1) {\n                overlyDisambiguated = true;\n            }\n        }\n        else {\n            /*\n             * The [a-h]?[1-8]? portion of the regex below handles moves that may be\n             * overly disambiguated (e.g. Nge7 is unnecessary and non-standard when\n             * there is one legal knight move to e7). In this case, the value of\n             * 'from' variable will be a rank or file, not a square.\n             */\n            matches = cleanMove.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/);\n            if (matches) {\n                piece = matches[1];\n                from = matches[2];\n                to = matches[3];\n                promotion = matches[4];\n                if (from.length == 1) {\n                    overlyDisambiguated = true;\n                }\n            }\n        }\n        pieceType = inferPieceType(cleanMove);\n        moves = this._moves({\n            legal: true,\n            piece: piece ? piece : pieceType,\n        });\n        if (!to) {\n            return null;\n        }\n        for (let i = 0, len = moves.length; i < len; i++) {\n            if (!from) {\n                // if there is no from square, it could be just 'x' missing from a capture\n                if (cleanMove ===\n                    strippedSan(this._moveToSan(moves[i], moves)).replace('x', '')) {\n                    return moves[i];\n                }\n                // hand-compare move properties with the results from our permissive regex\n            }\n            else if ((!piece || piece.toLowerCase() == moves[i].piece) &&\n                Ox88[from] == moves[i].from &&\n                Ox88[to] == moves[i].to &&\n                (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n                return moves[i];\n            }\n            else if (overlyDisambiguated) {\n                /*\n                 * SPECIAL CASE: we parsed a move string that may have an unneeded\n                 * rank/file disambiguator (e.g. Nge7).  The 'from' variable will\n                 */\n                const square = algebraic(moves[i].from);\n                if ((!piece || piece.toLowerCase() == moves[i].piece) &&\n                    Ox88[to] == moves[i].to &&\n                    (from == square[0] || from == square[1]) &&\n                    (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n                    return moves[i];\n                }\n            }\n        }\n        return null;\n    }\n    ascii() {\n        let s = '   +------------------------+\\n';\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            // display the rank\n            if (file(i) === 0) {\n                s += ' ' + '87654321'[rank(i)] + ' |';\n            }\n            if (this._board[i]) {\n                const piece = this._board[i].type;\n                const color = this._board[i].color;\n                const symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase();\n                s += ' ' + symbol + ' ';\n            }\n            else {\n                s += ' . ';\n            }\n            if ((i + 1) & 0x88) {\n                s += '|\\n';\n                i += 8;\n            }\n        }\n        s += '   +------------------------+\\n';\n        s += '     a  b  c  d  e  f  g  h';\n        return s;\n    }\n    perft(depth) {\n        const moves = this._moves({ legal: false });\n        let nodes = 0;\n        const color = this._turn;\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this._makeMove(moves[i]);\n            if (!this._isKingAttacked(color)) {\n                if (depth - 1 > 0) {\n                    nodes += this.perft(depth - 1);\n                }\n                else {\n                    nodes++;\n                }\n            }\n            this._undoMove();\n        }\n        return nodes;\n    }\n    turn() {\n        return this._turn;\n    }\n    board() {\n        const output = [];\n        let row = [];\n        for (let i = Ox88.a8; i <= Ox88.h1; i++) {\n            if (this._board[i] == null) {\n                row.push(null);\n            }\n            else {\n                row.push({\n                    square: algebraic(i),\n                    type: this._board[i].type,\n                    color: this._board[i].color,\n                });\n            }\n            if ((i + 1) & 0x88) {\n                output.push(row);\n                row = [];\n                i += 8;\n            }\n        }\n        return output;\n    }\n    squareColor(square) {\n        if (square in Ox88) {\n            const sq = Ox88[square];\n            return (rank(sq) + file(sq)) % 2 === 0 ? 'light' : 'dark';\n        }\n        return null;\n    }\n    history({ verbose = false } = {}) {\n        const reversedHistory = [];\n        const moveHistory = [];\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        while (true) {\n            const move = reversedHistory.pop();\n            if (!move) {\n                break;\n            }\n            if (verbose) {\n                moveHistory.push(new Move(this, move));\n            }\n            else {\n                moveHistory.push(this._moveToSan(move, this._moves()));\n            }\n            this._makeMove(move);\n        }\n        return moveHistory;\n    }\n    /*\n     * Keeps track of position occurrence counts for the purpose of repetition\n     * checking. Old positions are removed from the map if their counts are reduced to 0.\n     */\n    _getPositionCount(hash) {\n        return this._positionCount.get(hash) ?? 0;\n    }\n    _incPositionCount() {\n        this._positionCount.set(this._hash, (this._positionCount.get(this._hash) ?? 0) + 1);\n    }\n    _decPositionCount(hash) {\n        const currentCount = this._positionCount.get(hash) ?? 0;\n        if (currentCount === 1) {\n            this._positionCount.delete(hash);\n        }\n        else {\n            this._positionCount.set(hash, currentCount - 1);\n        }\n    }\n    _pruneComments() {\n        const reversedHistory = [];\n        const currentComments = {};\n        const copyComment = (fen) => {\n            if (fen in this._comments) {\n                currentComments[fen] = this._comments[fen];\n            }\n        };\n        while (this._history.length > 0) {\n            reversedHistory.push(this._undoMove());\n        }\n        copyComment(this.fen());\n        while (true) {\n            const move = reversedHistory.pop();\n            if (!move) {\n                break;\n            }\n            this._makeMove(move);\n            copyComment(this.fen());\n        }\n        this._comments = currentComments;\n    }\n    getComment() {\n        return this._comments[this.fen()];\n    }\n    setComment(comment) {\n        this._comments[this.fen()] = comment.replace('{', '[').replace('}', ']');\n    }\n    /**\n     * @deprecated Renamed to `removeComment` for consistency\n     */\n    deleteComment() {\n        return this.removeComment();\n    }\n    removeComment() {\n        const comment = this._comments[this.fen()];\n        delete this._comments[this.fen()];\n        return comment;\n    }\n    getComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen) => {\n            return { fen: fen, comment: this._comments[fen] };\n        });\n    }\n    /**\n     * @deprecated Renamed to `removeComments` for consistency\n     */\n    deleteComments() {\n        return this.removeComments();\n    }\n    removeComments() {\n        this._pruneComments();\n        return Object.keys(this._comments).map((fen) => {\n            const comment = this._comments[fen];\n            delete this._comments[fen];\n            return { fen: fen, comment: comment };\n        });\n    }\n    setCastlingRights(color, rights) {\n        for (const side of [KING, QUEEN]) {\n            if (rights[side] !== undefined) {\n                if (rights[side]) {\n                    this._castling[color] |= SIDES[side];\n                }\n                else {\n                    this._castling[color] &= ~SIDES[side];\n                }\n            }\n        }\n        this._updateCastlingRights();\n        const result = this.getCastlingRights(color);\n        return ((rights[KING] === undefined || rights[KING] === result[KING]) &&\n            (rights[QUEEN] === undefined || rights[QUEEN] === result[QUEEN]));\n    }\n    getCastlingRights(color) {\n        return {\n            [KING]: (this._castling[color] & SIDES[KING]) !== 0,\n            [QUEEN]: (this._castling[color] & SIDES[QUEEN]) !== 0,\n        };\n    }\n    moveNumber() {\n        return this._moveNumber;\n    }\n}\n//# sourceMappingURL=chess.js.map","import { addClass, removeClass } from \"./lib/html\";\nimport {\n  Move,\n  moveCastle,\n  moveEnPassant,\n  moveNormal,\n  Nullable,\n  Role,\n  roleToUCILetter,\n  Square,\n  uciLetterToRole,\n} from \"./lib/ucui/types\";\nimport { Chess, Move as ChessJSMove } from \"chess.js\";\n\nexport const ROLE_LIST: Role[] = [\n  \"Pawn\",\n  \"Bishop\",\n  \"Knight\",\n  \"Rook\",\n  \"Queen\",\n  \"King\",\n];\n\nexport const BLACK_PAWN = \"♟\";\nexport const BLACK_ROOK = \"♜\";\nexport const BLACK_KNIGHT = \"♞\";\nexport const BLACK_BISHOP = \"♝\";\nexport const BLACK_QUEEN = \"♛\";\nexport const BLACK_KING = \"♚\";\n\nexport const WHITE_PAWN = \"♙\";\nexport const WHITE_ROOK = \"♖\";\nexport const WHITE_KNIGHT = \"♘\";\nexport const WHITE_BISHOP = \"♗\";\nexport const WHITE_QUEEN = \"♕\";\nexport const WHITE_KING = \"♔\";\n\nexport type EncodableLiteral = string | number | boolean;\nexport type Encodable = EncodableLiteral | EncodableLiteral[] | null;\nexport type UrlQuery = Record<string, Encodable>;\n\nconst encodeComponent = (key: string, value: Encodable): string => {\n  if (Array.isArray(value)) {\n    return value.map((v) => `${key}=${encodeURIComponent(v)}`).join(\"&\");\n  }\n  return value == null ? `${key}=` : `${key}=${encodeURIComponent(value)}`;\n};\n\nexport const withQueryString = (url: string, attrs: UrlQuery) => {\n  const qs = Object.keys(attrs)\n    .map((k) => encodeComponent(k, attrs[k]))\n    .join(\"&\");\n  return `${url}?${qs}`;\n};\n\nexport const hide = addClass(\"hidden\");\nexport const show = removeClass(\"hidden\");\n\ntype MoveObj = {\n  from: string;\n  to: string;\n  promotion?: string;\n};\n\nconst uciToObj = (uci: string): MoveObj => {\n  const from = uci.slice(0, 2);\n  const to = uci.slice(2, 4);\n  const promotion = uci[4];\n  return { from, to, promotion };\n};\n\nexport const uciMoveList = (uciString: string) =>\n  uciString.split(\" \").filter((m) => m.trim().length > 0);\n\n// export const legalMoves = (moves: string, at?: number): Move[] => {\n//   const game = new Chess();\n//   const uciMoves =\n//     at === undefined ? uciMoveList(moves) : uciMoveList(moves).slice(0, at);\n//   uciMoves.forEach((uci) => game.move(uciToObj(uci)));\n//   const check = game.isCheck();\n//   const checkmate = game.isCheckmate();\n//   return game.moves({ verbose: true }).map((m) => {\n//     if (m.isKingsideCastle()) {\n//       if (m.color == \"w\") {\n//         return moveCastle(\"E1\", \"H1\", check, checkmate);\n//       } else {\n//         return moveCastle(\"E8\", \"H8\", check, checkmate);\n//       }\n//     }\n//     if (m.isQueensideCastle()) {\n//       if (m.color == \"w\") {\n//         return moveCastle(\"E1\", \"A1\", check, checkmate);\n//       } else {\n//         return moveCastle(\"E8\", \"A8\", check, checkmate);\n//       }\n//     }\n\n//     if (m.isEnPassant()) {\n//       return moveEnPassant(\n//         m.from.toUpperCase() as Square,\n//         m.to.toUpperCase() as Square,\n//         check,\n//         checkmate\n//       );\n//     }\n\n//     return moveNormal(\n//       uciLetterToRole(m.piece),\n//       m.from.toUpperCase() as Square,\n//       m.to.toUpperCase() as Square,\n//       m.isCapture() ? uciLetterToRole(m.captured!) : null,\n//       m.isPromotion() ? uciLetterToRole(m.promotion!) : null,\n//       check,\n//       checkmate\n//     );\n//   });\n// };\n\nconst legalMovesCache = new Map<string, Move[]>();\n\nconst legalKey = (gameMoves: string, at?: number) => `${gameMoves}/${at}`;\n\nexport const legalMoves = (gameMoves: string, at?: number): Move[] => {\n  const key = legalKey(gameMoves, at);\n  if (legalMovesCache.has(key)) {\n    return legalMovesCache.get(key)!;\n  }\n  const game = new Chess();\n  const uciMoves =\n    at === undefined\n      ? uciMoveList(gameMoves)\n      : uciMoveList(gameMoves).slice(0, at);\n\n  uciMoves.forEach((uci) => game.move(uciToObj(uci)));\n  const moves = game.moves({ verbose: true }).map((m) => {\n    game.move(m);\n    const annotatedMove = chessjsMoveToMove(\n      m,\n      game.isCheck(),\n      game.isCheckmate()\n    );\n    game.undo();\n    return annotatedMove;\n  });\n  legalMovesCache.set(key, moves);\n  return moves;\n};\n\nexport const legalMovesForRole = (role: Role, gameMoves: string): Move[] => {\n  const game = new Chess();\n  uciMoveList(gameMoves).forEach((uci) => game.move(uciToObj(uci)));\n  return game\n    .moves({ piece: roleToUCILetter(role), verbose: true })\n    .map((m) => {\n      game.move(m);\n      const annotatedMove = chessjsMoveToMove(\n        m,\n        game.isCheck(),\n        game.isCheckmate()\n      );\n      game.undo();\n      return annotatedMove;\n    });\n};\n\nexport const fenFromUciMoves = (gameMoves: string) => {\n  const game = new Chess();\n  uciMoveList(gameMoves).forEach((uci) => game.move(uciToObj(uci)));\n  return game.fen();\n};\n\nconst chessjsMoveToMove = (\n  m: ChessJSMove,\n  check: boolean,\n  checkmate: boolean\n): Move => {\n  if (m.isKingsideCastle()) {\n    if (m.color == \"w\") {\n      return moveCastle(\"E1\", \"H1\", check, checkmate);\n    } else {\n      return moveCastle(\"E8\", \"H8\", check, checkmate);\n    }\n  }\n  if (m.isQueensideCastle()) {\n    if (m.color == \"w\") {\n      return moveCastle(\"E1\", \"A1\", check, checkmate);\n    } else {\n      return moveCastle(\"E8\", \"A8\", check, checkmate);\n    }\n  }\n\n  if (m.isEnPassant()) {\n    return moveEnPassant(\n      m.from.toUpperCase() as Square,\n      m.to.toUpperCase() as Square,\n      check,\n      checkmate\n    );\n  }\n\n  return moveNormal(\n    uciLetterToRole(m.piece),\n    m.from.toUpperCase() as Square,\n    m.to.toUpperCase() as Square,\n    m.isCapture() ? uciLetterToRole(m.captured!) : null,\n    m.isPromotion() ? uciLetterToRole(m.promotion!) : null,\n    check,\n    checkmate\n  );\n};\n\nexport const lastMove = (gameMoves: string): Nullable<Move> => {\n  const moves = getMoveListFromMoveString(gameMoves);\n  if (moves.length > 0) {\n    return moves[moves.length - 1];\n  }\n  return null;\n};\n\nexport const lastMoveSan = (gameMoves: string): string => {\n  const game = new Chess();\n  uciMoveList(gameMoves).forEach((uci) => game.move(uciToObj(uci)));\n  const hist = game.history();\n  return hist.length > 0 ? hist[hist.length - 1] : \"\";\n};\n\nexport const getPGN = (gameMoves: string): string => {\n  const game = new Chess();\n  // TODO: game.setHeader()...\n  uciMoveList(gameMoves).forEach((uci) => game.move(uciToObj(uci)));\n  return game.pgn();\n};\nexport const getMoveListFromMoveString = (gameMoves: string): Move[] => {\n  const game = new Chess();\n  const moves: Move[] = [];\n  for (const uciMove of uciMoveList(gameMoves)) {\n    const chessJsMove = game.move(uciToObj(uciMove));\n\n    moves.push(\n      chessjsMoveToMove(chessJsMove, game.isCheck(), game.isCheckmate())\n    );\n  }\n  return moves;\n};\n\nexport const noop = () => void 0;\n","import { map, Option } from \"./lib/option\";\nimport {\n  ArenaTournament,\n  ChallengeJson,\n  GameEventInfo,\n  GameStateEvent,\n  StreamEvent,\n  User,\n} from \"./lib/ucui/lichess-types\";\nimport {\n  Color,\n  otherColor,\n  gameConfig,\n  Input,\n  inputNone,\n  MoveHist,\n  Eco,\n  Nullable,\n  Screen,\n  Move,\n  ClockState,\n  LichessAI,\n  Lang,\n  ChallengeColor,\n  SquareFile,\n  SquareRank,\n  SeekRequest,\n  TournamentJoin,\n  Message,\n} from \"./lib/ucui/types\";\nimport { isPrivateIP } from \"./lib/util\";\nimport { UserConfig } from \"./lib/ucui/types\";\n\nimport { getMoveListFromMoveString, uciMoveList } from \"./util\";\n\nexport const getTurn = (): Nullable<Color> => {\n  const game = get(\"lichess/game-state\");\n  if (game) {\n    return uciMoveList(game.moves).length % 2 === 0 ? \"white\" : \"black\";\n  }\n  return null;\n};\n\nexport const getOponentColor = (): Nullable<Color> => {\n  const color = getPlayerColor();\n  if (color) {\n    return otherColor(color);\n  }\n  return null;\n};\n\nexport const getPlayerColor = (): Nullable<Color> => {\n  const info = get(\"lichess/game-info\");\n  if (info) {\n    return info.color;\n  }\n  return null;\n};\n\nexport const getMoveList = (): Move[] => {\n  const state = get(\"lichess/game-state\");\n  if (state) {\n    return getMoveListFromMoveString(state.moves);\n  }\n  return [];\n};\n\nexport const getLang = () => get(\"lang\") ?? \"en\";\n\nexport const defaultGameConfig = () =>\n  gameConfig(10 * 60 * 1000, 60 * 1000, \"black\");\nexport const defaultInput = (): Input => inputNone();\n// export const defaultPosition = () =>\n//   position(startingLegalMoves, FEN_INITIAL_POSITION);\nexport const defaultScreen = (): Screen => \"home\";\nexport const defaultMoveList = (): MoveHist[] => [];\nexport const defaultEcoList = (): Eco[] => [];\n\nlet state = {\n  lang: null as Nullable<Lang>,\n  screen: defaultScreen(),\n  clock: null as Nullable<ClockState>,\n  input: defaultInput(),\n  \"input-san/file\": null as Nullable<SquareFile>,\n  \"input-san/rank\": null as Nullable<SquareRank>,\n  started: false,\n  lockScreen: false,\n  online: true,\n  fullscreen: false,\n  ratedChallenge: false,\n  challengeColor: \"random\" as ChallengeColor,\n  \"lichess/host\": import.meta.env.PROD\n    ? \"https://lichess.org\"\n    : \"http://localhost:8080\",\n  \"lichess/user\": null as Nullable<UserConfig>,\n  \"lichess/stream-events\": [] as StreamEvent[],\n  \"lichess/challenges\": [] as ChallengeJson[],\n  \"lichess/current-challenge\": null as Nullable<ChallengeJson>,\n  \"lichess/my-challenge\": null as Nullable<ChallengeJson>,\n  \"lichess/game-info\": null as Nullable<GameEventInfo>,\n  \"lichess/game-state\": null as Nullable<\n    GameStateEvent & { timestamp: number }\n  >,\n  \"lichess/opponent\": null as Nullable<User | LichessAI>,\n  \"lichess/following\": [] as User[],\n  \"lichess/chat\": null as Nullable<Message>,\n  \"lichess/seek\": null as Nullable<SeekRequest>,\n  \"lichess/arena-created\": [] as ArenaTournament[],\n  \"lichess/arena-started\": [] as ArenaTournament[],\n  \"lichess/arena-join\": null as Nullable<TournamentJoin>,\n};\n\nexport type State = typeof state;\nexport type StateKey = keyof State;\n\nconst storedKeys: StateKey[] = [\"lang\"];\n\nconst loadFromStorage = () =>\n  storedKeys.map(<K extends StateKey>(key: K) => {\n    const item = localStorage.getItem(key);\n    if (item !== null) {\n      state[key] = JSON.parse(item) as State[K];\n    }\n  });\n\nloadFromStorage();\n\nlet subs: [StateKey, (key: StateKey) => void][] = [];\n\nexport const batch_dispacther = () => {\n  const keys = new Set<StateKey>();\n\n  const dispatch = <K extends StateKey>(\n    key: K,\n    f: (val: State[K]) => State[K]\n  ) => {\n    let val = get(key);\n    state[key] = f(val);\n    if (storedKeys.includes(key)) {\n      localStorage.setItem(key, JSON.stringify(state[key]));\n    }\n\n    if (key !== \"clock\") {\n      console.groupCollapsed(key);\n      console.debug(\"from\", val);\n      console.debug(\"to\", state[key]);\n      console.groupEnd();\n    }\n    keys.add(key);\n    return get(key);\n  };\n\n  const assign = <K extends StateKey>(key: K, val: State[K]) =>\n    dispatch(key, () => val);\n\n  const end = () => {\n    setTimeout(() => {\n      for (const key of keys) {\n        const subscribers = subs.filter(([k, _]) => k == key);\n        for (const sub of subscribers) {\n          const handler = sub[1];\n          handler(key);\n          keys.delete(key);\n        }\n      }\n    }, 0);\n  };\n\n  return { dispatch, assign, end };\n};\n\nexport const withBatch = <R>(\n  f: (d: ReturnType<typeof batch_dispacther>) => R\n) => f(batch_dispacther());\n\nconst immediate_dispatch = batch_dispacther();\n\nexport const dispatch = <K extends StateKey>(\n  key: K,\n  f: (val: State[K]) => State[K]\n) => {\n  immediate_dispatch.dispatch(key, f);\n  immediate_dispatch.end();\n  return get(key);\n};\n\nexport type Dispath = typeof dispatch;\n\nexport const dispatchOpt = <K extends StateKey>(\n  key: K,\n  f: (val: State[K]) => Option<State[K]>\n) => map((value: State[K]) => assign(key, value))(f(get(key)));\n\nexport const assign = <K extends StateKey>(key: K, val: State[K]) =>\n  dispatch(key, () => val);\n\nexport type Assign = typeof assign;\n\nexport const get = <K extends StateKey>(key: K): State[K] =>\n  JSON.parse(JSON.stringify(state[key]));\n\nexport const getMutable = <K extends StateKey>(key: K): State[K] => state[key];\n\nexport const allKeys = () => Object.keys(state) as StateKey[];\n\nexport const subscribe =\n  (...keys: StateKey[]) =>\n  (callback: (key: StateKey) => void) =>\n    (subs = subs.concat(keys.map((k) => [k, callback])));\n\nexport const clearSubscriptions = (filter: (k: StateKey) => boolean) =>\n  (subs = subs.filter(([k, _]) => filter(k)));\n\nif (isPrivateIP(document.location.hostname)) {\n  Object.assign(window, { UcuiState: state });\n}\n","import { z } from \"zod/v4\";\n\nexport type ContentType =\n  | \"none\"\n  | \"application/json\"\n  | \"application/x-www-form-urlencoded\";\n\ntype EncodableLiteral = string | number | boolean;\ntype Encodable = EncodableLiteral | EncodableLiteral[];\n\nconst encodeComponent = (key: string, value: Encodable): string => {\n  if (Array.isArray(value)) {\n    return value.map((v) => `${key}=${encodeURIComponent(v)}`).join(\"&\");\n  }\n  return `${key}=${encodeURIComponent(value)}`;\n};\n\nexport const encodeQueryString = (attrs: Record<string, Encodable>) =>\n  Object.keys(attrs)\n    .map((k) => encodeComponent(k, attrs[k]))\n    .join(\"&\");\n\nexport const withQueryString = (\n  url: string,\n  attrs: Record<string, Encodable>\n) => `${url}?${encodeQueryString(attrs)}`;\n\nconst defaultGetOptions = (\n  contentType = \"application/json\" as ContentType\n): any => {\n  const headers = new Headers();\n  if (contentType !== \"none\") {\n    headers.append(\"Content-Type\", contentType);\n  }\n\n  return {\n    mode: \"cors\",\n    cache: \"default\",\n    redirect: \"follow\",\n    credentials: \"same-origin\",\n    headers,\n  };\n};\n\nexport const fetchWithClient =\n  (client: typeof fetch) =>\n  <T>(zt: z.ZodType<T>, url: string, init?: any) => {\n    const options: any = {\n      method: \"GET\",\n      ...defaultGetOptions(),\n      ...init,\n    };\n\n    return client(url, options)\n      .then((response) => {\n        return response.json();\n      })\n      .then((obj) => {\n        try {\n          return zt.parse(obj);\n        } catch (err) {\n          console.error(\"Failed to parse obj from\", url);\n          console.error(\"=>\", obj);\n          throw obj;\n        }\n      });\n  };\n\nexport const fetchZ = fetchWithClient(fetch);\n\nexport const defaultPostOptions = (\n  contentType = \"application/x-www-form-urlencoded\" as ContentType\n): any => {\n  const headers: Record<string, string> = {};\n  if (contentType !== \"none\") {\n    headers[\"Content-Type\"] = contentType;\n  }\n\n  return {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"default\",\n    redirect: \"follow\",\n    credentials: \"same-origin\",\n    headers,\n  };\n};\n\nexport const postWithClient =\n  (client: typeof fetch) =>\n  <T>(\n    zt: z.ZodType<T>,\n    url: string,\n    data: string | Record<string, Encodable>,\n    init?: any\n  ) => {\n    const options: any = {\n      method: \"POST\",\n      ...defaultPostOptions(),\n      ...init,\n    };\n\n    if (typeof data === \"string\") {\n      options.headers[\"Content-Type\"] = \"text/plain\";\n      options.body = data;\n    } else {\n      options.body = encodeQueryString(data);\n    }\n\n    return client(url, options)\n      .then((response) => {\n        return response.json();\n        // if (response.ok) {\n        // }\n        // throw response;\n      })\n      .then((obj) => {\n        try {\n          return zt.parse(obj);\n        } catch (err) {\n          console.error(\"Failed to parse obj from\", url);\n          console.error(\"=>\", obj);\n          throw obj;\n        }\n      });\n  };\n\nexport const postZ = postWithClient(fetch);\n","import { z } from \"zod/v4\";\n\nexport const ColorZ = z.union([z.literal(\"white\"), z.literal(\"black\")]);\n\nexport const SourceZ = z.union([\n  z.literal(\"lobby\"),\n  z.literal(\"friend\"),\n  z.literal(\"ai\"),\n  z.literal(\"api\"),\n  z.literal(\"tournament\"),\n  z.literal(\"position\"),\n  z.literal(\"import\"),\n  z.literal(\"importlive\"),\n  z.literal(\"simul\"),\n  z.literal(\"relay\"),\n  z.literal(\"pool\"),\n  z.literal(\"swiss\"),\n  z.literal(\"arena\"), // not documented\n]);\n\nexport const StatusZ = z.union([\n  z.object({ id: z.literal(10), name: z.literal(\"created\") }),\n  z.object({ id: z.literal(20), name: z.literal(\"started\") }),\n  z.object({ id: z.literal(25), name: z.literal(\"aborted\") }),\n  z.object({ id: z.literal(30), name: z.literal(\"mate\") }),\n  z.object({ id: z.literal(31), name: z.literal(\"resign\") }),\n  z.object({ id: z.literal(32), name: z.literal(\"stalemate\") }),\n  z.object({ id: z.literal(33), name: z.literal(\"timeout\") }),\n  z.object({ id: z.literal(34), name: z.literal(\"draw\") }),\n  z.object({ id: z.literal(35), name: z.literal(\"outoftime\") }),\n  z.object({ id: z.literal(36), name: z.literal(\"cheat\") }),\n  z.object({ id: z.literal(37), name: z.literal(\"noStart\") }),\n  z.object({ id: z.literal(38), name: z.literal(\"unknownFinish\") }),\n  z.object({ id: z.literal(60), name: z.literal(\"variantEnd\") }),\n]);\n\nexport const SpeedZ = z.union([\n  z.literal(\"ultraBullet\"),\n  z.literal(\"bullet\"),\n  z.literal(\"blitz\"),\n  z.literal(\"rapid\"),\n  z.literal(\"classical\"),\n  z.literal(\"correspondence\"),\n]);\n\nexport const GameEventOpponentZ = z.object({\n  id: z.string(),\n  username: z.string(),\n  rating: z.number(),\n  ratingDiff: z.number().optional(),\n});\n\nexport const GameEventOpponentAIZ = z.object({\n  id: z.string().nullable(),\n  username: z.string(),\n  rating: z.number().optional(),\n  ai: z.number(),\n});\n\nexport const GameCompatZ = z.object({\n  bot: z.boolean(),\n  board: z.boolean(),\n});\n\nexport const VariantKeyZ = z.union([\n  z.literal(\"standard\"),\n  z.literal(\"chess960\"),\n  z.literal(\"crazyhouse\"),\n  z.literal(\"antichess\"),\n  z.literal(\"atomic\"),\n  z.literal(\"horde\"),\n  z.literal(\"kingOfTheHill\"),\n  z.literal(\"racingKings\"),\n  z.literal(\"threeCheck\"),\n  z.literal(\"fromPosition\"),\n]);\n\nexport const VariantZ = z.object({\n  key: VariantKeyZ,\n  name: z.string(),\n  short: z.string().optional(),\n});\nexport const GameEventInfoZ = z.object({\n  id: z.string(),\n  fullId: z.string(),\n  gameId: z.string(),\n  fen: z.string(),\n  color: ColorZ,\n  lastMove: z.string(),\n  source: SourceZ,\n  status: StatusZ,\n  variant: VariantZ,\n  speed: SpeedZ,\n  perf: z.string(),\n  rated: z.boolean(),\n  hasMoved: z.boolean(),\n  opponent: z.union([GameEventOpponentZ, GameEventOpponentAIZ]),\n  isMyTurn: z.boolean(),\n  secondsLeft: z.number().optional(),\n  compat: GameCompatZ,\n  winner: ColorZ.optional(),\n  ratingDiff: z.number().optional(),\n  tournamentId: z.string().optional(),\n});\n\nexport const GameStartEventZ = z.object({\n  type: z.literal(\"gameStart\"),\n  game: GameEventInfoZ,\n});\n\nexport const GameFinishEventZ = z.object({\n  type: z.literal(\"gameFinish\"),\n  game: GameEventInfoZ,\n});\n\nexport const ChallengeStatusZ = z.union([\n  z.literal(\"created\"),\n  z.literal(\"offline\"),\n  z.literal(\"canceled\"),\n  z.literal(\"declined\"),\n  z.literal(\"accepted\"),\n]);\n\nexport const ChallengeUserZ = z.object({\n  id: z.string(),\n  name: z.string(),\n  rating: z.number(),\n  title: z.string().nullable(),\n  flair: z.string().optional(),\n  patron: z.boolean().optional(),\n  provisional: z.boolean().optional(),\n  online: z.boolean().optional(),\n  lag: z.number().optional(),\n});\n\nconst RealTimeZ = z.object({\n  type: z.literal(\"clock\"),\n  limit: z.number(),\n  increment: z.number(),\n  show: z.string(),\n});\n\nconst CorrespondenceZ = z.object({\n  type: z.literal(\"correspondence\"),\n  daysPerTurn: z.number(),\n});\nconst UnlimitedZ = z.object({\n  type: z.literal(\"unlimited\"),\n});\n\nexport const TimeControlZ = z.union([RealTimeZ, CorrespondenceZ, UnlimitedZ]);\n\nexport const ChallengeJsonZ = z.object({\n  id: z.string(),\n  url: z.url(),\n  status: ChallengeStatusZ,\n  challenger: ChallengeUserZ,\n  destUser: ChallengeUserZ.nullable(),\n  variant: VariantZ,\n  rated: z.boolean(),\n  speed: SpeedZ,\n  timeControl: TimeControlZ,\n  color: z.union([ColorZ, z.literal(\"random\")]),\n  finalColor: ColorZ,\n  perf: z.object({ icon: z.string(), name: z.string() }),\n  direction: z.union([z.literal(\"in\"), z.literal(\"out\")]).optional(),\n  initialFen: z.string().optional(),\n  rematchOf: z.string().optional(), // not documented\n});\n\nexport const PerfTypeZ = z.union([\n  z.literal(\"ultraBullet\"),\n  z.literal(\"bullet\"),\n  z.literal(\"blitz\"),\n  z.literal(\"rapid\"),\n  z.literal(\"classical\"),\n  z.literal(\"correspondence\"),\n  z.literal(\"chess960\"),\n  z.literal(\"crazyhouse\"),\n  z.literal(\"antichess\"),\n  z.literal(\"atomic\"),\n  z.literal(\"horde\"),\n  z.literal(\"kingOfTheHill\"),\n  z.literal(\"racingKings\"),\n  z.literal(\"threeCheck\"),\n]);\n\nexport const GameStatusNameZ = z.union([\n  z.literal(\"created\"),\n  z.literal(\"started\"),\n  z.literal(\"aborted\"),\n  z.literal(\"mate\"),\n  z.literal(\"resign\"),\n  z.literal(\"stalemate\"),\n  z.literal(\"timeout\"),\n  z.literal(\"draw\"),\n  z.literal(\"outoftime\"),\n  z.literal(\"cheat\"),\n  z.literal(\"noStart\"),\n  z.literal(\"unknownFinish\"),\n  z.literal(\"variantEnd\"),\n]);\n\nexport const ChallengeAIJsonZ = z.object({\n  id: z.string(),\n  fullId: z.string(),\n  status: z.object({ id: z.int(), name: GameStatusNameZ }),\n  variant: VariantZ,\n  rated: z.boolean(),\n  speed: SpeedZ,\n  perf: PerfTypeZ,\n  direction: z.union([z.literal(\"in\"), z.literal(\"out\")]).optional(),\n  fen: z.string().optional(),\n  turns: z.int().optional(),\n  source: SourceZ.optional(),\n  createdAt: z.number().optional(),\n  player: ColorZ.optional(),\n});\n\nexport const ChallengeEventZ = z.object({\n  type: z.literal(\"challenge\"),\n  challenge: ChallengeJsonZ,\n  compat: GameCompatZ.optional(),\n});\n\nexport const ChallengeCanceledEventZ = z.object({\n  type: z.literal(\"challengeCanceled\"),\n  challenge: ChallengeJsonZ,\n  compat: GameCompatZ.optional(),\n});\n\nexport const DeclineReasonZ = z.union([\n  z.literal(\"generic\"),\n  z.literal(\"later\"),\n  z.literal(\"tooFast\"),\n  z.literal(\"tooSlow\"),\n  z.literal(\"timeControl\"),\n  z.literal(\"rated\"),\n  z.literal(\"casual\"),\n  z.literal(\"standard\"),\n  z.literal(\"variant\"),\n  z.literal(\"noBot\"),\n  z.literal(\"onlyBot\"),\n]);\n\nconst ChallengeDeclinedJsonZ = ChallengeJsonZ.extend({\n  declineReason: z.string(),\n  declineReasonKey: DeclineReasonZ,\n});\n\nexport const ChallengeDeclinedEventZ = z.object({\n  type: z.literal(\"challengeDeclined\"),\n  challenge: ChallengeDeclinedJsonZ,\n  compat: GameCompatZ.optional(),\n});\n\nexport const StreamEventZ = z.union([\n  GameStartEventZ,\n  GameFinishEventZ,\n  ChallengeEventZ,\n  ChallengeCanceledEventZ,\n  ChallengeDeclinedEventZ,\n]);\n\nexport const ChallengeListZ = z.object({\n  in: ChallengeJsonZ.array(),\n  out: ChallengeJsonZ.array(),\n});\n\nexport const RulesZ = z.union([\n  z.literal(\"noAbort\"),\n  z.literal(\"noRematch\"),\n  z.literal(\"noGiveTime\"),\n  z.literal(\"noClaimWin\"),\n  z.literal(\"noEarlyDraw\"),\n]);\n\nexport const RequestChallengeCreateClockZ = z.object({\n  rated: z.boolean(),\n  \"clock.limit\": z.int(),\n  \"clock.increment\": z.int(),\n  color: z.union([ColorZ, z.literal(\"random\")]),\n  variant: VariantKeyZ,\n  fen: z.string().optional(),\n  keepAliveStream: z.boolean(),\n  rules: RulesZ.optional(),\n});\n\nexport const RequestSeekClockZ = z.object({\n  time: z.int(),\n  increment: z.int(),\n  rated: z.boolean().optional(),\n  color: z.union([ColorZ, z.literal(\"random\")]),\n  variant: VariantKeyZ,\n  ratingRange: z.string().optional(),\n});\n\nexport const ResponseIdZ = z.object({ id: z.string() });\n\nexport const CorrespondenceDaysZ = z.union([\n  z.literal(1),\n  z.literal(2),\n  z.literal(3),\n  z.literal(4),\n  z.literal(5),\n  z.literal(7),\n  z.literal(10),\n  z.literal(14),\n]);\n\nexport const RequesChallengeCreateCorrespondenceZ = z.object({\n  rated: z.boolean(),\n  days: CorrespondenceDaysZ,\n  color: z.union([ColorZ, z.literal(\"random\")]),\n  variant: VariantKeyZ,\n  fen: z.string().optional(),\n  keepAliveStream: z.boolean(),\n  rules: RulesZ.optional(),\n});\n\nexport const RequesChallengeCreateZ = z.union([\n  RequestChallengeCreateClockZ,\n  RequesChallengeCreateCorrespondenceZ,\n]);\n\nexport const RequesChallengeCreateAIZ = z.object({\n  \"clock.limit\": z.int(),\n  \"clock.increment\": z.int(),\n  color: z.union([ColorZ, z.literal(\"random\")]),\n  variant: VariantKeyZ,\n  fen: z.string().optional(),\n  level: z.union([\n    z.literal(1),\n    z.literal(2),\n    z.literal(3),\n    z.literal(4),\n    z.literal(5),\n    z.literal(6),\n    z.literal(7),\n    z.literal(8),\n  ]),\n});\nexport const ResponseOkZ = z.object({\n  ok: z.boolean(),\n});\n\nexport const ClockZ = z.object({\n  initial: z.int(),\n  increment: z.int(),\n});\n\nexport const PerfNameZ = z.object({ name: z.string() });\n\nexport const TitleZ = z.union([\n  z.literal(\"GM\"),\n  z.literal(\"WGM\"),\n  z.literal(\"IM\"),\n  z.literal(\"WIM\"),\n  z.literal(\"FM\"),\n  z.literal(\"WFM\"),\n  z.literal(\"NM\"),\n  z.literal(\"CM\"),\n  z.literal(\"WCM\"),\n  z.literal(\"WNM\"),\n  z.literal(\"LM\"),\n  z.literal(\"BOT\"),\n]);\n\nexport const GameEventPlayerNormalZ = z.object({\n  id: z.string(),\n  name: z.string(),\n  title: TitleZ.nullable(),\n  rating: z.int().nullable(),\n  provisional: z.boolean().optional(),\n});\n\nexport const GameEventPlayerAIZ = z.object({\n  aiLevel: z.int(),\n});\n\nexport const GameEventPlayerZ = z.union([\n  GameEventPlayerNormalZ,\n  GameEventPlayerAIZ,\n]);\n\nexport const GameStateEventZ = z.object({\n  type: z.literal(\"gameState\"),\n  moves: z.string(),\n  wtime: z.int(),\n  btime: z.int(),\n  winc: z.int(),\n  binc: z.int(),\n  status: GameStatusNameZ,\n  winner: ColorZ.optional(),\n  wdraw: z.boolean().optional(),\n  bdraw: z.boolean().optional(),\n  wtakeback: z.boolean().optional(),\n  btakeback: z.boolean().optional(),\n});\n\nexport const GameFullEventZ = z.object({\n  type: z.literal(\"gameFull\"),\n  id: z.string(),\n  variant: VariantZ,\n  clock: ClockZ.optional(),\n  speed: SpeedZ,\n  perf: PerfNameZ,\n  rated: z.boolean(),\n  createdAt: z.int(),\n  white: GameEventPlayerZ,\n  black: GameEventPlayerZ,\n  initialFen: z.string(),\n  state: GameStateEventZ,\n  tournamentId: z.string().optional(),\n});\n\nexport const ChatLineEventZ = z.object({\n  type: z.literal(\"chatLine\"),\n  room: z.union([z.literal(\"player\"), z.literal(\"spectator\")]),\n  username: z.string(),\n  text: z.string(),\n});\n\nexport const OpponentGoneEventZ = z.object({\n  type: z.literal(\"opponentGone\"),\n  gone: z.boolean(),\n  claimWinInSeconds: z.int(),\n});\n\nexport const BoardEventZ = z.union([\n  GameStateEventZ,\n  GameFullEventZ,\n  ChatLineEventZ,\n  OpponentGoneEventZ,\n]);\n\nexport const BoardMoveZ = z.object({\n  gameId: z.string(),\n  move: z.string(),\n  offeringDraw: z.boolean().optional(),\n});\n\nexport const PerfZ = z.object({\n  games: z.int(),\n  rating: z.int(),\n  rd: z.int(),\n  prog: z.int(),\n  prov: z.boolean().optional(),\n});\n\nexport const PerfsZ = z.object({\n  chess960: PerfZ.optional(),\n  atomic: PerfZ.optional(),\n  racingKings: PerfZ.optional(),\n  ultraBullet: PerfZ.optional(),\n  blitz: PerfZ.optional(),\n  kingOfTheHill: PerfZ.optional(),\n  threeCheck: PerfZ.optional(),\n  antichess: PerfZ.optional(),\n  crazyhouse: PerfZ.optional(),\n  bullet: PerfZ.optional(),\n  correspondence: PerfZ.optional(),\n  horde: PerfZ.optional(),\n  puzzle: PerfZ.optional(),\n  classical: PerfZ.optional(),\n  rapid: PerfZ.optional(),\n  storm: PerfZ.optional(),\n  racer: PerfZ.optional(),\n  streak: PerfZ.optional(),\n});\n\nexport const ProfileZ = z.object({\n  flag: z.string().optional(),\n  location: z.string().optional(),\n  bio: z.string().optional(),\n  realName: z.string().optional(),\n  fideRating: z.int().optional(),\n  uscfRating: z.int().optional(),\n  ecfRating: z.int().optional(),\n  cfcRating: z.int().optional(),\n  rcfRating: z.int().optional(),\n  dsbRating: z.int().optional(),\n  links: z.string().optional(),\n});\n\nexport const PlayTimeZ = z.object({\n  total: z.int(),\n  tv: z.int(),\n});\n\nexport const UserZ = z.object({\n  id: z.string(),\n  username: z.string(),\n  url: z.string().optional(),\n  perfs: PerfsZ.optional(),\n  title: TitleZ.optional(),\n  flair: z.string().optional(),\n  createdAt: z.int().optional(),\n  disabled: z.boolean().optional(),\n  tosViolation: z.boolean().optional(),\n  profile: ProfileZ.optional(),\n  seenAt: z.int().optional(),\n  playTime: PlayTimeZ.optional(),\n  patron: z.boolean().optional(),\n  verified: z.boolean().optional(),\n});\n\nexport const RealTimeUserStatusZ = z.object({\n  id: z.string(),\n  name: z.string(),\n  flair: z.string().optional(),\n  title: TitleZ.optional(),\n  online: z.boolean().optional(),\n  playing: z.boolean().optional(),\n  streaming: z.boolean().optional(),\n  patron: z.boolean().optional(),\n});\n\nexport const RealTimeUserStatusRequestZ = z.object({\n  ids: z.string(),\n  withSignal: z.boolean().optional(),\n  withGameIds: z.boolean().optional(),\n  withGameMetas: z.boolean().optional(),\n});\n\nexport const ArenaStatusZ = z.union([\n  z.literal(10), // created\n  z.literal(20), // started\n  z.literal(30), // finished\n]);\n\nexport const ArenaPerfZ = z.object({\n  key: PerfTypeZ,\n  name: z.string(),\n  position: z.int(),\n  icon: z.string().optional(),\n});\n\nexport const ArenaRatingObjZ = z.object({\n  perf: PerfTypeZ.optional(),\n  rating: z.int(),\n});\n\nexport const ThematicZ = z.object({\n  eco: z.string().optional(),\n  name: z.string(),\n  fen: z.string(),\n  url: z.string().optional(),\n});\nexport const CustomPositionZ = z.object({\n  name: z.string(),\n  fen: z.string(),\n});\n\nexport const ArenaPositionZ = z.union([ThematicZ, CustomPositionZ]);\n\nexport const LightUserZ = z.object({\n  id: z.string(),\n  name: z.string(),\n  flair: z.string().optional(),\n  title: TitleZ.optional(),\n  patron: z.boolean().optional(),\n});\n\nexport const ArenaClockZ = z.object({\n  limit: z.int(),\n  increment: z.int(),\n});\n\nexport const ArenaTournamentZ = z.object({\n  id: z.string(),\n  createdBy: z.string(),\n  system: z.literal(\"arena\"),\n  minutes: z.int(),\n  clock: ArenaClockZ,\n  rated: z.boolean(),\n  fullName: z.string(),\n  nbPlayers: z.int(),\n  variant: VariantZ,\n  startsAt: z.int(),\n  finishesAt: z.int(),\n  status: ArenaStatusZ,\n  perf: ArenaPerfZ,\n  // optionals\n  secondsToStart: z.int().optional(),\n  hasMaxRating: z.boolean().optional(),\n  maxRating: ArenaRatingObjZ.optional(),\n  minRating: ArenaRatingObjZ.optional(),\n  minRatedGames: z.object({ nb: z.int() }).optional(),\n  botsAllowed: z.boolean().optional(),\n  minAccountAgeInDays: z.int().optional(),\n  onlyTitled: z.boolean().optional(),\n  teamMember: z.string().optional(),\n  private: z.boolean().optional(),\n  position: ArenaPositionZ.optional(),\n  schedule: z\n    .object({\n      freq: z.string().optional(),\n      speed: z.string().optional(),\n    })\n    .optional(),\n  teamBattle: z\n    .object({\n      teams: z.string().array().optional(),\n      nbLeaders: z.int().optional(),\n    })\n    .optional(),\n  winner: LightUserZ.optional(),\n});\n\nexport const ArenaTournamentResponseZ = z.object({\n  created: ArenaTournamentZ.array(),\n  started: ArenaTournamentZ.array(),\n  finished: ArenaTournamentZ.array(),\n});\n\nexport type Color = z.infer<typeof ColorZ>;\nexport type Source = z.infer<typeof SourceZ>;\nexport type Status = z.infer<typeof StatusZ>;\nexport type Speed = z.infer<typeof SpeedZ>;\nexport type GameEventOpponent = z.infer<typeof GameEventOpponentZ>;\nexport type GameCompat = z.infer<typeof GameCompatZ>;\nexport type VariantKey = z.infer<typeof VariantKeyZ>;\nexport type GameEventInfo = z.infer<typeof GameEventInfoZ>;\nexport type GameStartEvent = z.infer<typeof GameStartEventZ>;\nexport type GameFinishEvent = z.infer<typeof GameFinishEventZ>;\nexport type ChallengeStatus = z.infer<typeof ChallengeStatusZ>;\nexport type ChallengeUser = z.infer<typeof ChallengeUserZ>;\nexport type RealTime = z.infer<typeof RealTimeZ>;\nexport type Correspondence = z.infer<typeof CorrespondenceZ>;\nexport type Unlimited = z.infer<typeof UnlimitedZ>;\nexport type TimeControl = z.infer<typeof TimeControlZ>;\nexport type ChallengeJson = z.infer<typeof ChallengeJsonZ>;\nexport type ChallengeAIJson = z.infer<typeof ChallengeAIJsonZ>;\nexport type ChallengeEvent = z.infer<typeof ChallengeEventZ>;\nexport type ChallengeCanceledEvent = z.infer<typeof ChallengeCanceledEventZ>;\nexport type DeclineReason = z.infer<typeof DeclineReasonZ>;\nexport type ChallengeDeclinedJson = z.infer<typeof ChallengeDeclinedJsonZ>;\nexport type ChallengeDeclinedEvent = z.infer<typeof ChallengeDeclinedEventZ>;\nexport type StreamEvent = z.infer<typeof StreamEventZ>;\n\nexport type ChallengeList = z.infer<typeof ChallengeListZ>;\nexport type Rules = z.infer<typeof RulesZ>;\nexport type RequesChallengeCreateClock = z.infer<\n  typeof RequestChallengeCreateClockZ\n>;\nexport type CorrespondenceDays = z.infer<typeof CorrespondenceDaysZ>;\nexport type RequesChallengeCreateCorrespondence = z.infer<\n  typeof RequesChallengeCreateCorrespondenceZ\n>;\nexport type RequesChallengeCreate = z.infer<typeof RequesChallengeCreateZ>;\nexport type RequesChallengeCreateAI = z.infer<typeof RequesChallengeCreateAIZ>;\nexport type ResponseOk = z.infer<typeof ResponseOkZ>;\nexport type RequestSeekClock = z.infer<typeof RequestSeekClockZ>;\nexport type ResponseId = z.infer<typeof ResponseIdZ>;\n\nexport type Clock = z.infer<typeof ClockZ>;\nexport type PerfName = z.infer<typeof PerfNameZ>;\nexport type Title = z.infer<typeof TitleZ>;\nexport type GameEventPlayer = z.infer<typeof GameEventPlayerZ>;\nexport type GameStatusName = z.infer<typeof GameStatusNameZ>;\nexport type GameStateEvent = z.infer<typeof GameStateEventZ>;\nexport type GameFullEvent = z.infer<typeof GameFullEventZ>;\nexport type ChatLineEvent = z.infer<typeof ChatLineEventZ>;\nexport type OpponentGoneEvent = z.infer<typeof OpponentGoneEventZ>;\nexport type BoardEvent = z.infer<typeof BoardEventZ>;\nexport type BoardMove = z.infer<typeof BoardMoveZ>;\nexport type User = z.infer<typeof UserZ>;\nexport type Perf = z.infer<typeof PerfZ>;\nexport type Perfs = z.infer<typeof PerfsZ>;\nexport type Profile = z.infer<typeof ProfileZ>;\nexport type PlayTime = z.infer<typeof PlayTimeZ>;\nexport type RealTimeUserStatus = z.infer<typeof RealTimeUserStatusZ>;\nexport type RealTimeUserStatusRequest = z.infer<\n  typeof RealTimeUserStatusRequestZ\n>;\n\nexport type ArenaTournament = z.infer<typeof ArenaTournamentZ>;\nexport type ArenaPosition = z.infer<typeof ArenaPositionZ>;\nexport type ArenaTournamentResponse = z.infer<typeof ArenaTournamentResponseZ>;\n","import {\n  defaultPostOptions,\n  encodeQueryString,\n  fetchWithClient,\n  fetchZ,\n  postWithClient,\n  postZ,\n  withQueryString,\n} from \"./lib/remote\";\nimport {\n  ArenaTournamentResponseZ,\n  BoardEvent,\n  BoardEventZ,\n  ChallengeJson,\n  ChallengeJsonZ,\n  ChallengeListZ,\n  DeclineReason,\n  RealTimeUserStatusZ,\n  RequesChallengeCreate,\n  RequesChallengeCreateAI,\n  RequestSeekClock,\n  ResponseIdZ,\n  ResponseOk,\n  ResponseOkZ,\n  StreamEvent,\n  StreamEventZ,\n  User,\n  UserZ,\n} from \"./lib/ucui/lichess-types\";\nimport { get, getMutable } from \"./store\";\n\nconst apiUrl = (path: string) => [get(\"lichess/host\"), path].join(\"/api\");\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/apiStreamEvent\n * path: /stream/event\n */\nexport const streamEvent = (\n  handler: (e: StreamEvent) => boolean,\n  then: () => void\n) => {\n  const config = getMutable(\"lichess/user\");\n  if (config) {\n    const stream = config.streamer(StreamEventZ, apiUrl(\"/stream/event\"));\n    stream.onMessage(handler);\n    stream.onClose(then);\n    return true;\n  }\n  return false;\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/boardGameStream\n * path: /board/game/stream/{gameId}\n */\nexport const streamBoard = (\n  gameId: string,\n  handler: (e: BoardEvent) => boolean\n) => {\n  const config = getMutable(\"lichess/user\");\n  if (config) {\n    const stream = config.streamer(\n      BoardEventZ,\n      apiUrl(`/board/game/stream/${gameId}`)\n    );\n    stream.onMessage(handler);\n    return true;\n  }\n  return false;\n};\n\n/**\n * doc: https://lichess.org/api#tag/Relations/operation/apiUserFollowing\n * path: /rel/following\n */\nexport const streamFollowing = (\n  handler: (e: User) => boolean,\n  then?: () => void\n) => {\n  const config = getMutable(\"lichess/user\");\n  if (config) {\n    const stream = config.streamer(UserZ, apiUrl(`/rel/following`));\n    stream.onMessage(handler);\n    if (then) {\n      stream.onClose(then);\n    }\n\n    return true;\n  }\n  return false;\n};\n\nconst getFetch = (throwMissingUser = false) => {\n  const userConfig = getMutable(\"lichess/user\");\n  if (userConfig) {\n    return fetchWithClient(userConfig.httpClient);\n  }\n  if (throwMissingUser) {\n    throw new Error(\"Missing user: generic http client\");\n  } else {\n    console.warn(\"Missing user: generic http client\");\n  }\n  return fetchZ;\n};\n\nconst getPoster = (throwMissingUser = false) => {\n  const userConfig = getMutable(\"lichess/user\");\n  if (userConfig) {\n    return postWithClient(userConfig.httpClient);\n  }\n  if (throwMissingUser) {\n    throw new Error(\"Missing user: generic http client\");\n  } else {\n    console.warn(\"Missing user: generic http client\");\n  }\n  return postZ;\n};\n\n/**\n * doc: https://lichess.org/api#tag/Challenges/operation/challengeList\n * path: /challenge\n */\nexport const challengeList = () => {\n  const fetch = getFetch();\n  return fetch(ChallengeListZ, apiUrl(\"/challenge\"));\n};\n\n/**\n * doc: https://lichess.org/api#tag/Challenges/operation/challengeCreate\n * path: /challenge/{username}\n */\nexport const challengeCreate = (\n  username: string,\n  data: RequesChallengeCreate\n) => {\n  const post = getPoster();\n  return post<ChallengeJson>(\n    ChallengeJsonZ,\n    apiUrl(`/challenge/${username}`),\n    data\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Challenges/operation/challengeAccept\n * path: /challenge/{challengeId}/accept\n *\n */\nexport const challengeAccept = (challengeId: string) => {\n  const post = getPoster();\n  return post<ResponseOk>(\n    ResponseOkZ,\n    apiUrl(`/challenge/${challengeId}/accept`),\n    {}\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Challenges/operation/challengeDecline\n * path: /challenge/{challengeId}/decline\n *\n */\nexport const challengeDecline = (\n  challengeId: string,\n  reason: DeclineReason\n) => {\n  const post = getPoster();\n  return post<ResponseOk>(\n    ResponseOkZ,\n    apiUrl(`/challenge/${challengeId}/decline`),\n    {\n      reason,\n    }\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/boardGameMove\n * path: /board/game/{gameId}/move/{move}\n *\n */\nexport const boardMove = (gameId: string, move: string) => {\n  const post = getPoster();\n  return post<ResponseOk>(\n    ResponseOkZ,\n    apiUrl(`/board/game/${gameId}/move/${move}`),\n    {}\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/boardGameAbort\n * path: /board/game/{gameId}/abort\n *\n */\nexport const boardAbort = (gameId: string) => {\n  const post = getPoster();\n  return post<ResponseOk>(\n    ResponseOkZ,\n    apiUrl(`/board/game/${gameId}/abort`),\n    {}\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/boardGameResign\n * path: /board/game/{gameId}/resign\n *\n */\nexport const boardResign = (gameId: string) => {\n  const post = getPoster();\n  return post<ResponseOk>(\n    ResponseOkZ,\n    apiUrl(`/board/game/${gameId}/resign`),\n    {}\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/boardGameDraw\n * path: /board/game/{gameId}/draw/{accept}\n *\n */\nexport const boardDraw = (gameId: string, accept: \"yes\" | \"no\") => {\n  const post = getPoster();\n  return post<ResponseOk>(\n    ResponseOkZ,\n    apiUrl(`/board/game/${gameId}/draw/${accept}`),\n    {}\n  );\n};\n\n/**\n * doc: https://lichess.org/api#tag/Users/operation/apiUsers\n * path: /users\n *\n */\nexport const getUserById = (id: string) => {\n  const post = getPoster();\n  return post(UserZ.array(), apiUrl(`/users`), id).then((users) => {\n    for (const user of users) {\n      if (user.id === id) {\n        return user;\n      }\n    }\n    throw new Error(\"Failed to get a user with id: \" + id);\n  });\n};\n\n/**\n * doc: https://lichess.org/api#tag/Challenges/operation/challengeCreate\n * path: /challenge/{username}\n *\n */\nexport const challengeUser = (\n  username: string,\n  request: RequesChallengeCreate\n) => {\n  const post = getPoster();\n  return post(ChallengeJsonZ, apiUrl(`/challenge/${username}`), request);\n};\n\n/**\n * doc: https://lichess.org/api#tag/Challenges/operation/challengeAi\n * path: /challenge/ai\n *\n */\nexport const challengeLichessAI = (request: RequesChallengeCreateAI) => {\n  const post = getPoster();\n  return post(ChallengeJsonZ, apiUrl(`/challenge/ai`), request);\n};\n\n/**\n * doc: https://lichess.org/api#tag/Users/operation/apiUsersStatus\n * path: /users/status\n *\n */\nexport const userStatus = (usernames: string[]) => {\n  const fetch = getFetch();\n  return fetch(\n    RealTimeUserStatusZ.array(),\n    withQueryString(apiUrl(`/users/status`), {\n      ids: usernames.join(\",\"),\n    })\n  );\n};\n\nexport const __ping = () => {\n  return fetch([get(\"lichess/host\"), \"__ping\"].join(\"/\"), {\n    mode: \"no-cors\",\n    cache: \"default\",\n    redirect: \"follow\",\n    credentials: \"same-origin\",\n  });\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/apiBoardSeek\n * path: /board/seek\n */\nexport const postSeek = (seek: RequestSeekClock, onClose: () => void) => {\n  const config = getMutable(\"lichess/user\");\n  if (config) {\n    return new Promise<() => void>((resolve, _reject) => {\n      const stream = config.streamer(\n        ResponseIdZ,\n        apiUrl(\"/board/seek\"),\n        (cancel) => {\n          resolve(cancel);\n        },\n        {\n          ...defaultPostOptions(),\n          body: encodeQueryString(seek),\n        }\n      );\n      stream.onClose(onClose);\n    });\n  }\n  return Promise.reject(\"no-config\");\n};\n\n/**\n * doc: https://lichess.org/api#tag/Board/operation/boardGameAbort\n * path: /board/game/{gameId}/abort\n */\nexport const postAbort = (gameId: string) => {\n  const post = getPoster();\n  return post(ResponseOkZ, apiUrl(`/board/game/${gameId}/abort`), {});\n};\n\n/**\n * doc: https://lichess.org/api#tag/Arena-tournaments/operation/apiTournament\n * path: /tournament\n *\n */\nexport const getArenaTournaments = () =>\n  getFetch()(ArenaTournamentResponseZ, apiUrl(\"/tournament\"));\n\n/**\n * doc: https://lichess.org/api#tag/Arena-tournaments/operation/apiTournamentJoin\n * path: /tournament/{id}/join\n */\nexport const postArenaTournamentJoin = (id: string) => {\n  const post = getPoster();\n  return post(ResponseOkZ, apiUrl(`/tournament/${id}/join`), {\n    pairMeAsap: true,\n  });\n};\n\n/**\n * doc: https://lichess.org/api#tag/Arena-tournaments/operation/apiTournamentWithdraw\n * path: /tournament/{id}/withdraw\n */\nexport const postArenaTournamentLeave = (id: string) => {\n  const post = getPoster();\n  return post(ResponseOkZ, apiUrl(`/tournament/${id}/withdraw`), {\n    pairMeAsap: true,\n  });\n};\n","export default {\n  \"home/link-git\": {\n    en: \"Source code & feedback\",\n    fr: \"Code source & retours\",\n  },\n\n  \"home/connect\": {\n    en: \"Connect\",\n    fr: \"Connecter\",\n  },\n\n  \"home/challenges\": {\n    en: \"Challenges\",\n    fr: \"Défis\",\n  },\n\n  \"home/challenge-accept\": {\n    en: \"Accept\",\n    fr: \"Accepter\",\n  },\n\n  \"home/challenge-decline\": {\n    en: \"Decline\",\n    fr: \"Décliner\",\n  },\n\n  \"home/challenge-wait\": {\n    en: \"Waiting to be challenged…\",\n    fr: \"En attente d'un défi…\",\n  },\n};\n","export default {\n  \"button/home\": {\n    en: \"Home\",\n    fr: \"Accueil\",\n  },\n  \"button/players\": {\n    en: \"Players\",\n    fr: \"Partenaires\",\n  },\n  \"button/create\": {\n    en: \"Create a game\",\n    fr: \"Initier une partie\",\n  },\n};\n","export default {\n  \"players/classic\": {\n    en: \"Classic\",\n    fr: \"Classique\",\n  },\n  \"players/rapid\": {\n    en: \"Rapid\",\n    fr: \"Rapide\",\n  },\n  \"players/username\": {\n    en: \"Username\",\n    fr: \"Bon d'utilisateurice\",\n  },\n  \"players/search\": {\n    en: \"Search\",\n    fr: \"Recherchez\",\n  },\n  \"players/find\": {\n    en: \"Find player\",\n    fr: \"Trouver un·e partenaire\",\n  },\n\n  \"players/ai\": {\n    en: \"Play with Lichess AI\",\n    fr: \"Jouer avec l'automate\",\n  },\n\n  \"players/ai-level\": {\n    en: \"Level\",\n    fr: \"Niveau\",\n  },\n\n  \"players/following\": {\n    en: \"Players you follow\",\n    fr: \"Les joueur·euses que vous suivez \",\n  },\n};\n","export default {\n  \"end/aborted\": {\n    en: \"Game has been aborted\",\n    fr: \"La partie a été annulée\",\n  },\n  \"end/mate\": {\n    en: \"Mate\",\n    fr: \"Échec et mat\",\n  },\n  \"end/resign\": {\n    en: \"Resigned\",\n    fr: \"Abandon\",\n  },\n  \"end/stalemate\": {\n    en: \"Stalemate\",\n    fr: \"Pat\",\n  },\n  \"end/timeout\": {\n    en: \"Flagged\",\n    fr: \"Perdue au temps\",\n  },\n  \"end/outoftime\": {\n    en: \"Flagged\",\n    fr: \"Perdue au temps\",\n  },\n  \"end/draw\": {\n    en: \"Draw\",\n    fr: \"Partie nulle\",\n  },\n  \"end/cheat\": {\n    en: \"Cheat!\",\n    fr: \"Triche\",\n  },\n  \"end/noStart\": {\n    en: \"Game didn't dtart\",\n    fr: \"La partie n'a pas commencé\",\n  },\n};\n","export default {\n  \"challenge/rated\": {\n    en: \"Rated\",\n    fr: \"Classé\",\n  },\n  \"challenge/casual\": {\n    en: \"Casual\",\n    fr: \"Amical\",\n  },\n};\n","import { ANCHOR, DIV, PARA, SPAN } from \"../lib/html\";\nimport { get } from \"../store\";\n\nexport default {\n  \"home/tagline\": {\n    en: () =>\n      PARA(\n        SPAN(\"ucui\", \"Téléchecs \"),\n        \"is a \",\n        ANCHOR(\"\", get(\"lichess/host\"), \" Lichess\"),\n        \" client for players who prefer to play over the board.\"\n      ),\n    fr: () =>\n      PARA(\n        SPAN(\"ucui\", \"Téléchecs \"),\n        \"est une interface à \",\n        ANCHOR(\"\", get(\"lichess/host\"), \" Lichess\"),\n        \" pour les joueuses et joueurs qui préfèrent jouer sur un échiquier.\"\n      ),\n  },\n\n  \"home/description\": {\n    en: () =>\n      DIV(\n        \"\",\n        PARA(`\n            Connect this page with your Lichess account to create games or challenge players \n            from here.  \n            `),\n        PARA(`\n            Once a game starts, you'll be presented with a black \n            screen where you'll see your opponent moves when they play, \n            and an input widget to enter your moves when it's your turn.\n            And that will be all of it. \n            `),\n        PARA(\"Enjoy!\")\n      ),\n    fr: () =>\n      DIV(\n        \"\",\n        PARA(`\n            Connectez cette page à votre compte Lichess pour commencer à jouer.  \n            `),\n        PARA(`\n            Lorsqu'une partie commence, les coups de l'adversaire \n            vous seront présentés de manière textuelle. \n            Et à votre tour de jouer, une interface de saisie \n            vous permettra de transmettre votre coup. \n            `),\n        PARA(\"Bonne partie!\")\n      ),\n  },\n};\n","export default {\n  \"clock/flagged\": {\n    en: \"Flag\",\n    fr: \"Tombé\",\n  },\n};\n","export default {\n  \"arena/arena\": {\n    en: \"Arenas\",\n    fr: \"Arènes\",\n  },\n  \"arena/created\": {\n    en: \"Created\",\n    fr: \"À venir\",\n  },\n  \"arena/started\": {\n    en: \"Started\",\n    fr: \"En cours\",\n  },\n  \"arena/join\": {\n    en: \"Join\",\n    fr: \"Rejoindre\",\n  },\n  \"arena/waiting\": {\n    en: \"Waiting to be paired\",\n    fr: \"En attente d'appariement\",\n  },\n  \"arena/leave\": {\n    en: \"Leave arena\",\n    fr: \"Se retirer\",\n  },\n  \"arena/info\": {\n    en: `\n    We only display arenas that are started or about to start, \n    and with time controls which feel compatible with this application. \n    And we do not support starting positions, yet.\n    `,\n    fr: `\n    Ne sont montrées que les arènes qui sont en cours ou sur\n    le point de commencer. De plus, ne sont pas montées celles\n    dont le contôle du temps est compatible avec l'usage \n    de cette application. \n    `,\n  },\n};\n","import { LangZ } from \"../lib/ucui/types\";\nimport { assign, get, getLang } from \"../store\";\nimport home from \"./home\";\nimport buttons from \"./buttons\";\nimport players from \"./players\";\nimport end from \"./end\";\nimport challenge from \"./challenge\";\nimport formated from \"./formated\";\nimport clock from \"./clock\";\nimport arena from \"./arena\";\n\nconst messages = {\n  ...home,\n  ...buttons,\n  ...players,\n  ...end,\n  ...challenge,\n  ...clock,\n  ...arena,\n};\n\nconst formatedMessages = {\n  ...formated,\n};\n\nexport type LocaleMessages = typeof messages;\nexport type LocaleMessageKey = keyof LocaleMessages;\n\nexport const tr = (key: LocaleMessageKey) => messages[key][getLang()];\nexport default tr;\n\nexport type LocaleFormatedMessages = typeof formatedMessages;\nexport type LocaleFormatedMessageKey = keyof LocaleFormatedMessages;\n\nexport const trf = (key: LocaleFormatedMessageKey) =>\n  formatedMessages[key][getLang()]();\n\nexport const initLang = () => {\n  const loc = document.location;\n  const params = new URL(loc.href).searchParams;\n  const candidate = params.get(\"lang\");\n  if (candidate) {\n    try {\n      const lang = LangZ.parse(candidate);\n      assign(\"lang\", lang);\n    } catch (err) {\n      console.error(\"Failed to recognize lang\", candidate);\n    }\n    return;\n  }\n\n  if (get(\"lang\") === null) {\n    try {\n      const lang = LangZ.parse(navigator.language.split(\"-\")[0]);\n      assign(\"lang\", lang);\n    } catch (err) {\n      console.error(\"Failed to set lang from navigator\", navigator.language);\n    }\n    return;\n  }\n};\n","import {\n  addClass,\n  DIV,\n  hasClass,\n  removeClass,\n  replaceNodeContent,\n} from \"../lib/html\";\nimport tr from \"../locale\";\nimport { assign, get, getTurn, subscribe } from \"../store\";\nimport { uciMoveList } from \"../util\";\n\ntype ClockElements = {\n  white: HTMLElement;\n  black: HTMLElement;\n};\n\nconst initClock = (updater: () => void) => {\n  const info = get(\"lichess/game-info\");\n  const state = get(\"lichess/game-state\");\n  stopClock();\n\n  if (info && state && state.status === \"started\") {\n    const interval = window.setInterval(updater, 500);\n    assign(\"clock\", { interval, gameId: info.gameId });\n  }\n};\n\nexport const stopClock = () => {\n  const clock = get(\"clock\");\n  if (clock) {\n    clearInterval(clock.interval);\n    assign(\"clock\", null);\n  }\n};\n\nconst checkNeedClock = (updater: () => void) => {\n  const clock = get(\"clock\");\n  const state = get(\"lichess/game-state\");\n  if (!state && clock) {\n    stopClock();\n  } else if (state && state.status === \"started\" && !clock) {\n    initClock(updater);\n  }\n};\n\nexport const mountClock = (root: Element) => {\n  const white = DIV(\"time white active\", \"--:--\");\n  const black = DIV(\"time black\", \"--:--\");\n  root.append(DIV(\"clock\", white, black));\n  renderClockTime({ white, black });\n  renderClockTurn({ white, black });\n\n  subscribe(\"lichess/game-state\")(() => {\n    checkNeedClock(() => renderClockTime({ white, black }));\n    renderClockTurn({ white, black });\n  });\n\n  initClock(() => {\n    renderClockTime({ white, black });\n  });\n};\n\nconst nullTime = \"--:--\";\nconst flag = () => DIV(\"flag\", tr(\"clock/flagged\"));\n\nconst currentTime = () => {\n  const info = get(\"lichess/game-info\");\n  const state = get(\"lichess/game-state\");\n  const turn = getTurn();\n  if (state && info && turn) {\n    if (uciMoveList(state.moves).length < 2) {\n      // Weird, but it looks like a thing on lichess\n      return { white: formatTime(state.wtime), black: formatTime(state.btime) };\n    }\n    const ellapsed = Date.now() - state.timestamp;\n    const white_time = turn === \"white\" ? state.wtime - ellapsed : state.wtime;\n    const black_time = turn === \"black\" ? state.btime - ellapsed : state.btime;\n    return { white: formatTime(white_time), black: formatTime(black_time) };\n  } else {\n    return { white: nullTime, black: nullTime };\n  }\n};\n\nconst renderClockTime = ({ white, black }: ClockElements) => {\n  const setWhite = replaceNodeContent(white);\n  const setBlack = replaceNodeContent(black);\n  const current = currentTime();\n  setWhite(current.white);\n  setBlack(current.black);\n};\n\nconst { floor } = Math;\nconst formatTime = (millis: number) => {\n  if (millis <= 0) {\n    return flag();\n  }\n  const seconds = millis / 1000;\n  const sec = floor(seconds % 60);\n  const minutes = floor((seconds / 60) % 60);\n  const hours = floor(seconds / 60 / 60);\n\n  const fs = sec < 10 ? `0${sec.toFixed(0)}` : `${sec.toFixed(0)}`;\n  const fm = minutes < 10 ? `0${minutes.toFixed(0)}` : `${minutes.toFixed(0)}`;\n  const fh = hours < 10 ? `0${hours.toFixed(0)}` : `${hours.toFixed(0)}`;\n\n  return seconds >= 3600 ? `${fh}:${fm}:${fs}` : `${fm}:${fs}`;\n};\n\nconst removeActive = removeClass(\"active\");\nconst addActive = addClass(\"active\");\nconst isActive = hasClass(\"active\");\nconst toggleActive = (e: HTMLElement, turn: boolean) =>\n  turn && !isActive(e)\n    ? addActive(e)\n    : !turn && isActive(e)\n    ? removeActive(e)\n    : void 0;\n\nconst renderClockTurn = ({ white, black }: ClockElements) => {\n  const turn = getTurn();\n  toggleActive(white, turn == \"white\");\n  toggleActive(black, turn == \"black\");\n};\n","import {\n  Role,\n  Square,\n  Nullable,\n  SquareRank,\n  SquareFile,\n  Move,\n  getFile,\n  getRank,\n  Color,\n} from \"./lib/ucui/types\";\nimport {\n  WHITE_PAWN,\n  WHITE_ROOK,\n  WHITE_KNIGHT,\n  WHITE_BISHOP,\n  WHITE_QUEEN,\n  WHITE_KING,\n  BLACK_BISHOP,\n  BLACK_KING,\n  BLACK_KNIGHT,\n  BLACK_PAWN,\n  BLACK_QUEEN,\n  BLACK_ROOK,\n} from \"./util\";\n\nexport type CastlingSide = \"KingSide\" | \"QueenSide\";\n\ntype SanNormal = {\n  readonly _tag: \"Normal\";\n  role: Role;\n  capture: boolean;\n  to: Square;\n  rank: Nullable<SquareRank>;\n  file: Nullable<SquareFile>;\n  promotion: Nullable<Role>;\n};\n\nconst sanNormal = (\n  role: Role,\n  file = null as Nullable<SquareFile>,\n  rank = null as Nullable<SquareRank>,\n  capture: boolean,\n  to: Square,\n  promotion = null as Nullable<Role>\n): SanNormal => ({ _tag: \"Normal\", role, capture, to, rank, file, promotion });\n\ntype SanCastle = {\n  readonly _tag: \"Castle\";\n  side: CastlingSide;\n};\n\nconst sanCastle = (side: CastlingSide): SanCastle => ({\n  _tag: \"Castle\",\n  side,\n});\n\ntype SanNull = {\n  readonly _tag: \"null\";\n};\n\nexport type San = SanNormal | SanCastle | SanNull;\n\nconst sanCandidates = (legalMoves: Move[], role: Role, to: Square): Move[] =>\n  legalMoves.filter((move) => {\n    switch (move._tag) {\n      case \"Castle\":\n        return false;\n      case \"EnPassant\":\n        return role == \"Pawn\" && move.to === to;\n      default:\n        return to === move.to && role === move.role;\n    }\n  });\n\nconst disambiguate = (m: Move, moves: Move[]): San => {\n  switch (m._tag) {\n    case \"Normal\": {\n      if (m.role === \"Pawn\") {\n        return sanNormal(\n          \"Pawn\",\n          m.capture !== null ? getFile(m.from) : null,\n          null,\n          m.capture !== null,\n          m.to,\n          m.promotion\n        );\n      } else {\n        let ambiguous = false;\n        let ambiguous_file = false;\n        let ambiguous_rank = false;\n        for (const candidate of moves) {\n          if (candidate._tag === \"Normal\") {\n            if (\n              m.from != candidate.from &&\n              m.role == candidate.role &&\n              m.to == candidate.to &&\n              m.promotion == candidate.promotion\n            ) {\n              ambiguous = true;\n              if (getRank(m.from) == getRank(candidate.from)) {\n                ambiguous_rank = true;\n              }\n              if (getFile(m.from) == getFile(candidate.from)) {\n                ambiguous_file = true;\n              }\n            }\n          }\n        }\n        return sanNormal(\n          m.role,\n          ambiguous && (!ambiguous_file || ambiguous_rank)\n            ? getFile(m.from)\n            : null,\n          ambiguous_file ? getRank(m.from) : null,\n          m.capture !== null,\n          m.to,\n          m.promotion\n        );\n      }\n    }\n    case \"EnPassant\":\n      return sanNormal(\"Pawn\", getFile(m.from), null, true, m.to, null);\n    case \"Castle\": {\n      if (getFile(m.rook) < getFile(m.king)) {\n        return sanCastle(\"QueenSide\");\n      } else {\n        return sanCastle(\"KingSide\");\n      }\n    }\n  }\n};\n\nconst roleLetter = (role: Role) => {\n  switch (role) {\n    case \"Pawn\":\n      return \"P\";\n    case \"Rook\":\n      return \"R\";\n    case \"Knight\":\n      return \"N\";\n    case \"Bishop\":\n      return \"B\";\n    case \"Queen\":\n      return \"Q\";\n    case \"King\":\n      return \"K\";\n  }\n};\n\nconst roleSymbol = (role: Role, color: Color) => {\n  switch (role) {\n    case \"Pawn\":\n      return color === \"white\" ? WHITE_PAWN : BLACK_PAWN;\n    case \"Rook\":\n      return color === \"white\" ? WHITE_ROOK : BLACK_ROOK;\n    case \"Knight\":\n      return color === \"white\" ? WHITE_KNIGHT : BLACK_KNIGHT;\n    case \"Bishop\":\n      return color === \"white\" ? WHITE_BISHOP : BLACK_BISHOP;\n    case \"Queen\":\n      return color === \"white\" ? WHITE_QUEEN : BLACK_QUEEN;\n    case \"King\":\n      return color === \"white\" ? WHITE_KING : BLACK_KING;\n  }\n};\n\nexport const fromMove = (legalMoves: Move[], move: Move): San => {\n  let legals: Move[] = [];\n  if (move._tag === \"Normal\" && move.role !== \"Pawn\") {\n    legals = sanCandidates(legalMoves, move.role, move.to);\n  }\n  return disambiguate(move, legals);\n};\n\ntype FormatOptions = {\n  symbol: boolean;\n  color: Color;\n  withAnnotation: boolean;\n};\n\nexport const formatOptions = (\n  symbol: boolean,\n  color: Color\n): FormatOptions => ({\n  symbol,\n  color,\n  withAnnotation: false,\n});\n\nexport const defaultFormat = (): FormatOptions => ({\n  symbol: false,\n  color: \"white\",\n  withAnnotation: false,\n});\n\nexport const defaultFormatSymbol = (): FormatOptions => ({\n  symbol: true,\n  color: \"white\",\n  withAnnotation: false,\n});\n\nconst toString = (\n  origin: Move,\n  san: San,\n  { symbol, color, withAnnotation }: FormatOptions\n) => {\n  const result: string[] = [];\n  switch (san._tag) {\n    case \"Normal\": {\n      if (san.role !== \"Pawn\") {\n        result.push(\n          symbol ? roleSymbol(san.role, color) : roleLetter(san.role)\n        );\n      }\n      if (san.file !== null) {\n        result.push(san.file.toLowerCase());\n      }\n      if (san.rank !== null) {\n        result.push(san.rank);\n      }\n      if (san.capture) {\n        result.push(\"x\");\n      }\n      result.push(san.to.toLowerCase());\n      if (san.promotion !== null) {\n        result.push(\n          \"=\",\n          symbol ? roleSymbol(san.promotion, color) : roleLetter(san.promotion)\n        );\n      }\n      break;\n    }\n    case \"Castle\": {\n      if (san.side === \"KingSide\") {\n        result.push(\"O\", \"-\", \"O\");\n      } else {\n        result.push(\"O\", \"-\", \"O\", \"-\", \"O\");\n      }\n      break;\n    }\n    case \"null\":\n      result.push(\"--\");\n  }\n  if (withAnnotation) {\n    if (origin.checkmate) {\n      result.push(\"#\");\n    } else if (origin.check) {\n      result.push(\"+\");\n    }\n  }\n  return result.join(\"\");\n};\n\nexport const formatMove = (\n  move: Move,\n  legals: Move[],\n  options: FormatOptions\n) => toString(move, fromMove(legals, move), options);\n","import { replaceNodeContent, SPAN, DIV } from \"./lib/html\";\nimport { defaultFormatSymbol, formatMove } from \"./san\";\nimport { get, getPlayerColor, getTurn, subscribe } from \"./store\";\nimport { getMoveListFromMoveString, legalMoves } from \"./util\";\n\nconst render = (opponentInfo: HTMLElement, opponentState: HTMLElement) => {\n  const info = get(\"lichess/game-info\");\n  const state = get(\"lichess/game-state\");\n  const turn = getTurn();\n  const playerColor = getPlayerColor();\n  if (info && state && turn && playerColor) {\n    const setOpponent = replaceNodeContent(opponentState);\n    const setOpponentInfo = replaceNodeContent(opponentInfo);\n\n    setOpponentInfo(SPAN(\"name\", info.opponent.username));\n\n    if (turn === playerColor) {\n      const moves = getMoveListFromMoveString(state.moves);\n\n      const move = moves.pop();\n      if (move) {\n        const formated = formatMove(\n          move,\n          legalMoves(state.moves, moves.length),\n          { ...defaultFormatSymbol(), withAnnotation: true }\n        );\n        setOpponent(formated);\n      } else {\n        setOpponent(DIV(\"idle\", `Your turn to play ${turn}`));\n      }\n    } else {\n      setOpponent(DIV(\"opponent-think\", \"…\"));\n    }\n  }\n};\n\nexport const mountOpponent = (root: HTMLElement) => {\n  const opponentInfo = DIV(\"info\");\n  const opponentState = DIV(\"state\");\n\n  // const toListButton = events(DIV(\"to-list to-button\", \"↪\"), (add) =>\n  //   add(\"click\", () => assign(\"screen\", \"movelist\"))\n  // );\n\n  render(opponentInfo, opponentState);\n  const engine = DIV(\"engine\", opponentInfo, opponentState);\n\n  root.append(engine);\n\n  subscribe(\"lichess/game-state\")(() => render(opponentInfo, opponentState));\n};\n","import { events } from \"../lib/dom\";\nimport { DIV } from \"../lib/html\";\nimport { Screen } from \"../lib/ucui/types\";\nimport tr from \"../locale\";\nimport { assign } from \"../store\";\n\ntype NameOrFullName =\n  | string\n  | HTMLElement\n  | { className: string; name: string };\n\nexport const name = (name: string, className?: string): NameOrFullName => ({\n  name,\n  className: className ?? name,\n});\n\nconst className = (n: NameOrFullName) =>\n  (typeof n === \"string\" ? n : n.className).toLowerCase().split(\" \").join(\"-\");\n\nconst displayName = (n: NameOrFullName) =>\n  typeof n === \"string\" ? n : n instanceof HTMLElement ? n : n.name;\n\nexport const button = (name: NameOrFullName, action: () => void) =>\n  events(DIV(`button button-${className(name)}`, displayName(name)), (add) =>\n    add(\"click\", action)\n  );\n\nexport const navigate = (screen: Screen, name: string | HTMLElement) =>\n  button(name, () => assign(\"screen\", screen));\n\nexport const navigateHome = () => navigate(\"home\", tr(\"button/home\"));\nexport const navigatePlayers = () => navigate(\"follow\", tr(\"button/players\"));\nexport const navigateSeek = () => navigate(\"seek\", tr(\"button/create\"));\n","import { emptyElement } from \"../lib/dom\";\nimport { DIV } from \"../lib/html\";\nimport { message, Message, Nullable } from \"../lib/ucui/types\";\nimport { playSound } from \"../sound\";\nimport { assign, get, subscribe } from \"../store\";\nimport { button } from \"./buttons\";\n\nlet timeoutRef: Nullable<number> = null;\n\nconst renderMessage = (root: HTMLElement, { body, from }: Message) => {\n  emptyElement(root);\n\n  root.classList.remove(\"hidden\");\n  root.append(\n    DIV(\"message\", DIV(\"from\", from), DIV(\"text\", body)),\n    button(\"close\", () => {\n      root.classList.add(\"hidden\");\n      assign(\"lichess/chat\", null);\n    })\n  );\n  if (timeoutRef !== null) {\n    clearTimeout(timeoutRef);\n  }\n  timeoutRef = window.setTimeout(() => {\n    assign(\"lichess/chat\", null);\n    root.classList.add(\"hidden\");\n    timeoutRef = null;\n  }, 4000);\n};\n\nexport const mountChat = (root: HTMLElement) => {\n  const chatBox = DIV(\"chat-box hidden\");\n  root.append(chatBox);\n\n  subscribe(\"lichess/chat\")(() => {\n    const message = get(\"lichess/chat\");\n    if (message) {\n      renderMessage(chatBox, message);\n    } else {\n      chatBox.classList.add(\"hidden\");\n      emptyElement(chatBox);\n    }\n  });\n};\n\nexport const chatbox = (from: string, body: string) => {\n  assign(\"lichess/chat\", message(from, body));\n  playSound(\"challenge\");\n};\n","import { attrs } from \"./lib/dom\";\nimport { AUDIO } from \"./lib/html\";\nimport { chatbox } from \"./view/chat\";\n// import { basedPath } from \"./env\";\n\n// const soundUrl = basedPath(\"chess.ogg\");\n\nconst makeAudio = (path: string) => {\n  const audio = attrs(AUDIO(\"-\", path), (set) => set(\"preload\", \"auto\"));\n  document.body.append(audio);\n  return audio;\n};\n\nconst sounds = {\n  move: makeAudio(\"/lichess-sounds/Move.ogg\"),\n  capture: makeAudio(\"/lichess-sounds/Capture.ogg\"),\n  challenge: makeAudio(\"/lichess-sounds/NewChallenge.ogg\"),\n};\n\ntype Sound = keyof typeof sounds;\n\nexport const playSound = (key: Sound) => {\n  sounds[key]\n    .play()\n    .catch((err) =>\n      chatbox(\"Téléchecs\", `Could not play a sound because of: ${err}`)\n    );\n};\n","import {\n  BoardEvent,\n  ChatLineEvent,\n  GameFullEvent,\n  GameStateEvent,\n} from \"./lib/ucui/lichess-types\";\nimport {\n  Move,\n  getMoveCapture,\n  inputNone,\n  messageFromChatEvent,\n  moveToUCI,\n  stampEvent,\n} from \"./lib/ucui/types\";\nimport { boardMove, streamBoard } from \"./api\";\n\nimport { playSound } from \"./sound\";\nimport { assign, get, getPlayerColor, getTurn, withBatch } from \"./store\";\nimport { lastMove } from \"./util\";\nimport { fromNullable, map } from \"./lib/option\";\n\nconst handleStart = (message: GameFullEvent) =>\n  withBatch(({ assign, end }) => {\n    assign(\"input\", inputNone());\n    assign(\"lichess/game-state\", stampEvent(message.state));\n    assign(\"started\", true);\n    end();\n    return true;\n  });\n\nconst makeNoise = map((move: Move) => {\n  if (getMoveCapture(move)) {\n    playSound(\"capture\");\n  } else {\n    playSound(\"move\");\n  }\n});\n\nconst handleMove = (message: GameStateEvent) =>\n  withBatch(({ assign, end }) => {\n    // console.debug(\"handleMove\", message);\n    assign(\"input\", inputNone());\n    assign(\"lichess/game-state\", stampEvent(message));\n    if (getPlayerColor() === getTurn()) {\n      makeNoise(fromNullable(lastMove(message.moves)));\n    }\n    end();\n    return true;\n  });\n\nconst handleChat = (message: ChatLineEvent) => {\n  assign(\"lichess/chat\", messageFromChatEvent(message));\n  return true;\n};\n\nconst handleIcoming = (event: BoardEvent) => {\n  switch (event.type) {\n    case \"gameFull\":\n      return handleStart(event);\n    case \"gameState\":\n      return handleMove(event);\n    case \"chatLine\":\n      return handleChat(event);\n    case \"opponentGone\":\n      return true;\n  }\n};\n\nexport const connect = (gameId: string) => streamBoard(gameId, handleIcoming);\n\nexport const sendMove = (move: Move) => {\n  const info = get(\"lichess/game-info\");\n  if (info) {\n    boardMove(info.gameId, moveToUCI(move));\n  }\n};\n","import { events, emptyElement } from \"./lib/dom\";\nimport { DIV, replaceNodeContent } from \"./lib/html\";\nimport { GameStateEvent } from \"./lib/ucui/lichess-types\";\nimport {\n  Role,\n  Color,\n  Move,\n  Nullable,\n  inputRole,\n  inputMove,\n  getMoveRole,\n  Square,\n  squareRanks,\n  squareFiles,\n  makeSquare,\n  getInputRole,\n  getFile,\n  getMoveTo,\n  SquareFile,\n  SquareRank,\n  inputCandidates,\n  SomeInput,\n} from \"./lib/ucui/types\";\nimport { sendMove } from \"./play\";\nimport { formatOptions, formatMove } from \"./san\";\nimport {\n  assign,\n  getPlayerColor,\n  getTurn,\n  get,\n  subscribe,\n  defaultInput,\n  withBatch,\n  Assign,\n} from \"./store\";\n\nimport {\n  BLACK_PAWN,\n  WHITE_PAWN,\n  BLACK_ROOK,\n  WHITE_ROOK,\n  BLACK_KNIGHT,\n  WHITE_KNIGHT,\n  BLACK_BISHOP,\n  WHITE_BISHOP,\n  BLACK_QUEEN,\n  WHITE_QUEEN,\n  BLACK_KING,\n  WHITE_KING,\n  ROLE_LIST,\n  show,\n  hide,\n  legalMoves,\n} from \"./util\";\n\nconst setFile = (file: SquareFile) => assign(\"input-san/file\", file);\nconst setRank = (rank: SquareRank) => assign(\"input-san/rank\", rank);\nconst clearSan = (assign: Assign) => {\n  assign(\"input-san/file\", null);\n  assign(\"input-san/rank\", null);\n};\nconst symbol = (role: Role, color: Color) => {\n  switch (role) {\n    case \"Pawn\":\n      return color === \"black\" ? BLACK_PAWN : WHITE_PAWN;\n    case \"Rook\":\n      return color === \"black\" ? BLACK_ROOK : WHITE_ROOK;\n    case \"Knight\":\n      return color === \"black\" ? BLACK_KNIGHT : WHITE_KNIGHT;\n    case \"Bishop\":\n      return color === \"black\" ? BLACK_BISHOP : WHITE_BISHOP;\n    case \"Queen\":\n      return color === \"black\" ? BLACK_QUEEN : WHITE_QUEEN;\n    case \"King\":\n      return color === \"black\" ? BLACK_KING : WHITE_KING;\n  }\n};\n\nconst hasMoves = (role: Role, moveList: Move[]) =>\n  moveList.some((m) => {\n    switch (m._tag) {\n      case \"Normal\":\n        return m.role === role;\n      case \"Castle\":\n        return role === \"King\";\n      case \"EnPassant\":\n        return role === \"Pawn\";\n    }\n  });\n\nconst selClass = (s: boolean) => (s ? \"selected\" : \"\");\n\nconst renderPieces = (selected: Nullable<Role>, moveList: Move[]) =>\n  ROLE_LIST.map((role) =>\n    hasMoves(role, moveList)\n      ? events(\n          DIV(\n            `piece ${role}  ${selClass(selected === role)}`,\n            symbol(role, \"black\")\n          ),\n          (add) =>\n            add(\"click\", () =>\n              withBatch(({ assign, end }) => {\n                clearSan(assign);\n                selected === role\n                  ? assign(\"input\", defaultInput())\n                  : assign(\"input\", inputRole(role));\n                end();\n              })\n            )\n        )\n      : DIV(\n          `piece ${role}  ${selClass(selected === role)}`,\n          symbol(role, \"white\")\n        )\n  );\n\nconst playMove = (move: Move) =>\n  withBatch(({ assign, end }) => {\n    clearSan(assign);\n    assign(\"input\", inputMove(move));\n    end();\n    sendMove(move);\n  });\n\nconst makeFinder = (candidates: Move[]) => (s: Square) =>\n  candidates.filter((move) => {\n    switch (move._tag) {\n      case \"Castle\": {\n        switch (s) {\n          case \"G1\":\n            return move.king === \"E1\" && move.rook == \"H1\";\n          case \"C1\":\n            return move.king === \"E1\" && move.rook == \"A1\";\n          case \"G8\":\n            return move.king === \"E8\" && move.rook == \"H8\";\n          case \"C8\":\n            return move.king === \"E8\" && move.rook == \"A8\";\n        }\n        return false;\n      }\n\n      case \"Normal\":\n      case \"EnPassant\":\n        return move.to === s;\n    }\n  });\n\nconst selectableMove = (game: GameStateEvent) => (move: Move) =>\n  events(\n    DIV(\n      \"move\",\n      formatMove(move, legalMoves(game.moves), formatOptions(true, \"black\"))\n    ),\n    (add) =>\n      add(\"click\", () => {\n        assign(\"input-san/file\", null);\n        playMove(move);\n      })\n  );\n\nconst renderSelect = (moves: Move[]) => {\n  const game = get(\"lichess/game-state\");\n  if (game) {\n    return moves.map(selectableMove(game));\n  } else {\n    return [];\n  }\n};\nconst renderFiles = (\n  input: SomeInput,\n  selectedFile: Nullable<SquareFile>,\n  moveList: Move[]\n) => {\n  const candidateFiles = new Set(moveList.map(getMoveTo).map(getFile));\n  return squareFiles.map((file) => {\n    if (file === selectedFile) {\n      return DIV(\n        `button-select file file-${file} selected`,\n        file.toLowerCase()\n      );\n    } else if (candidateFiles.has(file)) {\n      return events(\n        DIV(`button-select file file-${file} candidate`, file.toLowerCase()),\n        (add) =>\n          add(\"click\", () =>\n            withBatch(({ assign, end }) => {\n              clearSan(assign);\n              assign(\"input\", {\n                _tag: \"role\",\n                role: getInputRole(input),\n              });\n              end();\n              setFile(file);\n            })\n          )\n      );\n    } else {\n      return DIV(`button-select file file-${file} nothing`, file.toLowerCase());\n    }\n  });\n};\nconst renderRanks = (\n  input: SomeInput,\n  selectedFile: Nullable<SquareFile>,\n  moveList: Move[]\n) => {\n  const findMoves = makeFinder(\n    moveList.filter((m) => getMoveRole(m) === getInputRole(input))\n  );\n\n  return squareRanks.map((rank) => {\n    if (selectedFile === null) {\n      return DIV(`button-select rank rank-${rank} nothing`, rank.toLowerCase());\n    }\n    const square = makeSquare(selectedFile, rank);\n    const moves = findMoves(square);\n    if (moves.length === 0) {\n      return DIV(`button-select rank rank-${rank} nothing`, rank.toLowerCase());\n    }\n\n    if (rank === get(\"input-san/rank\")) {\n      return DIV(\n        `button-select rank rank-${rank} selected`,\n        rank.toLowerCase()\n      );\n    }\n    return events(\n      DIV(`button-select rank rank-${rank} candidate`, rank.toLowerCase()),\n      (add) =>\n        add(\"click\", () => {\n          setRank(rank);\n          const role = getInputRole(input);\n          if (role) {\n            assign(\"input\", inputCandidates(role, moves));\n          }\n        })\n    );\n  });\n};\n\nconst renderMoves = (input: SomeInput, moveList: Move[]) => {\n  const candidates = input._tag === \"candidates\" ? input.candidates : [];\n  const selectElement =\n    candidates.length === 0\n      ? DIV(\"select hidden\")\n      : DIV(\"select\", ...renderSelect(candidates));\n  const selectedFile = get(\"input-san/file\");\n\n  const files = DIV(\n    \"square-select files\",\n    ...renderFiles(input, selectedFile, moveList)\n  );\n  const ranks = DIV(\n    \"square-select ranks\",\n    ...renderRanks(input, selectedFile, moveList)\n  );\n\n  return [selectElement, ranks, files];\n};\n\nexport const mountInput = (root: HTMLElement) => {\n  const pieces = DIV(\"pieces\");\n  const moves = DIV(\"moves\");\n  const inputElement = DIV(\"input input-san\", moves, pieces);\n  root.append(inputElement);\n\n  const update = () => {\n    const state = get(\"lichess/game-state\");\n    if (state && getTurn() === getPlayerColor()) {\n      const replacePieces = replaceNodeContent(pieces);\n      const replaceMoves = replaceNodeContent(moves);\n      const input = get(\"input\");\n      const lgs = legalMoves(state.moves);\n\n      if (input._tag !== \"none\" && lgs.length > 0) {\n        const selectedRole = getInputRole(input);\n        replacePieces(...renderPieces(selectedRole, lgs));\n        replaceMoves(\n          ...renderMoves(\n            input,\n            lgs.filter((m) => getMoveRole(m) === selectedRole)\n          )\n        );\n        show(moves);\n      } else {\n        replacePieces(...renderPieces(null, lgs));\n        emptyElement(moves);\n        hide(moves);\n      }\n\n      // const selectedRole = getInputRole(input);\n      //   replacePieces(...renderPieces(selectedRole, lgs));\n      //   if (\n      //     (input._tag === \"role\" || input._tag === \"candidates\") &&\n      //     lgs.length > 0\n      //   ) {\n      //     show(moves);\n      //     replaceMoves(\n      //       ...renderMoves(\n      //         input,\n      //         lgs.filter((m) => getMoveRole(m) === input.role)\n      //       )\n      //     );\n      //   } else {\n      //     hide(moves);\n      //     emptyElement(moves);\n      //   }\n    } else {\n      emptyElement(moves);\n      emptyElement(pieces);\n    }\n  };\n  subscribe(\n    \"lichess/game-state\",\n    \"lichess/game-info\",\n    \"input\",\n    \"input-san/file\",\n    \"input-san/rank\"\n  )(update);\n\n  update();\n};\n","import { Nullable } from \"./lib/ucui/types\";\nimport { assign } from \"./store\";\n\nlet appRoot: Nullable<HTMLElement> = null;\n\nexport const setFullScreenRoot = (element: HTMLElement) => (appRoot = element);\n\nexport const toggleFullscreen = (toggle: boolean) => {\n  if (appRoot === null) {\n    return;\n  }\n  toggle\n    ? appRoot\n        .requestFullscreen()\n        .then(() => assign(\"fullscreen\", true))\n        .catch((err) => console.warn(\"failed to enter fullscreen\", err))\n    : document\n        .exitFullscreen()\n        .then(() => assign(\"fullscreen\", false))\n        .catch((err) => console.warn(\"failed to exit fullscreen\", err));\n};\n","import { addClass, DIV, removeClass, replaceNodeContent } from \"./lib/html\";\nimport {\n  ChallengeJson,\n  GameEventInfo,\n  GameStateEvent,\n} from \"./lib/ucui/lichess-types\";\nimport { inputNone, Nullable } from \"./lib/ucui/types\";\nimport {\n  boardDraw,\n  boardResign,\n  challengeAccept,\n  challengeDecline,\n} from \"./api\";\nimport { mountClock } from \"./view/clock\";\nimport { mountOpponent } from \"./opponent\";\nimport { mountInput } from \"./input-san\";\nimport {\n  assign,\n  dispatch,\n  get,\n  getOponentColor,\n  getPlayerColor,\n  subscribe,\n} from \"./store\";\nimport { button, name, navigate } from \"./view/buttons\";\nimport { toggleFullscreen } from \"./fullscreen\";\nimport { noop } from \"./util\";\nimport { emptyElement } from \"./lib/dom\";\n\nexport const startNewGame = (challenge: ChallengeJson) => {\n  assign(\"lichess/current-challenge\", challenge);\n  assign(\"lichess/challenges\", []);\n  assign(\"input\", inputNone());\n  challengeAccept(challenge.id);\n};\n\nexport const declineChallenge = (challenge: ChallengeJson) => {\n  dispatch(\"lichess/challenges\", (cs) =>\n    cs.filter((c) => c.id !== challenge.id)\n  );\n  challengeDecline(challenge.id, \"generic\");\n};\n\nconst mountLock = (root: HTMLElement) => {\n  const lock = DIV(\"lock locked\");\n  const setLock = addClass(\"locked\");\n  const delLock = removeClass(\"locked\");\n  const update = () => (get(\"lockScreen\") ? setLock(lock) : delLock(lock));\n  const sub = subscribe(\"lockScreen\");\n  sub(update);\n  update();\n  root.append(lock);\n};\n\nconst FULLSCREEN_CHAR = \"⛶\";\nconst DRAW_CHAR = \"½\";\nconst RESIGN_CHAR = \"⚐\";\nconst MOVELIST_CHAR = \"1.\";\n\nconst fullscreen = () =>\n  get(\"fullscreen\")\n    ? button(name(FULLSCREEN_CHAR, \"fullscreen-off\"), () =>\n        toggleFullscreen(false)\n      )\n    : button(name(FULLSCREEN_CHAR, \"fullscreen-on\"), () =>\n        toggleFullscreen(true)\n      );\n\nconst isDrawOffer = (state: GameStateEvent) => {\n  const color = getPlayerColor();\n  const ocolor = getOponentColor();\n  if (state && color && ocolor) {\n    if (\n      (color === \"white\" && state.wdraw) ||\n      (color === \"black\" && state.bdraw)\n    ) {\n      return \"me\";\n    } else if (\n      (ocolor === \"white\" && state.wdraw) ||\n      (ocolor === \"black\" && state.bdraw)\n    ) {\n      return \"other\";\n    }\n  }\n  return \"none\";\n};\n\nconst draw = (state: GameStateEvent, info: GameEventInfo) => {\n  switch (isDrawOffer(state)) {\n    case \"me\":\n      return button(name(DRAW_CHAR, \"draw-waiting\"), noop);\n    case \"other\":\n      return DIV(\n        \"draw-answer\",\n        DIV(\"icon\", DRAW_CHAR),\n        button(name(\"Accept\", \"draw-accept\"), () =>\n          boardDraw(info.fullId, \"yes\")\n        ),\n        button(name(\"Decline\", \"draw-decline\"), () => {\n          boardDraw(info.fullId, \"no\");\n          dispatch(\"lichess/game-state\", (state) =>\n            state ? { ...state, bdraw: false, wdraw: false } : state\n          );\n        })\n      );\n    case \"none\":\n      return button(name(DRAW_CHAR, \"draw-offer\"), () =>\n        boardDraw(info.fullId, \"yes\")\n      );\n  }\n};\n\nconst resign = (info: GameEventInfo) =>\n  button(name(RESIGN_CHAR, \"resign\"), () => boardResign(info.fullId));\n\nconst antiSlip = (...nodes: HTMLElement[]) => {\n  const root = DIV(\"anti-slip on\", ...nodes);\n  let antiSlipTimeout: Nullable<number> = null;\n  root.addEventListener(\"click\", () => {\n    if (antiSlipTimeout) {\n      return;\n    }\n\n    root.classList.remove(\"on\");\n    antiSlipTimeout = window.setTimeout(() => {\n      antiSlipTimeout = null;\n      root.classList.add(\"on\");\n    }, 6000);\n  });\n  return root;\n};\n\nconst mountActions = (root: HTMLElement) => {\n  const viewActions = DIV(\"game-actions actions-view\");\n  const gameActions = DIV(\"game-actions actions-game\");\n  const update = () => {\n    const state = get(\"lichess/game-state\");\n    const info = get(\"lichess/game-info\");\n    const replaceView = replaceNodeContent(viewActions);\n    replaceView(fullscreen(), navigate(\"movelist\", MOVELIST_CHAR));\n    if (state && info) {\n      const replaceGame = replaceNodeContent(gameActions);\n      replaceGame(antiSlip(draw(state, info), resign(info)));\n    } else {\n      emptyElement(gameActions);\n    }\n  };\n\n  update();\n  root.append(viewActions, gameActions);\n  subscribe(\"lichess/game-info\", \"lichess/game-state\", \"fullscreen\")(update);\n};\n\nexport const mountGame = (root: HTMLElement) => {\n  mountOpponent(root);\n  mountActions(root);\n  mountInput(root);\n  mountClock(root);\n  mountLock(root);\n};\n","\"use strict\";\n/**\n * An implementation of rfc6749#section-4.1 and rfc7636.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\n;\n;\n/**\n * A list of OAuth2AuthCodePKCE errors.\n */\n// To \"namespace\" all errors.\nvar ErrorOAuth2 = /** @class */ (function () {\n    function ErrorOAuth2() {\n    }\n    ErrorOAuth2.prototype.toString = function () { return 'ErrorOAuth2'; };\n    return ErrorOAuth2;\n}());\nexports.ErrorOAuth2 = ErrorOAuth2;\n// For really unknown errors.\nvar ErrorUnknown = /** @class */ (function (_super) {\n    __extends(ErrorUnknown, _super);\n    function ErrorUnknown() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnknown.prototype.toString = function () { return 'ErrorUnknown'; };\n    return ErrorUnknown;\n}(ErrorOAuth2));\nexports.ErrorUnknown = ErrorUnknown;\n// Some generic, internal errors that can happen.\nvar ErrorNoAuthCode = /** @class */ (function (_super) {\n    __extends(ErrorNoAuthCode, _super);\n    function ErrorNoAuthCode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorNoAuthCode.prototype.toString = function () { return 'ErrorNoAuthCode'; };\n    return ErrorNoAuthCode;\n}(ErrorOAuth2));\nexports.ErrorNoAuthCode = ErrorNoAuthCode;\nvar ErrorInvalidReturnedStateParam = /** @class */ (function (_super) {\n    __extends(ErrorInvalidReturnedStateParam, _super);\n    function ErrorInvalidReturnedStateParam() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidReturnedStateParam.prototype.toString = function () { return 'ErrorInvalidReturnedStateParam'; };\n    return ErrorInvalidReturnedStateParam;\n}(ErrorOAuth2));\nexports.ErrorInvalidReturnedStateParam = ErrorInvalidReturnedStateParam;\nvar ErrorInvalidJson = /** @class */ (function (_super) {\n    __extends(ErrorInvalidJson, _super);\n    function ErrorInvalidJson() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidJson.prototype.toString = function () { return 'ErrorInvalidJson'; };\n    return ErrorInvalidJson;\n}(ErrorOAuth2));\nexports.ErrorInvalidJson = ErrorInvalidJson;\n// Errors that occur across many endpoints\nvar ErrorInvalidScope = /** @class */ (function (_super) {\n    __extends(ErrorInvalidScope, _super);\n    function ErrorInvalidScope() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidScope.prototype.toString = function () { return 'ErrorInvalidScope'; };\n    return ErrorInvalidScope;\n}(ErrorOAuth2));\nexports.ErrorInvalidScope = ErrorInvalidScope;\nvar ErrorInvalidRequest = /** @class */ (function (_super) {\n    __extends(ErrorInvalidRequest, _super);\n    function ErrorInvalidRequest() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidRequest.prototype.toString = function () { return 'ErrorInvalidRequest'; };\n    return ErrorInvalidRequest;\n}(ErrorOAuth2));\nexports.ErrorInvalidRequest = ErrorInvalidRequest;\nvar ErrorInvalidToken = /** @class */ (function (_super) {\n    __extends(ErrorInvalidToken, _super);\n    function ErrorInvalidToken() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidToken.prototype.toString = function () { return 'ErrorInvalidToken'; };\n    return ErrorInvalidToken;\n}(ErrorOAuth2));\nexports.ErrorInvalidToken = ErrorInvalidToken;\n/**\n * Possible authorization grant errors given by the redirection from the\n * authorization server.\n */\nvar ErrorAuthenticationGrant = /** @class */ (function (_super) {\n    __extends(ErrorAuthenticationGrant, _super);\n    function ErrorAuthenticationGrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAuthenticationGrant.prototype.toString = function () { return 'ErrorAuthenticationGrant'; };\n    return ErrorAuthenticationGrant;\n}(ErrorOAuth2));\nexports.ErrorAuthenticationGrant = ErrorAuthenticationGrant;\nvar ErrorUnauthorizedClient = /** @class */ (function (_super) {\n    __extends(ErrorUnauthorizedClient, _super);\n    function ErrorUnauthorizedClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnauthorizedClient.prototype.toString = function () { return 'ErrorUnauthorizedClient'; };\n    return ErrorUnauthorizedClient;\n}(ErrorAuthenticationGrant));\nexports.ErrorUnauthorizedClient = ErrorUnauthorizedClient;\nvar ErrorAccessDenied = /** @class */ (function (_super) {\n    __extends(ErrorAccessDenied, _super);\n    function ErrorAccessDenied() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAccessDenied.prototype.toString = function () { return 'ErrorAccessDenied'; };\n    return ErrorAccessDenied;\n}(ErrorAuthenticationGrant));\nexports.ErrorAccessDenied = ErrorAccessDenied;\nvar ErrorUnsupportedResponseType = /** @class */ (function (_super) {\n    __extends(ErrorUnsupportedResponseType, _super);\n    function ErrorUnsupportedResponseType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnsupportedResponseType.prototype.toString = function () { return 'ErrorUnsupportedResponseType'; };\n    return ErrorUnsupportedResponseType;\n}(ErrorAuthenticationGrant));\nexports.ErrorUnsupportedResponseType = ErrorUnsupportedResponseType;\nvar ErrorServerError = /** @class */ (function (_super) {\n    __extends(ErrorServerError, _super);\n    function ErrorServerError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorServerError.prototype.toString = function () { return 'ErrorServerError'; };\n    return ErrorServerError;\n}(ErrorAuthenticationGrant));\nexports.ErrorServerError = ErrorServerError;\nvar ErrorTemporarilyUnavailable = /** @class */ (function (_super) {\n    __extends(ErrorTemporarilyUnavailable, _super);\n    function ErrorTemporarilyUnavailable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorTemporarilyUnavailable.prototype.toString = function () { return 'ErrorTemporarilyUnavailable'; };\n    return ErrorTemporarilyUnavailable;\n}(ErrorAuthenticationGrant));\nexports.ErrorTemporarilyUnavailable = ErrorTemporarilyUnavailable;\n/**\n * A list of possible access token response errors.\n */\nvar ErrorAccessTokenResponse = /** @class */ (function (_super) {\n    __extends(ErrorAccessTokenResponse, _super);\n    function ErrorAccessTokenResponse() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorAccessTokenResponse.prototype.toString = function () { return 'ErrorAccessTokenResponse'; };\n    return ErrorAccessTokenResponse;\n}(ErrorOAuth2));\nexports.ErrorAccessTokenResponse = ErrorAccessTokenResponse;\nvar ErrorInvalidClient = /** @class */ (function (_super) {\n    __extends(ErrorInvalidClient, _super);\n    function ErrorInvalidClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidClient.prototype.toString = function () { return 'ErrorInvalidClient'; };\n    return ErrorInvalidClient;\n}(ErrorAccessTokenResponse));\nexports.ErrorInvalidClient = ErrorInvalidClient;\nvar ErrorInvalidGrant = /** @class */ (function (_super) {\n    __extends(ErrorInvalidGrant, _super);\n    function ErrorInvalidGrant() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorInvalidGrant.prototype.toString = function () { return 'ErrorInvalidGrant'; };\n    return ErrorInvalidGrant;\n}(ErrorAccessTokenResponse));\nexports.ErrorInvalidGrant = ErrorInvalidGrant;\nvar ErrorUnsupportedGrantType = /** @class */ (function (_super) {\n    __extends(ErrorUnsupportedGrantType, _super);\n    function ErrorUnsupportedGrantType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ErrorUnsupportedGrantType.prototype.toString = function () { return 'ErrorUnsupportedGrantType'; };\n    return ErrorUnsupportedGrantType;\n}(ErrorAccessTokenResponse));\nexports.ErrorUnsupportedGrantType = ErrorUnsupportedGrantType;\n/**\n * WWW-Authenticate error object structure for less error prone handling.\n */\nvar ErrorWWWAuthenticate = /** @class */ (function () {\n    function ErrorWWWAuthenticate() {\n        this.realm = \"\";\n        this.error = \"\";\n    }\n    return ErrorWWWAuthenticate;\n}());\nexports.ErrorWWWAuthenticate = ErrorWWWAuthenticate;\nexports.RawErrorToErrorClassMap = {\n    invalid_request: ErrorInvalidRequest,\n    invalid_grant: ErrorInvalidGrant,\n    unauthorized_client: ErrorUnauthorizedClient,\n    access_denied: ErrorAccessDenied,\n    unsupported_response_type: ErrorUnsupportedResponseType,\n    invalid_scope: ErrorInvalidScope,\n    server_error: ErrorServerError,\n    temporarily_unavailable: ErrorTemporarilyUnavailable,\n    invalid_client: ErrorInvalidClient,\n    unsupported_grant_type: ErrorUnsupportedGrantType,\n    invalid_json: ErrorInvalidJson,\n    invalid_token: ErrorInvalidToken,\n};\n/**\n * Translate the raw error strings returned from the server into error classes.\n */\nfunction toErrorClass(rawError) {\n    return new (exports.RawErrorToErrorClassMap[rawError] || ErrorUnknown)();\n}\nexports.toErrorClass = toErrorClass;\n/**\n * A convience function to turn, for example, `Bearer realm=\"bity.com\",\n * error=\"invalid_client\"` into `{ realm: \"bity.com\", error: \"invalid_client\"\n * }`.\n */\nfunction fromWWWAuthenticateHeaderStringToObject(a) {\n    var obj = a\n        .slice(\"Bearer \".length)\n        .replace(/\"/g, '')\n        .split(', ')\n        .map(function (tokens) {\n        var _a;\n        var _b = tokens.split('='), k = _b[0], v = _b[1];\n        return _a = {}, _a[k] = v, _a;\n    })\n        .reduce(function (a, c) { return (__assign(__assign({}, a), c)); }, {});\n    return { realm: obj.realm, error: obj.error };\n}\nexports.fromWWWAuthenticateHeaderStringToObject = fromWWWAuthenticateHeaderStringToObject;\n/**\n * HTTP headers that we need to access.\n */\nvar HEADER_AUTHORIZATION = \"Authorization\";\nvar HEADER_WWW_AUTHENTICATE = \"WWW-Authenticate\";\n/**\n * To store the OAuth client's data between websites due to redirection.\n */\nexports.LOCALSTORAGE_ID = \"oauth2authcodepkce\";\nexports.LOCALSTORAGE_STATE = exports.LOCALSTORAGE_ID + \"-state\";\n/**\n * The maximum length for a code verifier for the best security we can offer.\n * Please note the NOTE section of RFC 7636 § 4.1 - the length must be >= 43,\n * but <= 128, **after** base64 url encoding. This means 32 code verifier bytes\n * encoded will be 43 bytes, or 96 bytes encoded will be 128 bytes. So 96 bytes\n * is the highest valid value that can be used.\n */\nexports.RECOMMENDED_CODE_VERIFIER_LENGTH = 96;\n/**\n * A sensible length for the state's length, for anti-csrf.\n */\nexports.RECOMMENDED_STATE_LENGTH = 32;\n/**\n * Character set to generate code verifier defined in rfc7636.\n */\nvar PKCE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n/**\n * OAuth 2.0 client that ONLY supports authorization code flow, with PKCE.\n *\n * Many applications structure their OAuth usage in different ways. This class\n * aims to provide both flexible and easy ways to use this configuration of\n * OAuth.\n *\n * See `example.ts` for how you'd typically use this.\n *\n * For others, review this class's methods.\n */\nvar OAuth2AuthCodePKCE = /** @class */ (function () {\n    function OAuth2AuthCodePKCE(config) {\n        this.state = {};\n        this.config = config;\n        this.recoverState();\n        return this;\n    }\n    /**\n     * Attach the OAuth logic to all fetch requests and translate errors (either\n     * returned as json or through the WWW-Authenticate header) into nice error\n     * classes.\n     */\n    OAuth2AuthCodePKCE.prototype.decorateFetchHTTPClient = function (fetch) {\n        var _this = this;\n        return function (url, config) {\n            var rest = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                rest[_i - 2] = arguments[_i];\n            }\n            if (!_this.state.isHTTPDecoratorActive) {\n                return fetch.apply(void 0, __spreadArrays([url, config], rest));\n            }\n            return _this\n                .getAccessToken()\n                .then(function (_a) {\n                var token = _a.token;\n                var configNew = Object.assign({}, config);\n                if (!configNew.headers) {\n                    configNew.headers = {};\n                }\n                configNew.headers[HEADER_AUTHORIZATION] = \"Bearer \" + token.value;\n                return fetch.apply(void 0, __spreadArrays([url, configNew], rest));\n            })\n                .then(function (res) {\n                if (res.ok) {\n                    return res;\n                }\n                if (!res.headers.has(HEADER_WWW_AUTHENTICATE.toLowerCase())) {\n                    return res;\n                }\n                var error = toErrorClass(fromWWWAuthenticateHeaderStringToObject(res.headers.get(HEADER_WWW_AUTHENTICATE.toLowerCase())).error);\n                if (error instanceof ErrorInvalidToken) {\n                    _this.config\n                        .onAccessTokenExpiry(function () { return _this.exchangeRefreshTokenForAccessToken(); });\n                }\n                return Promise.reject(error);\n            });\n        };\n    };\n    /**\n     * If there is an error, it will be passed back as a rejected Promise.\n     * If there is no code, the user should be redirected via\n     * [fetchAuthorizationCode].\n     */\n    OAuth2AuthCodePKCE.prototype.isReturningFromAuthServer = function () {\n        var error = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, 'error');\n        if (error) {\n            return Promise.reject(toErrorClass(error));\n        }\n        var code = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, 'code');\n        if (!code) {\n            return Promise.resolve(false);\n        }\n        var state = JSON.parse(localStorage.getItem(exports.LOCALSTORAGE_STATE) || '{}');\n        var stateQueryParam = OAuth2AuthCodePKCE.extractParamFromUrl(location.href, 'state');\n        if (stateQueryParam !== state.stateQueryParam) {\n            console.warn(\"state query string parameter doesn't match the one sent! Possible malicious activity somewhere.\");\n            return Promise.reject(new ErrorInvalidReturnedStateParam());\n        }\n        state.authorizationCode = code;\n        state.hasAuthCodeBeenExchangedForAccessToken = false;\n        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(state));\n        this.setState(state);\n        return Promise.resolve(true);\n    };\n    /**\n     * Fetch an authorization grant via redirection. In a sense this function\n     * doesn't return because of the redirect behavior (uses `location.replace`).\n     *\n     * @param oneTimeParams A way to specify \"one time\" used query string\n     * parameters during the authorization code fetching process, usually for\n     * values which need to change at run-time.\n     */\n    OAuth2AuthCodePKCE.prototype.fetchAuthorizationCode = function (oneTimeParams) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, clientId, extraAuthorizationParams, redirectUrl, scopes, _b, codeChallenge, codeVerifier, stateQueryParam, url, extraParameters;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this.assertStateAndConfigArePresent();\n                        _a = this.config, clientId = _a.clientId, extraAuthorizationParams = _a.extraAuthorizationParams, redirectUrl = _a.redirectUrl, scopes = _a.scopes;\n                        return [4 /*yield*/, OAuth2AuthCodePKCE\n                                .generatePKCECodes()];\n                    case 1:\n                        _b = _c.sent(), codeChallenge = _b.codeChallenge, codeVerifier = _b.codeVerifier;\n                        stateQueryParam = OAuth2AuthCodePKCE\n                            .generateRandomState(exports.RECOMMENDED_STATE_LENGTH);\n                        this.state = __assign(__assign({}, this.state), { codeChallenge: codeChallenge,\n                            codeVerifier: codeVerifier,\n                            stateQueryParam: stateQueryParam, isHTTPDecoratorActive: true });\n                        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(this.state));\n                        url = this.config.authorizationUrl\n                            + \"?response_type=code&\"\n                            + (\"client_id=\" + encodeURIComponent(clientId) + \"&\")\n                            + (\"redirect_uri=\" + encodeURIComponent(redirectUrl) + \"&\")\n                            + (\"scope=\" + encodeURIComponent(scopes.join(' ')) + \"&\")\n                            + (\"state=\" + stateQueryParam + \"&\")\n                            + (\"code_challenge=\" + encodeURIComponent(codeChallenge) + \"&\")\n                            + \"code_challenge_method=S256\";\n                        if (extraAuthorizationParams || oneTimeParams) {\n                            extraParameters = __assign(__assign({}, extraAuthorizationParams), oneTimeParams);\n                            url = url + \"&\" + OAuth2AuthCodePKCE.objectToQueryString(extraParameters);\n                        }\n                        location.replace(url);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Tries to get the current access token. If there is none\n     * it will fetch another one. If it is expired, it will fire\n     * [onAccessTokenExpiry] but it's up to the user to call the refresh token\n     * function. This is because sometimes not using the refresh token facilities\n     * is easier.\n     */\n    OAuth2AuthCodePKCE.prototype.getAccessToken = function () {\n        var _this = this;\n        this.assertStateAndConfigArePresent();\n        var onAccessTokenExpiry = this.config.onAccessTokenExpiry;\n        var _a = this.state, accessToken = _a.accessToken, authorizationCode = _a.authorizationCode, explicitlyExposedTokens = _a.explicitlyExposedTokens, hasAuthCodeBeenExchangedForAccessToken = _a.hasAuthCodeBeenExchangedForAccessToken, refreshToken = _a.refreshToken, scopes = _a.scopes;\n        if (!authorizationCode) {\n            return Promise.reject(new ErrorNoAuthCode());\n        }\n        if (this.authCodeForAccessTokenRequest) {\n            return this.authCodeForAccessTokenRequest;\n        }\n        if (!this.isAuthorized() || !hasAuthCodeBeenExchangedForAccessToken) {\n            this.authCodeForAccessTokenRequest = this.exchangeAuthCodeForAccessToken();\n            return this.authCodeForAccessTokenRequest;\n        }\n        // Depending on the server (and config), refreshToken may not be available.\n        if (refreshToken && this.isAccessTokenExpired()) {\n            return onAccessTokenExpiry(function () { return _this.exchangeRefreshTokenForAccessToken(); });\n        }\n        return Promise.resolve({\n            token: accessToken,\n            explicitlyExposedTokens: explicitlyExposedTokens,\n            scopes: scopes,\n            refreshToken: refreshToken\n        });\n    };\n    /**\n     * Refresh an access token from the remote service.\n     */\n    OAuth2AuthCodePKCE.prototype.exchangeRefreshTokenForAccessToken = function () {\n        var _this = this;\n        var _a;\n        this.assertStateAndConfigArePresent();\n        var _b = this.config, extraRefreshParams = _b.extraRefreshParams, clientId = _b.clientId, tokenUrl = _b.tokenUrl;\n        var refreshToken = this.state.refreshToken;\n        if (!refreshToken) {\n            console.warn('No refresh token is present.');\n        }\n        var url = tokenUrl;\n        var body = \"grant_type=refresh_token&\"\n            + (\"refresh_token=\" + ((_a = refreshToken) === null || _a === void 0 ? void 0 : _a.value) + \"&\")\n            + (\"client_id=\" + clientId);\n        if (extraRefreshParams) {\n            body = url + \"&\" + OAuth2AuthCodePKCE.objectToQueryString(extraRefreshParams);\n        }\n        return fetch(url, {\n            method: 'POST',\n            body: body,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .then(function (res) { return res.status >= 400 ? res.json().then(function (data) { return Promise.reject(data); }) : res.json(); })\n            .then(function (json) {\n            var access_token = json.access_token, expires_in = json.expires_in, refresh_token = json.refresh_token, scope = json.scope;\n            var explicitlyExposedTokens = _this.config.explicitlyExposedTokens;\n            var scopes = [];\n            var tokensToExpose = {};\n            var accessToken = {\n                value: access_token,\n                expiry: (new Date(Date.now() + (parseInt(expires_in) * 1000))).toString()\n            };\n            _this.state.accessToken = accessToken;\n            if (refresh_token) {\n                var refreshToken_1 = {\n                    value: refresh_token\n                };\n                _this.state.refreshToken = refreshToken_1;\n            }\n            if (explicitlyExposedTokens) {\n                tokensToExpose = Object.fromEntries(explicitlyExposedTokens\n                    .map(function (tokenName) { return [tokenName, json[tokenName]]; })\n                    .filter(function (_a) {\n                    var _ = _a[0], tokenValue = _a[1];\n                    return tokenValue !== undefined;\n                }));\n                _this.state.explicitlyExposedTokens = tokensToExpose;\n            }\n            if (scope) {\n                // Multiple scopes are passed and delimited by spaces,\n                // despite using the singular name \"scope\".\n                scopes = scope.split(' ');\n                _this.state.scopes = scopes;\n            }\n            localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(_this.state));\n            var accessContext = { token: accessToken, scopes: scopes };\n            if (explicitlyExposedTokens) {\n                accessContext.explicitlyExposedTokens = tokensToExpose;\n            }\n            return accessContext;\n        })\n            .catch(function (data) {\n            var onInvalidGrant = _this.config.onInvalidGrant;\n            var error = data.error || 'There was a network error.';\n            switch (error) {\n                case 'invalid_grant':\n                    onInvalidGrant(function () { return _this.fetchAuthorizationCode(); });\n                    break;\n                default:\n                    break;\n            }\n            return Promise.reject(toErrorClass(error));\n        });\n    };\n    /**\n     * Get the scopes that were granted by the authorization server.\n     */\n    OAuth2AuthCodePKCE.prototype.getGrantedScopes = function () {\n        return this.state.scopes;\n    };\n    /**\n     * Signals if OAuth HTTP decorating should be active or not.\n     */\n    OAuth2AuthCodePKCE.prototype.isHTTPDecoratorActive = function (isActive) {\n        this.state.isHTTPDecoratorActive = isActive;\n        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(this.state));\n    };\n    /**\n     * Tells if the client is authorized or not. This means the client has at\n     * least once successfully fetched an access token. The access token could be\n     * expired.\n     */\n    OAuth2AuthCodePKCE.prototype.isAuthorized = function () {\n        return !!this.state.accessToken;\n    };\n    /**\n     * Checks to see if the access token has expired.\n     */\n    OAuth2AuthCodePKCE.prototype.isAccessTokenExpired = function () {\n        var accessToken = this.state.accessToken;\n        return Boolean(accessToken && (new Date()) >= (new Date(accessToken.expiry)));\n    };\n    /**\n     * Resets the state of the client. Equivalent to \"logging out\" the user.\n     */\n    OAuth2AuthCodePKCE.prototype.reset = function () {\n        this.setState({});\n        this.authCodeForAccessTokenRequest = undefined;\n    };\n    /**\n     * If the state or config are missing, it means the client is in a bad state.\n     * This should never happen, but the check is there just in case.\n     */\n    OAuth2AuthCodePKCE.prototype.assertStateAndConfigArePresent = function () {\n        if (!this.state || !this.config) {\n            console.error('state:', this.state, 'config:', this.config);\n            throw new Error('state or config is not set.');\n        }\n    };\n    /**\n     * Fetch an access token from the remote service. You may pass a custom\n     * authorization grant code for any reason, but this is non-standard usage.\n     */\n    OAuth2AuthCodePKCE.prototype.exchangeAuthCodeForAccessToken = function (codeOverride) {\n        var _this = this;\n        this.assertStateAndConfigArePresent();\n        var _a = this.state, _b = _a.authorizationCode, authorizationCode = _b === void 0 ? codeOverride : _b, _c = _a.codeVerifier, codeVerifier = _c === void 0 ? '' : _c;\n        var _d = this.config, clientId = _d.clientId, onInvalidGrant = _d.onInvalidGrant, redirectUrl = _d.redirectUrl;\n        if (!codeVerifier) {\n            console.warn('No code verifier is being sent.');\n        }\n        else if (!authorizationCode) {\n            console.warn('No authorization grant code is being passed.');\n        }\n        var url = this.config.tokenUrl;\n        var body = \"grant_type=authorization_code&\"\n            + (\"code=\" + encodeURIComponent(authorizationCode || '') + \"&\")\n            + (\"redirect_uri=\" + encodeURIComponent(redirectUrl) + \"&\")\n            + (\"client_id=\" + encodeURIComponent(clientId) + \"&\")\n            + (\"code_verifier=\" + codeVerifier);\n        return fetch(url, {\n            method: 'POST',\n            body: body,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .then(function (res) {\n            var jsonPromise = res.json()\n                .catch(function (_) { return ({ error: 'invalid_json' }); });\n            if (!res.ok) {\n                return jsonPromise.then(function (_a) {\n                    var error = _a.error;\n                    switch (error) {\n                        case 'invalid_grant':\n                            onInvalidGrant(function () { return _this.fetchAuthorizationCode(); });\n                            break;\n                        default:\n                            break;\n                    }\n                    return Promise.reject(toErrorClass(error));\n                });\n            }\n            return jsonPromise.then(function (json) {\n                var access_token = json.access_token, expires_in = json.expires_in, refresh_token = json.refresh_token, scope = json.scope;\n                var explicitlyExposedTokens = _this.config.explicitlyExposedTokens;\n                var scopes = [];\n                var tokensToExpose = {};\n                _this.state.hasAuthCodeBeenExchangedForAccessToken = true;\n                _this.authCodeForAccessTokenRequest = undefined;\n                var accessToken = {\n                    value: access_token,\n                    expiry: (new Date(Date.now() + (parseInt(expires_in) * 1000))).toString()\n                };\n                _this.state.accessToken = accessToken;\n                if (refresh_token) {\n                    var refreshToken = {\n                        value: refresh_token\n                    };\n                    _this.state.refreshToken = refreshToken;\n                }\n                if (explicitlyExposedTokens) {\n                    tokensToExpose = Object.fromEntries(explicitlyExposedTokens\n                        .map(function (tokenName) { return [tokenName, json[tokenName]]; })\n                        .filter(function (_a) {\n                        var _ = _a[0], tokenValue = _a[1];\n                        return tokenValue !== undefined;\n                    }));\n                    _this.state.explicitlyExposedTokens = tokensToExpose;\n                }\n                if (scope) {\n                    // Multiple scopes are passed and delimited by spaces,\n                    // despite using the singular name \"scope\".\n                    scopes = scope.split(' ');\n                    _this.state.scopes = scopes;\n                }\n                localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(_this.state));\n                var accessContext = { token: accessToken, scopes: scopes };\n                if (explicitlyExposedTokens) {\n                    accessContext.explicitlyExposedTokens = tokensToExpose;\n                }\n                return accessContext;\n            });\n        });\n    };\n    OAuth2AuthCodePKCE.prototype.recoverState = function () {\n        this.state = JSON.parse(localStorage.getItem(exports.LOCALSTORAGE_STATE) || '{}');\n        return this;\n    };\n    OAuth2AuthCodePKCE.prototype.setState = function (state) {\n        this.state = state;\n        localStorage.setItem(exports.LOCALSTORAGE_STATE, JSON.stringify(state));\n        return this;\n    };\n    /**\n     * Implements *base64url-encode* (RFC 4648 § 5) without padding, which is NOT\n     * the same as regular base64 encoding.\n     */\n    OAuth2AuthCodePKCE.base64urlEncode = function (value) {\n        var base64 = btoa(value);\n        base64 = base64.replace(/\\+/g, '-');\n        base64 = base64.replace(/\\//g, '_');\n        base64 = base64.replace(/=/g, '');\n        return base64;\n    };\n    /**\n     * Extracts a query string parameter.\n     */\n    OAuth2AuthCodePKCE.extractParamFromUrl = function (url, param) {\n        var queryString = url.split('?');\n        if (queryString.length < 2) {\n            return '';\n        }\n        // Account for hash URLs that SPAs usually use.\n        queryString = queryString[1].split('#');\n        var parts = queryString[0]\n            .split('&')\n            .reduce(function (a, s) { return a.concat(s.split('=')); }, []);\n        if (parts.length < 2) {\n            return '';\n        }\n        var paramIdx = parts.indexOf(param);\n        return decodeURIComponent(paramIdx >= 0 ? parts[paramIdx + 1] : '');\n    };\n    /**\n     * Converts the keys and values of an object to a url query string\n     */\n    OAuth2AuthCodePKCE.objectToQueryString = function (dict) {\n        return Object.entries(dict).map(function (_a) {\n            var key = _a[0], val = _a[1];\n            return key + \"=\" + encodeURIComponent(val);\n        }).join('&');\n    };\n    /**\n     * Generates a code_verifier and code_challenge, as specified in rfc7636.\n     */\n    OAuth2AuthCodePKCE.generatePKCECodes = function () {\n        var output = new Uint32Array(exports.RECOMMENDED_CODE_VERIFIER_LENGTH);\n        crypto.getRandomValues(output);\n        var codeVerifier = OAuth2AuthCodePKCE.base64urlEncode(Array\n            .from(output)\n            .map(function (num) { return PKCE_CHARSET[num % PKCE_CHARSET.length]; })\n            .join(''));\n        return crypto\n            .subtle\n            .digest('SHA-256', (new TextEncoder()).encode(codeVerifier))\n            .then(function (buffer) {\n            var hash = new Uint8Array(buffer);\n            var binary = '';\n            var hashLength = hash.byteLength;\n            for (var i = 0; i < hashLength; i++) {\n                binary += String.fromCharCode(hash[i]);\n            }\n            return binary;\n        })\n            .then(OAuth2AuthCodePKCE.base64urlEncode)\n            .then(function (codeChallenge) { return ({ codeChallenge: codeChallenge, codeVerifier: codeVerifier }); });\n    };\n    /**\n     * Generates random state to be passed for anti-csrf.\n     */\n    OAuth2AuthCodePKCE.generateRandomState = function (lengthOfState) {\n        var output = new Uint32Array(lengthOfState);\n        crypto.getRandomValues(output);\n        return Array\n            .from(output)\n            .map(function (num) { return PKCE_CHARSET[num % PKCE_CHARSET.length]; })\n            .join('');\n    };\n    return OAuth2AuthCodePKCE;\n}());\nexports.OAuth2AuthCodePKCE = OAuth2AuthCodePKCE;\n","import { fromNullable, map } from \"./option\";\nimport { z } from \"zod/v4\";\n\nconst newLine = new RegExp(\"\\n\");\ntype HttpClient = typeof fetch;\n\nexport type Cancel = (c: () => void) => void;\n\nconst getJSONNDStream = <T>(\n  client: HttpClient,\n  zt: z.ZodType<T>,\n  url: string,\n  cancel?: Cancel,\n  init?: RequestInit\n): Promise<ReadableStreamDefaultReader<T>> =>\n  client(url, init)\n    .then((response) => response.body)\n    .then((responseBody) => {\n      if (responseBody == null) {\n        throw new Error(\"Response body is NULL\");\n      }\n      const reader = responseBody.getReader();\n\n      if (cancel) {\n        cancel(() => {\n          reader.cancel();\n        });\n      }\n      return new ReadableStream({\n        start(controller) {\n          const decoder = new TextDecoder();\n          // The following function handles each data chunk\n          const push = () => {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(({ done, value }) => {\n              // If there is no more data to read\n              if (done) {\n                console.log(\"done\", done);\n                controller.close();\n                return;\n              }\n\n              const responseString = decoder.decode(value);\n\n              responseString.split(newLine).map((chunk) => {\n                const trimmed = chunk.trim();\n                if (trimmed.length > 0) {\n                  try {\n                    const data = JSON.parse(chunk);\n                    const tdata = zt.parse(data);\n                    console.log(\"stream\", tdata);\n                    controller.enqueue(tdata);\n                  } catch (err) {\n                    console.error(\n                      `[${url}] Failed to make an object out of chunk:`,\n                      chunk\n                    );\n                  }\n                }\n              });\n\n              push();\n            });\n          };\n\n          push();\n        },\n      }).getReader();\n    });\n\n// const stream = await getJSONNDStream<{ a: number }>(\"xxx\");\n\n// type UserEvent =\n//   | GameStartEvent\n//   | GameFinishEvent\n//   | ChallengeEvent\n//   | ChallengeCanceledEvent\n//   | ChallengeDeclinedEvent;\n\nexport const streamWith =\n  (client: HttpClient) =>\n  <T>(zt: z.ZodType<T>, url: string, cancel?: Cancel, init?: RequestInit) => {\n    type HandlerMessage = (e: T) => boolean;\n    type HandlerClose = () => void;\n    const onMessageListeners: HandlerMessage[] = [];\n    const onCloseListeners: HandlerClose[] = [];\n    let queue: T[] = [];\n\n    const readStream = (stream: ReadableStreamDefaultReader<T>) => {\n      const readOne = () => {\n        stream\n          .read()\n          .then(({ done, value }) => {\n            dispatchEvent(fromNullable(value));\n            if (!done) {\n              setTimeout(readOne, 0);\n            } else {\n              dispatchClose();\n            }\n          })\n          .catch(dispatchClose);\n      };\n\n      readOne();\n    };\n\n    const onMessage = (callback: HandlerMessage): void => {\n      if (queue.length > 0) {\n        queue.forEach(callback);\n        queue = [];\n      }\n      onMessageListeners.push(callback);\n    };\n    const onClose = (callback: HandlerClose): void => {\n      onCloseListeners.push(callback);\n    };\n\n    const dispatchEvent = map((event: T) => {\n      if (onMessageListeners.length > 0) {\n        onMessageListeners.find((handler) => !handler(event));\n      } else {\n        queue.push(event);\n      }\n    });\n\n    const dispatchClose = () => {\n      onCloseListeners.forEach((handler) => handler());\n    };\n\n    getJSONNDStream(client, zt, url, cancel, init)\n      .then(readStream)\n      .catch(() => setTimeout(dispatchClose, 200));\n\n    return { onMessage, onClose }; // TODO: onError\n  };\n\nexport const streamer = streamWith(fetch);\nexport type Streamer = typeof streamer;\nexport type Stream = ReturnType<Streamer>;\n","const basePath = import.meta.env.BASE_URL;\n\nconst join = (...parts: string[]) => {\n  var separator = \"/\";\n  var replace = new RegExp(separator + \"{1,}\", \"g\");\n  return parts.join(separator).replace(replace, separator);\n};\n\nexport const basedPath = (...path: string[]) => join(basePath, ...path);\n","/**\n * Taken from https://github.com/lichess-org/api-demo/blob/master/src/auth.ts\n */\nimport { OAuth2AuthCodePKCE } from \"@bity/oauth2-auth-code-pkce\";\nimport { assign, get } from \"./store\";\nimport { Nullable, UserConfig, UserConfig_ } from \"./lib/ucui/types\";\nimport { streamWith } from \"./lib/stream\";\nimport { fromNullable, map, Option } from \"./lib/option\";\nimport { basedPath } from \"./env\";\n\nexport const scopes = [\n  \"board:play\",\n  \"challenge:read\",\n  \"follow:read\",\n  \"tournament:write\",\n];\nexport const clientId = `ucui-${location.host}`;\nexport const clientUrl = `${location.protocol}//${location.host}${basedPath()}`;\n\nconst auth = () => {\n  const lichessHost = get(\"lichess/host\");\n  let userConfig: Nullable<UserConfig_> = null;\n\n  const oauth = new OAuth2AuthCodePKCE({\n    authorizationUrl: `${lichessHost}/oauth`,\n    tokenUrl: `${lichessHost}/api/token`,\n    clientId,\n    scopes,\n    redirectUrl: clientUrl,\n    onAccessTokenExpiry: (refreshAccessToken) => refreshAccessToken(),\n    onInvalidGrant: console.warn,\n  });\n\n  const init = async () => {\n    try {\n      const accessContext = await oauth.getAccessToken();\n      if (accessContext) await authenticate();\n    } catch (err) {\n      console.error(err);\n    }\n    if (!userConfig) {\n      try {\n        const hasAuthCode = await oauth.isReturningFromAuthServer();\n        if (hasAuthCode) {\n          await authenticate();\n          history.replaceState({ auth: true }, \"authenticate\", clientUrl);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const login = async () => {\n    await oauth.fetchAuthorizationCode();\n  };\n\n  const logout = async () => {\n    if (userConfig)\n      await userConfig.httpClient(`${lichessHost}/api/token`, {\n        method: \"DELETE\",\n      });\n    localStorage.clear();\n    userConfig = null;\n  };\n\n  const authenticate = async () => {\n    const httpClient = oauth.decorateFetchHTTPClient(window.fetch);\n    const res = await httpClient(`${lichessHost}/api/account`);\n    const config = {\n      ...(await res.json()),\n      httpClient,\n      streamer: streamWith(httpClient),\n    };\n    if (config.error) throw config.error;\n    userConfig = config;\n  };\n\n  //   const stream = <T>(zt: z.ZodType<T>, path: string, init?: RequestInit) => {\n  //     if (userConfig === null) {\n  //       throw new Error(\"Cannot stream yet, user is not authenticated\");\n  //     }\n  //     return userConfig.streamer(zt, path, init);\n  //   };\n\n  const user = (): Option<UserConfig> =>\n    map((c: UserConfig_) => ({\n      id: c.id,\n      username: c.username,\n      streamer: c.streamer,\n      httpClient: c.httpClient,\n    }))(fromNullable(userConfig));\n\n  return { init, login, logout, user };\n};\n\nexport type Auth = ReturnType<typeof auth>;\n\nexport const authObject = auth();\n\nauthObject.init().then(() => {\n  const updateConfig = map((uc: UserConfig) => assign(\"lichess/user\", uc));\n  updateConfig(authObject.user());\n});\n","import { assign, dispatch, get, subscribe } from \"../store\";\nimport { UserConfig } from \"../lib/ucui/types\";\nimport { map, orElseL, pipe2 } from \".././lib/option\";\nimport { emptyElement, events } from \".././lib/dom\";\nimport { ANCHOR, DIV } from \".././lib/html\";\nimport { streamEvent } from \"../api\";\nimport { authObject } from \"../auth\";\nimport tr from \"../locale\";\n\nlet listening = false;\n\nconst listenEvents = () => {\n  if (!listening) {\n    listening = true;\n    const user = get(\"lichess/user\");\n    if (user) {\n      assign(\"online\", true);\n      streamEvent(\n        (event) => {\n          dispatch(\"lichess/stream-events\", (events) => events.concat(event));\n          return true;\n        },\n        () => {\n          listening = false;\n          assign(\"online\", false);\n          window.setTimeout(listenEvents, 20000);\n        }\n      );\n    } else {\n      listening = false;\n    }\n  }\n};\n\nconst buttonLogin = () =>\n  events(DIV(\"button button-login\", tr(\"home/connect\")), (add) =>\n    add(\"click\", async () => {\n      const notLogged = orElseL(() => {\n        authObject.login().then(() => {\n          withUser(authObject.user());\n        });\n      });\n      const withUser = map((user: UserConfig) => {\n        assign(\"lichess/user\", user);\n      });\n\n      pipe2(authObject.user(), withUser, notLogged);\n    })\n  );\n\nconst logout = () =>\n  events(DIV(\"button button-logout\", \"×\"), (add) =>\n    add(\"click\", () =>\n      authObject.logout().then(() => assign(\"lichess/user\", null))\n    )\n  );\n\nconst renderUser = (root: HTMLElement) => (user: UserConfig) => {\n  listenEvents();\n  emptyElement(root);\n  root.append(\n    DIV(\n      \"user\",\n      DIV(\n        \"username\",\n        ANCHOR(\"\", `${get(\"lichess/host\")}/@/${user.id}`, user.username)\n      ),\n      logout()\n    )\n  );\n};\n\nconst renderLogin = (root: HTMLElement) => () => {\n  emptyElement(root);\n  root.append(buttonLogin());\n};\n\nexport const mountLogin = (root: HTMLElement) => {\n  const withUser = map(renderUser(root));\n  const withoutUser = orElseL(renderLogin(root));\n\n  const update = subscribe(\"lichess/user\");\n  const remount = () => {\n    pipe2(authObject.user(), withUser, withoutUser);\n  };\n\n  update(remount);\n  remount();\n};\n","import { getUserById, streamFollowing, userStatus } from \"../api\";\nimport { attrs, events } from \"../lib/dom\";\nimport { DIV, INPUT, replaceNodeContent } from \"../lib/html\";\nimport { fromNullable, map } from \"../lib/option\";\nimport { Perfs, User } from \"../lib/ucui/lichess-types\";\nimport { LichessAI } from \"../lib/ucui/types\";\nimport tr from \"../locale\";\nimport { assign, dispatch, get, subscribe } from \"../store\";\nimport { button, name } from \"./buttons\";\n\nconst getFollowing = (root: HTMLElement) => {\n  streamFollowing(\n    (user) => {\n      dispatch(\"lichess/following\", (fs) =>\n        fs.filter((f) => f.id !== user.id).concat(user)\n      );\n      return false;\n    },\n    async () => {\n      const status = await userStatus(\n        get(\"lichess/following\").map((u) => u.id)\n      );\n      for (const s of status) {\n        const userElement = root.querySelector(`[data-id=\"${s.id}\"]`);\n        if (userElement) {\n          if (s.online) {\n            userElement.classList.add(\"online\");\n          } else {\n            userElement.classList.remove(\"online\");\n          }\n        }\n      }\n    }\n  );\n};\n\nconst perfs = map(({ classical, rapid }: Perfs) =>\n  DIV(\n    \"perfs\",\n    DIV(\n      \"classical\",\n      `${tr(\"players/classic\")}: ${classical ? classical.rating : \"?\"}`\n    ),\n    DIV(\"rapid\", `${tr(\"players/rapid\")}: ${rapid ? rapid.rating : \"?\"}`)\n  )\n);\n\nconst renderLookupUser = (user: User) =>\n  events(\n    DIV(\n      \"result\",\n      DIV(\"username\", user.username),\n      perfs(fromNullable(user.perfs))\n    ),\n    (add) =>\n      add(\"click\", () => {\n        assign(\"lichess/opponent\", user);\n        assign(\"screen\", \"challenge\");\n      })\n  );\n\nconst lookup = () => {\n  const input = attrs(INPUT(\"\", \"search\"), (set) =>\n    set(\"placeholder\", tr(\"players/username\"))\n  );\n  const results = DIV(\"results\");\n  const submit = events(DIV(\"button submit\", tr(\"players/search\")), (add) =>\n    add(\"click\", () => {\n      const username = input.value;\n      getUserById(username).then((user) =>\n        replaceNodeContent(results)(renderLookupUser(user))\n      );\n    })\n  );\n  return DIV(\n    \"lookup\",\n    DIV(\"section\", DIV(\"title\", tr(\"players/find\"))),\n    DIV(\"search-block\", input, submit),\n    results\n  );\n};\n\nconst renderUser = (user: User) =>\n  attrs(\n    DIV(\n      \"user\",\n      events(DIV(\"username\", user.username), (add) =>\n        add(\"click\", () => {\n          assign(\"lichess/opponent\", user);\n          assign(\"screen\", \"challenge\");\n        })\n      ),\n      DIV(\"activity\")\n    ),\n    (set) => set(\"data-id\", user.id)\n  );\n\nconst aiButton = (level: LichessAI[\"level\"]) =>\n  events(DIV(`level level-${level}`, `${level}`), (add) =>\n    add(\"click\", () => {\n      assign(\"lichess/opponent\", { _tag: \"lichess-ai\", level });\n      assign(\"screen\", \"challenge\");\n    })\n  );\n\nconst levels: LichessAI[\"level\"][] = [1, 2, 3, 4, 5, 6, 7, 8];\n\nconst renderLichessAI = () =>\n  DIV(\n    \"user lichess-ai\",\n    DIV(\"section\", tr(\"players/ai\")),\n    DIV(\"levels\", DIV(\"label\", tr(\"players/ai-level\")), ...levels.map(aiButton))\n  );\n\nexport const mountFollowing = (root: HTMLElement) => {\n  const users = DIV(\"users\", ...get(\"lichess/following\").map(renderUser));\n\n  const refresh = button(name(\"↻\", \"refresh\"), () => {\n    getFollowing(users);\n  });\n\n  const header = DIV(\"section\", DIV(\"title\", tr(\"players/following\")), refresh);\n  root.append(DIV(\"players-inner\", header, users, renderLichessAI(), lookup()));\n\n  subscribe(\"lichess/following\")(() => {\n    replaceNodeContent(users)(...get(\"lichess/following\").map(renderUser));\n  });\n  getFollowing(users);\n};\n","import { events } from \".././lib/dom\";\nimport { DIV, ANCHOR, replaceNodeContent, IMG } from \".././lib/html\";\nimport { ChallengeJson, TimeControl } from \".././lib/ucui/lichess-types\";\nimport { getArenaTournaments } from \"../api\";\nimport { declineChallenge, startNewGame } from \"../game\";\nimport { tr, trf } from \"../locale\";\nimport { assign, get, subscribe } from \"../store\";\nimport { button, name, navigateSeek } from \"./buttons\";\nimport { mountLogin } from \"./login\";\nimport { mountFollowing } from \"./players\";\n\nconst rtc = (tc: TimeControl) => {\n  switch (tc.type) {\n    case \"clock\":\n      return tc.show;\n    case \"correspondence\":\n      return `${tc.daysPerTurn} day`;\n    case \"unlimited\":\n      return \"unlimited\";\n  }\n};\n\nconst renderChallenge = (c: ChallengeJson) =>\n  DIV(\n    \"challenge\",\n    DIV(\n      \"spec\",\n      DIV(\"challenger\", c.challenger.name),\n      DIV(\"time\", rtc(c.timeControl))\n    ),\n    DIV(\n      \"actions\",\n      events(DIV(\"button button-accept\", tr(\"home/challenge-accept\")), (add) =>\n        add(\"click\", () => {\n          startNewGame(c);\n          assign(\"screen\", \"game\");\n        })\n      ),\n      events(\n        DIV(\"button button-decline\", tr(\"home/challenge-decline\")),\n        (add) =>\n          add(\"click\", () => {\n            declineChallenge(c);\n          })\n      )\n    )\n  );\n\nconst renderChallenges = () => {\n  const challenges = get(\"lichess/challenges\");\n  if (challenges.length > 0) {\n    return challenges.map(renderChallenge);\n  }\n  return [DIV(\"waiting\", tr(\"home/challenge-wait\"))];\n};\n\nconst footer = () =>\n  DIV(\n    \"footer\",\n    ANCHOR(\n      \"link\",\n      \"https://github.com/pierremarc/telechecs\",\n      tr(\"home/link-git\")\n    )\n  );\nconst intro = () =>\n  DIV(\n    \"intro\",\n    trf(\"home/tagline\"),\n    IMG(\n      \"board-image\",\n      \"https://raw.githubusercontent.com/pierremarc/telechecs/main/picture.jpg\"\n    ),\n    trf(\"home/description\")\n  );\n\nexport const challengeBlock = () => {\n  const challenges = DIV(\"challenges\", ...renderChallenges());\n  const replaceCh = replaceNodeContent(challenges);\n  const updateCh = subscribe(\"lichess/challenges\");\n  updateCh(() => {\n    replaceCh(...renderChallenges());\n  });\n\n  return DIV(\n    \"challenge-block\",\n    DIV(\"section\", DIV(\"title\", tr(\"home/challenges\"))),\n    challenges\n  );\n};\n\nconst createGame = () => DIV(\"section create-game\", navigateSeek());\n\nconst arena = () =>\n  DIV(\n    \"section areana\",\n    button(name(tr(\"arena/arena\"), \"arena\"), () => {\n      getArenaTournaments().then(({ created, started }) => {\n        assign(\"lichess/arena-created\", created);\n        assign(\"lichess/arena-started\", started);\n      });\n      assign(\"screen\", \"arena\");\n    })\n  );\n\nexport const mountHome = (root: HTMLElement) => {\n  const replaceRoot = replaceNodeContent(root);\n  const updateAll = () => {\n    const login = DIV(\"login\");\n    mountLogin(login);\n\n    const header = DIV(\"header\", DIV(\"title\", \"Téléchecs\"), login);\n\n    if (get(\"lichess/user\")) {\n      const players = DIV(\"players\");\n      mountFollowing(players);\n      replaceRoot(\n        DIV(\n          \"home\",\n          header,\n          players,\n          challengeBlock(),\n          createGame(),\n          arena(),\n          footer()\n        )\n      );\n    } else {\n      replaceRoot(DIV(\"home\", header, intro(), footer()));\n    }\n  };\n\n  updateAll();\n  subscribe(\"lichess/user\")(updateAll);\n};\n","import { none, some } from \"./lib/option\";\nimport { Nullable } from \"./lib/ucui/types\";\nimport { allKeys, dispatchOpt, get, subscribe } from \"./store\";\nimport { chatbox } from \"./view/chat\";\n\nconst hasLockAPI = \"wakeLock\" in navigator;\n\nexport const screenLocker = () => {\n  if (hasLockAPI) {\n    // we don't know much about the real screen state\n    // so lets listen to whatever moves, except what we're in charge of\n    const subAll = subscribe(...allKeys().filter((k) => k !== \"lockScreen\"));\n\n    let wakeLockSentinel: Nullable<WakeLockSentinel> = null;\n\n    const toggle = (s: boolean) =>\n      dispatchOpt(\"lockScreen\", (state) => (state !== s ? some(s) : none));\n\n    const testShouldLock = () => {\n      const gameScreen = get(\"screen\") === \"game\";\n      if (gameScreen) {\n        if (wakeLockSentinel === null) {\n          return true;\n        } else {\n          return !wakeLockSentinel.released;\n        }\n      }\n      return false;\n    };\n    const testShouldRelease = () => {\n      const notGameScreen = get(\"screen\") !== \"game\";\n      if (notGameScreen && wakeLockSentinel && !wakeLockSentinel.released) {\n        return true;\n      }\n      return false;\n    };\n\n    const lockScreen = () => {\n      navigator.wakeLock\n        .request(\"screen\")\n        .then((sentinel) => {\n          wakeLockSentinel = sentinel;\n          console.log(\"WakeLock acquired\");\n          toggle(true);\n          wakeLockSentinel.addEventListener(\"release\", () => {\n            toggle(false);\n            console.log(\"Navigator released lock sentinel\");\n          });\n        })\n        .catch((err) => {\n          console.error(\"failed to lock screen\", err);\n          chatbox(\"Téléchecs\", `Failed to lock screen: ${err}`);\n        });\n    };\n\n    const release = () => {\n      toggle(false);\n      if (wakeLockSentinel && !wakeLockSentinel.released) {\n        wakeLockSentinel\n          .release()\n          .then(() => {\n            wakeLockSentinel = null;\n          })\n          .catch((err) => console.error(\"failed to release wakelock\", err));\n      }\n    };\n\n    const update = () => {\n      if (testShouldLock()) {\n        lockScreen();\n      } else if (testShouldRelease()) {\n        release();\n      }\n    };\n\n    subAll(update);\n\n    update();\n  }\n};\n","/**\n * \n * From https://ia802908.us.archive.org/26/items/pgn-standard-1994-03-12/PGN_standard_1994-03-12.txt\n * \n * 16.1.3.1: Piece placement data\n * \n * The first field represents the placement of the pieces on the board.  The board\n * contents are specified starting with the eighth rank and ending with the first\n * rank.  For each rank, the squares are specified from file a to file h.  White\n * pieces are identified by uppercase SAN piece letters (\"PNBRQK\") and black\n * pieces are identified by lowercase SAN piece letters (\"pnbrqk\").  Empty squares\n * are represented by the digits one through eight; the digit used represents the\n * count of contiguous empty squares along a rank.  A solidus character \"/\" is\n * used to separate data of adjacent ranks.\n\n */\n\nimport {\n  Role,\n  Nullable,\n  Color,\n  Square,\n  squareFiles,\n  squareRanks,\n  makeSquare,\n} from \"./types\";\n\nconst rolesIds: [string, Role][] = [\n  [\"P\", \"Pawn\"],\n  [\"B\", \"Bishop\"],\n  [\"N\", \"Knight\"],\n  [\"R\", \"Rook\"],\n  [\"Q\", \"Queen\"],\n  [\"K\", \"King\"],\n];\n\nexport type SquareOccup = {\n  role: Role;\n  color: Color;\n};\n\n// type Occup = Nullable<[Role, Color]>;\n\nconst upperInitials = rolesIds.map((r) => r[0]);\n\nconst occupFor = (c: string): [number, Nullable<SquareOccup>] => {\n  const n = parseInt(c, 10);\n  if (!Number.isNaN(n)) {\n    return [n, null];\n  }\n  const roleTuple = rolesIds.find((r) => r[0] === c.toUpperCase())!;\n  const color = upperInitials.indexOf(c) >= 0 ? \"white\" : \"black\";\n\n  return [1, { role: roleTuple[1], color }];\n};\n\nexport type OccupProc<R> = (square: Square, occup: Nullable<SquareOccup>) => R;\n\nexport const fenToRanks = <R>(fen: string, proc: OccupProc<R>): R[][] => {\n  try {\n    const pieces = fen.split(\" \")[0];\n    const rankStrings = pieces.split(\"/\");\n    return squareRanks.map((r, ri) => {\n      const rankString = rankStrings[ri]!;\n      const occups: Nullable<SquareOccup>[] = squareFiles.map(() => null);\n      let current = 0;\n      rankString.split(\"\").forEach((c) => {\n        const [n, occup] = occupFor(c);\n        for (let i = 0; i < n; i++) {\n          occups[current + i] = occup;\n        }\n        current += n;\n      });\n      return squareFiles.map<R>((f, fi) => proc(makeSquare(f, r), occups[fi]));\n    });\n  } catch (error) {\n    console.error(\"Failed to procees FEN\", error);\n    return [[]];\n  }\n};\n\nexport type FenColor = \"w\" | \"b\";\nexport type FenCastling = \"K\" | \"k\" | \"Q\" | \"q\";\nexport const delCastlingRight = (\n  ca: FenCastling[],\n  side: \"q\" | \"k\",\n  color: Color\n) =>\n  ca.filter((c) => (color === \"black\" ? c !== side : c !== side.toUpperCase()));\n\nexport type Fen = {\n  placement: string;\n  color: FenColor;\n  castling: FenCastling[];\n  enpassant: Nullable<Square>;\n  halfmoves: number;\n  fullmoves: number;\n};\n\nconst enpassantSquares: { [k: string]: Square } = {\n  a3: \"A3\",\n  a6: \"A6\",\n  b3: \"B3\",\n  b6: \"B6\",\n  c3: \"C3\",\n  c6: \"C6\",\n  d3: \"D3\",\n  d6: \"D6\",\n  e3: \"E3\",\n  e6: \"E6\",\n  f3: \"F3\",\n  f6: \"F6\",\n  g3: \"G3\",\n  g6: \"G6\",\n  h3: \"H3\",\n  h6: \"H6\",\n};\n\nconst findEPSquare = (s: string) =>\n  s in enpassantSquares ? enpassantSquares[s] : null;\n\nconst tryEnPassant = (s: string): Nullable<Square> =>\n  s === \"-\" ? null : findEPSquare(s);\n\n// It does support only well-formed fen strings\nexport const fenFromString = (fen: string): Fen => {\n  const parts = fen.split(/\\s+/);\n  return {\n    placement: parts[0],\n    color: parts[1] === \"w\" ? \"w\" : \"b\",\n    castling:\n      parts[2] === \"-\"\n        ? []\n        : parts[2]\n            .split(\"\")\n            .filter((c) => c === \"K\" || c === \"k\" || c === \"Q\" || c === \"q\"),\n    enpassant: tryEnPassant(parts[3]),\n    halfmoves: parseInt(parts[4]),\n    fullmoves: parseInt(parts[5]),\n  };\n};\n\nexport const fenToString = ({\n  placement,\n  color,\n  castling,\n  enpassant,\n  halfmoves,\n  fullmoves,\n}: Fen): string => {\n  const c = castling.length === 0 ? \"-\" : castling.join(\"\");\n  const e = enpassant === null ? \"-\" : enpassant.toLowerCase();\n  return `${placement} ${color} ${c} ${e} ${halfmoves} ${fullmoves}`;\n};\n","import { DIV } from \"./lib/html\";\nimport { fenToRanks, OccupProc } from \"./lib/ucui/fen\";\nimport { Color, Role } from \"./lib/ucui/types\";\n\nconst roleLetter = (role: Role, color: Color) => {\n  switch (role) {\n    case \"Pawn\":\n      return color === \"black\" ? \"♟\" : \"♙\";\n    case \"Rook\":\n      return color === \"black\" ? \"♜\" : \"♖\";\n    case \"Knight\":\n      return color === \"black\" ? \"♞\" : \"♘\";\n    case \"Bishop\":\n      return color === \"black\" ? \"♝\" : \"♗\";\n    case \"Queen\":\n      return color === \"black\" ? \"♛\" : \"♕\";\n    case \"King\":\n      return color === \"black\" ? \"♚\" : \"♔\";\n  }\n};\n\nconst makeOccup: OccupProc<HTMLElement> = (square, occup) => {\n  if (occup === null) {\n    return DIV(`square empty ${square}`, \"·\");\n  }\n  return DIV(`square ${square}`, roleLetter(occup.role, occup.color));\n};\n\nexport const renderBoard = (fen: string) =>\n  DIV(\n    \"board\",\n    ...fenToRanks(fen, makeOccup).map((squares) => DIV(\"rank\", ...squares))\n  );\n","import { getUserById } from \"../api\";\nimport { attrs } from \"../lib/dom\";\nimport { ANCHOR, DIV, replaceNodeContent } from \"../lib/html\";\nimport { fromNullable, map } from \"../lib/option\";\nimport { GameEventInfo, Status } from \"../lib/ucui/lichess-types\";\nimport { otherColor } from \"../lib/ucui/types\";\nimport tr from \"../locale\";\nimport { assign, get, subscribe } from \"../store\";\nimport { button, navigate, navigateHome } from \"./buttons\";\n\nconst renderStatusString = (status: Status) => {\n  switch (status.name) {\n    case \"aborted\":\n      return tr(\"end/aborted\");\n    case \"mate\":\n      return tr(\"end/mate\");\n    case \"resign\":\n      return tr(\"end/resign\");\n    case \"stalemate\":\n      return tr(\"end/stalemate\");\n    case \"timeout\":\n      return tr(\"end/timeout\");\n    case \"draw\":\n      return tr(\"end/draw\");\n    case \"outoftime\":\n      return tr(\"end/outoftime\");\n    case \"cheat\":\n      return tr(\"end/cheat\");\n    case \"noStart\":\n      return tr(\"end/noStart\");\n    case \"created\":\n    case \"started\":\n    case \"unknownFinish\":\n    case \"variantEnd\":\n      return \"Don't know...\";\n  }\n};\n\nconst renderStatus = (info: GameEventInfo) =>\n  DIV(\"status\", renderStatusString(info.status));\n\nexport const resultString = ({ winner }: GameEventInfo) =>\n  winner === undefined ? \"½ - ½\" : winner === \"white\" ? \" 1 - 0\" : \"0 - 1\";\n\nexport const renderWinner = (info: GameEventInfo) =>\n  info.color === info.winner\n    ? DIV(\"result won\", resultString(info))\n    : otherColor(info.color) === info.winner\n    ? DIV(\"result lost\", resultString(info))\n    : DIV(\"result draw\", resultString(info));\n\nconst renderRematch = map((userId: string) =>\n  DIV(\n    \"section\",\n    button(\"Rematch\", () => {\n      getUserById(userId).then((user) => {\n        assign(\"lichess/opponent\", user);\n        assign(\"screen\", \"challenge\");\n      });\n    })\n  )\n);\n\nconst renderLink = (info: GameEventInfo) =>\n  DIV(\n    \"section\",\n    navigate(\"movelist\", \"Review the game\"),\n    attrs(\n      ANCHOR(\n        \"link\",\n        `${get(\"lichess/host\")}/${info.gameId}`,\n        \"Review the game on Lichess\"\n      ),\n      (set) => set(\"target\", \"_blank\")\n    )\n  );\n\nconst mountInfo = (root: HTMLElement) =>\n  map((info: GameEventInfo) => {\n    replaceNodeContent(root)(\n      renderWinner(info),\n      renderStatus(info),\n      renderRematch(fromNullable(info.opponent.id)),\n      renderLink(info)\n    );\n  });\n\nexport const mountEnd = (root: HTMLElement) => {\n  const info = DIV(\"info\");\n  const renderInfo = mountInfo(info);\n  const header = DIV(\"header\", DIV(\"title\", \"End of game\"), navigateHome());\n\n  renderInfo(fromNullable(get(\"lichess/game-info\")));\n  subscribe(\"lichess/game-info\")(() =>\n    renderInfo(fromNullable(get(\"lichess/game-info\")))\n  );\n  root.append(DIV(\"end\", header, info));\n};\n","import { boardDraw, boardResign } from \"./api\";\nimport { renderBoard } from \"./board\";\nimport { events } from \"./lib/dom\";\nimport { DIV, replaceNodeContent, H2, SPAN, DETAILS } from \"./lib/html\";\nimport { fromNullable, map, orElse, pipe2 } from \"./lib/option\";\nimport { GameEventInfo, GameStateEvent } from \"./lib/ucui/lichess-types\";\nimport { Move } from \"./lib/ucui/types\";\nimport { group } from \"./lib/util\";\nimport { defaultFormatSymbol, formatMove } from \"./san\";\nimport {\n  assign,\n  get,\n  getMoveList,\n  getOponentColor,\n  getTurn,\n  subscribe,\n} from \"./store\";\nimport { fenFromUciMoves, legalMoves } from \"./util\";\nimport { navigateHome } from \"./view/buttons\";\nimport { renderWinner } from \"./view/end\";\n\nconst pendingMove = { _tag: \"pending\" as const };\ntype PendingMove = typeof pendingMove;\n\ntype HistOrPending = Move | PendingMove;\n\nconst moveList = (): HistOrPending[] =>\n  getTurn() === getOponentColor()\n    ? (getMoveList() as HistOrPending[]).concat(pendingMove)\n    : getMoveList();\n\nconst renderNonPendingMove = (\n  state: GameStateEvent,\n  move: Move,\n  moveIndex: number\n) =>\n  SPAN(\n    \"move\",\n    formatMove(move, legalMoves(state.moves, moveIndex), {\n      ...defaultFormatSymbol(),\n      withAnnotation: true,\n    }),\n    \"  \"\n  );\n\nconst renderPending = () =>\n  withFinishedGame(() => DIV(\"hidden\"), DIV(\"pending\"));\n\nconst renderMove = (\n  state: GameStateEvent,\n  m: HistOrPending,\n  moveIndex: number\n) => {\n  switch (m._tag) {\n    case \"pending\":\n      return renderPending();\n    default:\n      return renderNonPendingMove(state, m, moveIndex);\n  }\n};\n\nconst renderOrd = (groupIdx: number) => SPAN(\"normal\", `${groupIdx + 1}. `);\n\nconst makeMoves = map((state: GameStateEvent) =>\n  group(2, moveList()).map(([m0, m1], i) => {\n    const baseIndex = i * 2;\n    if (m0 && m1) {\n      return DIV(\n        \"ply\",\n        renderOrd(i),\n        SPAN(\n          \"moves\",\n          renderMove(state, m0, baseIndex),\n          renderMove(state, m1, baseIndex + 1)\n        )\n      );\n    } else if (m0) {\n      return DIV(\n        \"ply\",\n        renderOrd(i),\n        SPAN(\"moves\", renderMove(state, m0, baseIndex))\n      );\n    }\n    return DIV(\"empty\");\n  })\n);\n\nconst makePosition = map((state: GameStateEvent) => {\n  const board = renderBoard(fenFromUciMoves(state.moves));\n  return DETAILS(\"pos-details\", \"Position\", board);\n});\n\nconst renderResign = (info: GameEventInfo) =>\n  events(DIV(\"button\", \"Resign\"), (add) =>\n    add(\"click\", () => boardResign(info.gameId))\n  );\n\nconst renderDraw = (info: GameEventInfo) =>\n  events(DIV(\"button\", \"Draw\"), (add) =>\n    add(\"click\", () => boardDraw(info.gameId, \"yes\"))\n  );\n\nconst withStartedGame = <T>(fn: (i: GameEventInfo) => T, dflt: T) => {\n  const info = get(\"lichess/game-info\");\n  if (info && info.status.name === \"started\") {\n    return fn(info);\n  }\n  return dflt;\n};\n\nconst withFinishedGame = <T>(fn: (i: GameEventInfo) => T, dflt: T) => {\n  const info = get(\"lichess/game-info\");\n  if (\n    info &&\n    info.status.name !== \"created\" &&\n    info.status.name !== \"started\"\n  ) {\n    return fn(info);\n  }\n  return dflt;\n};\n\nconst renderActions = () =>\n  withStartedGame((info) => [renderDraw(info), renderResign(info)], []);\n\nconst renderOutcome = () => withFinishedGame(renderWinner, DIV(\"no-outcome\"));\n\nconst renderHeader = () => [\n  H2(\"title\", \"Moves\"),\n  withStartedGame(\n    () =>\n      events(DIV(\"to-game  to-button\", \"↩\"), (add) =>\n        add(\"click\", () => assign(\"screen\", \"game\"))\n      ),\n    navigateHome()\n  ),\n];\n\nexport const mountMoveList = (root: HTMLElement) => {\n  const moves = DIV(\n    \"moves\",\n    ...pipe2(\n      fromNullable(get(\"lichess/game-state\")),\n      makeMoves,\n      orElse([DIV(\"no-moves\")])\n    )\n  );\n\n  const board = DIV(\n    \"position\",\n    pipe2(\n      fromNullable(get(\"lichess/game-state\")),\n      makePosition,\n      orElse(DIV(\"no-board\"))\n    )\n  );\n\n  const header = DIV(\"header\", ...renderHeader());\n  const actions = DIV(\"actions\", ...renderActions());\n  const outcome = DIV(\"outcome\", renderOutcome());\n  root.append(\n    DIV(\"movelist\", header, DIV(\"listing\", moves), outcome, board, actions)\n  );\n\n  const replaceMoves = replaceNodeContent(moves);\n  const replaceBoard = replaceNodeContent(board);\n  const replaceOutcome = replaceNodeContent(outcome);\n  const replaceActions = replaceNodeContent(actions);\n  const replaceHeader = replaceNodeContent(header);\n  const subList = subscribe(\"lichess/game-state\");\n  const subBoard = subscribe(\"lichess/game-state\");\n  const onInfoChanged = subscribe(\"started\", \"lichess/game-info\");\n\n  subList(() => {\n    replaceMoves(\n      ...pipe2(\n        fromNullable(get(\"lichess/game-state\")),\n        makeMoves,\n        orElse([DIV(\"no-moves\")])\n      )\n    );\n  });\n\n  subBoard(() => {\n    replaceBoard(\n      pipe2(\n        fromNullable(get(\"lichess/game-state\")),\n        makePosition,\n        orElse(DIV(\"no-board\"))\n      )\n    );\n  });\n\n  onInfoChanged(() => {\n    replaceHeader(...renderHeader());\n    replaceActions(...renderActions());\n    replaceOutcome(renderOutcome());\n  });\n};\n","import { emptyElement } from \".././lib/dom\";\nimport { DIV, H1, PRE } from \".././lib/html\";\nimport { get, subscribe } from \"../store\";\n\nexport const mountEvents = (root: HTMLElement) => {\n  const events = DIV(\"events\");\n  const title = H1(\"\", \"Events\");\n\n  const updateEvents = () => {\n    emptyElement(events);\n    get(\"lichess/stream-events\").forEach((event) =>\n      events.append(\n        DIV(\"event\"),\n        PRE(\"json\", JSON.stringify(event, undefined, 4))\n      )\n    );\n  };\n  updateEvents();\n  root.append(title, events);\n\n  subscribe(\"lichess/stream-events\")(updateEvents);\n};\n","import { challengeLichessAI, challengeUser } from \"../api\";\nimport { events } from \"../lib/dom\";\nimport { DIV, replaceNodeContent } from \"../lib/html\";\nimport {\n  RequesChallengeCreate,\n  RequesChallengeCreateAI,\n  User,\n} from \"../lib/ucui/lichess-types\";\nimport { ChallengeColor, LichessAI } from \"../lib/ucui/types\";\nimport { defaultTimeControls, padStart } from \"../lib/util\";\nimport tr from \"../locale\";\nimport { assign, get, subscribe } from \"../store\";\nimport { BLACK_KING, WHITE_KING } from \"../util\";\nimport { button, name, navigateHome } from \"./buttons\";\n\ntype Challenged = User | LichessAI;\n\nconst isAI = (u: Challenged): u is LichessAI =>\n  \"_tag\" in u && u._tag === \"lichess-ai\";\n\nconst challenge = (\n  tc: number,\n  increment: number,\n  color: RequesChallengeCreate[\"color\"]\n): RequesChallengeCreate => ({\n  color,\n  \"clock.increment\": increment,\n  \"clock.limit\": tc * 60,\n  keepAliveStream: false,\n  rated: get(\"ratedChallenge\"),\n  variant: \"standard\",\n});\n\nconst challengeAI = (\n  tc: number,\n  increment: number,\n  color: RequesChallengeCreate[\"color\"],\n  level: LichessAI[\"level\"]\n): RequesChallengeCreateAI => ({\n  color,\n  \"clock.increment\": increment,\n  \"clock.limit\": tc * 60,\n  variant: \"standard\",\n  level,\n});\n\nconst colorString = (color: RequesChallengeCreate[\"color\"]) => {\n  switch (color) {\n    case \"white\":\n      return WHITE_KING;\n    case \"black\":\n      return BLACK_KING;\n    case \"random\":\n      return \"⚄\";\n    // return WHITE_KING + BLACK_KING;\n  }\n};\n\nconst challengeButton = (\n  user: Challenged,\n  tc: number,\n  increment: number,\n  node: HTMLElement\n) =>\n  events(node, (add) =>\n    add(\"click\", () => {\n      if (isAI(user)) {\n        challengeLichessAI(\n          challengeAI(tc, increment, get(\"challengeColor\"), user.level)\n        ).then((challenge) => assign(\"lichess/my-challenge\", challenge));\n      } else {\n        challengeUser(\n          user.username,\n          challenge(tc, increment, get(\"challengeColor\"))\n        ).then((challenge) => assign(\"lichess/my-challenge\", challenge));\n      }\n    })\n  );\n\nconst username = (user: Challenged) =>\n  isAI(user) ? `LichessAI ${user.level}` : user.username;\n\nconst renderChallenge = (\n  user: Challenged,\n  [time, increment]: [number, number]\n) =>\n  DIV(\n    \"challenge-create\",\n    challengeButton(\n      user,\n      time,\n      increment,\n      DIV(\n        \"time-control\",\n        DIV(\"time\", time),\n        DIV(\"label\", \"minutes\"),\n        DIV(\"increment\", \"+ .\", padStart(increment.toString(), 2, \"0\"))\n      )\n    )\n  );\n\nconst renderRated = () =>\n  get(\"ratedChallenge\")\n    ? DIV(\n        \"toggle\",\n        DIV(\"selected\", tr(\"challenge/rated\")),\n        button(name(tr(\"challenge/casual\"), \"casual\"), () =>\n          assign(\"ratedChallenge\", false)\n        )\n      )\n    : DIV(\n        \"toggle\",\n        button(name(tr(\"challenge/rated\"), \"rated\"), () =>\n          assign(\"ratedChallenge\", true)\n        ),\n        DIV(\"selected\", tr(\"challenge/casual\"))\n      );\n\nconst renderAColor = (color: ChallengeColor, selected: boolean) =>\n  selected\n    ? DIV(\"selected\", colorString(color))\n    : button(name(colorString(color), color), () =>\n        assign(\"challengeColor\", color)\n      );\n\nconst renderColor = () =>\n  DIV(\n    \"select\",\n    renderAColor(\"white\", get(\"challengeColor\") === \"white\"),\n    renderAColor(\"random\", get(\"challengeColor\") === \"random\"),\n    renderAColor(\"black\", get(\"challengeColor\") === \"black\")\n  );\n\nexport const mountChallenge = (root: HTMLElement) => {\n  const opponent = get(\"lichess/opponent\");\n  if (opponent) {\n    const choices = DIV(\n      \"choices\",\n      ...defaultTimeControls.map((tc) => renderChallenge(opponent, tc))\n    );\n\n    const rated = DIV(\"rated-selector\", renderRated());\n\n    const color = DIV(\"color-selector\", renderColor());\n\n    root.append(\n      DIV(\n        \"challenge-page\",\n        DIV(\n          \"header\",\n          DIV(\"title\", `Challenge ${username(opponent)}`),\n          navigateHome()\n        ),\n        isAI(opponent) ? DIV(\"config\", color) : DIV(\"config\", color, rated),\n        choices\n      )\n    );\n\n    subscribe(\"lichess/my-challenge\")(() => {\n      replaceNodeContent(choices)(\n        DIV(\"waiting\", `Waiting for ${username(opponent)} answer.`)\n      );\n    });\n\n    subscribe(\"ratedChallenge\")(() => {\n      replaceNodeContent(rated)(renderRated());\n    });\n\n    subscribe(\"challengeColor\")(() => {\n      replaceNodeContent(color)(renderColor());\n    });\n  }\n};\n","import { __ping } from \"./api\";\nimport { DIV } from \"./lib/html\";\nimport { assign, get, subscribe } from \"./store\";\n\n// There's still some experiment to be made here\nconst timeout = 3000;\nconst maxTime = 3000;\nlet interval: null | number = null;\n\nconst handler = (onChange: (quality: number) => void) => {\n  const source = Date.now();\n  __ping()\n    .then(() => {\n      const total = Date.now() - source;\n      const score = Math.max(\n        0,\n        Math.min(100, 100 - Math.round((total * 100) / maxTime))\n      );\n      onChange(score);\n    })\n    .catch(() => onChange(0));\n};\n\nconst startMonitor = (onChange: (quality: number) => void) => {\n  if (interval === null) {\n    interval = window.setInterval(() => {\n      if (!get(\"online\")) {\n        handler(onChange);\n      }\n    }, timeout);\n    window.addEventListener(\"offline\", () => onChange(0));\n  }\n};\n\nconst updateStatus = (q: number) =>\n  q > 0 && !get(\"online\")\n    ? assign(\"online\", true)\n    : q === 0 && get(\"online\")\n    ? assign(\"online\", false)\n    : void 0;\n\nexport const mountOnline = (root: HTMLElement) => {\n  startMonitor(updateStatus);\n\n  const elem = DIV(\n    \"online-status ok\",\n    DIV(\"icon\"),\n    DIV(\"label\", \"Currently offline...\")\n  );\n  subscribe(\"online\")(() => {\n    const status = get(\"online\");\n    if (status && elem.classList.contains(\"nok\")) {\n      elem.classList.remove(\"nok\");\n      elem.classList.add(\"ok\");\n    } else if (!status && elem.classList.contains(\"ok\")) {\n      elem.classList.remove(\"ok\");\n      elem.classList.add(\"nok\");\n    }\n  });\n\n  root.append(elem);\n};\n","import { postSeek } from \"../api\";\nimport { events } from \"../lib/dom\";\nimport { DIV, replaceNodeContent, SPAN } from \"../lib/html\";\nimport { RequestSeekClock } from \"../lib/ucui/lichess-types\";\nimport { seekRequestSending, seekRequestSent } from \"../lib/ucui/types\";\nimport { defaultTimeControls, padStart } from \"../lib/util\";\nimport tr from \"../locale\";\nimport { assign, get, getMutable, subscribe } from \"../store\";\nimport { navigateHome, button, name } from \"./buttons\";\n\nconst seek = (time: number, increment: number): RequestSeekClock => ({\n  color: \"random\",\n  increment,\n  time,\n  rated: get(\"ratedChallenge\"),\n  variant: \"standard\",\n});\n\nconst onSeekClose = () => assign(\"lichess/seek\", null);\n\nconst wrapTime = (tc: number, increment: number, node: HTMLElement) =>\n  events(node, (add) =>\n    add(\"click\", () => {\n      const request = seek(tc, increment);\n      assign(\"lichess/seek\", seekRequestSending(request));\n\n      postSeek(request, onSeekClose).then((cancel) =>\n        assign(\"lichess/seek\", seekRequestSent(request, cancel))\n      );\n    })\n  );\n\nconst renderSeek = ([time, increment]: [number, number]) =>\n  DIV(\n    \"challenge-create\",\n    wrapTime(\n      time,\n      increment,\n      DIV(\n        \"time-control\",\n        DIV(\"time\", time),\n        DIV(\"label\", \"minutes\"),\n        DIV(\"increment\", \"+ .\", padStart(increment.toString(), 2, \"0\"))\n      )\n    )\n  );\n\nconst renderRated = () =>\n  get(\"ratedChallenge\")\n    ? DIV(\n        \"toggle\",\n        DIV(\"selected\", tr(\"challenge/rated\")),\n        button(name(tr(\"challenge/casual\"), \"casual\"), () =>\n          assign(\"ratedChallenge\", false)\n        )\n      )\n    : DIV(\n        \"toggle\",\n        button(name(tr(\"challenge/rated\"), \"rated\"), () =>\n          assign(\"ratedChallenge\", true)\n        ),\n        DIV(\"selected\", tr(\"challenge/casual\"))\n      );\n\nconst update = (replace: ReturnType<typeof replaceNodeContent>) => {\n  const seek = getMutable(\"lichess/seek\");\n  if (seek === null) {\n    replace(...defaultTimeControls.map(renderSeek));\n  } else if (seek._tag === \"sending\") {\n    replace(DIV(\"waiting\", `Offer `, SPAN(\"italic\", \"en route\")));\n  } else if (seek._tag === \"sent\") {\n    replace(\n      DIV(\"waiting\", `Waiting for someone, anyone.`),\n      button(name(\"Stop waiting\", \"stop-waiting\"), () => {\n        seek.cancel();\n      })\n    );\n  }\n};\n\nexport const mountSeek = (root: HTMLElement) => {\n  const choices = DIV(\"choices\");\n\n  const rated = DIV(\"rated-selector\", renderRated());\n  root.append(\n    DIV(\n      \"challenge-page\",\n      DIV(\"header\", DIV(\"title\", `Create game`), navigateHome()),\n      DIV(\"config\", rated),\n      choices\n    )\n  );\n\n  update(replaceNodeContent(choices));\n\n  subscribe(\n    \"lichess/seek\",\n    \"lichess/game-info\"\n  )(() => {\n    update(replaceNodeContent(choices));\n  });\n\n  subscribe(\"ratedChallenge\")(() => {\n    replaceNodeContent(rated)(renderRated());\n  });\n};\n","import { postArenaTournamentJoin, postArenaTournamentLeave } from \"../api\";\nimport { emptyElement } from \"../lib/dom\";\nimport { AcNode, DETAILS, DIV, H1, replaceNodeContent } from \"../lib/html\";\nimport { ArenaTournament } from \"../lib/ucui/lichess-types\";\nimport { TournamentJoin } from \"../lib/ucui/types\";\nimport { padStart } from \"../lib/util\";\nimport tr from \"../locale\";\nimport { assign, get, subscribe } from \"../store\";\nimport { button, navigateHome, name, navigate } from \"./buttons\";\nimport { chatbox } from \"./chat\";\n\nexport const clearArenaJoin = () => {\n  const state = get(\"lichess/arena-join\");\n  if (state) {\n    clearInterval(state.interval);\n    postArenaTournamentLeave(state.id).then(() =>\n      assign(\"lichess/arena-join\", null)\n    );\n  }\n};\n\nconst joinArena = (id: string) => {\n  const refresh = () => {\n    const state = get(\"lichess/arena-join\");\n    const gameState = get(\"lichess/game-state\");\n    // avoid asking for pairing when already playing\n    if (state && (gameState === null || gameState.status !== \"started\")) {\n      const ellapsed = Date.now() - state.since;\n      if (ellapsed > 60 * 1000) {\n        clearInterval(state.interval);\n        assign(\"lichess/arena-join\", null);\n        run();\n      }\n    }\n  };\n\n  const run = () => {\n    postArenaTournamentJoin(id)\n      .then(() => {\n        assign(\"lichess/arena-join\", {\n          id,\n          since: Date.now(),\n          interval: window.setInterval(refresh, 5000),\n        });\n      })\n      .catch((err) => chatbox(\"The Server\", err.error));\n  };\n\n  run();\n};\n\nexport const formatTime = (d: Date) => d.toLocaleTimeString().slice(0, 5);\n\nconst renderTime = (clock: ArenaTournament[\"clock\"]) =>\n  DIV(\"time-control\", `${clock.limit / 60}+${clock.increment}`);\n\nconst detail = (key: string, value: AcNode | undefined) =>\n  value === undefined\n    ? DIV(\"info undefined\", DIV(\"key\", key))\n    : DIV(\"info\", DIV(\"key\", key), DIV(\"value\", value));\n\nconst renderTournamentDetails = (t: ArenaTournament) => [\n  //   detail(\"id \", t.id),\n  detail(\"Created by\", t.createdBy),\n  detail(\"Start time\", formatTime(new Date(t.startsAt))),\n  detail(\"End time\", formatTime(new Date(t.finishesAt))),\n  detail(\"Rated\", t.rated ? \"Yes\" : \"No\"),\n  detail(\"Players\", t.nbPlayers),\n  detail(\"Variant\", t.variant.name),\n  detail(\"Type\", t.perf.name),\n  detail(\"Max rating\", t.maxRating?.rating),\n  detail(\"Min rating\", t.minRating?.rating),\n  detail(\"Bots\", t.botsAllowed ? \"Yes\" : \"No\"),\n  detail(\"Min account age\", t.minAccountAgeInDays),\n  detail(\"Only titled\", t.onlyTitled ? \"Yes\" : \"No\"),\n  detail(\"Team member\", t.teamMember),\n];\n\nconst goodTime = (clock: ArenaTournament[\"clock\"]) =>\n  clock.increment >= 3 ? clock.limit >= 5 * 60 : clock.limit >= 10 * 60;\n\nconst filterTournament = ({ clock, variant, position }: ArenaTournament) =>\n  position === undefined && variant.key === \"standard\" && goodTime(clock);\n\nconst renderTitle = ({ fullName, clock, nbPlayers }: ArenaTournament) =>\n  DIV(\n    \"arena-title\",\n    DIV(\"name\", fullName),\n    // DIV(\"variant\", variant.name),\n    DIV(\"players\", `(${nbPlayers})`),\n    renderTime(clock)\n  );\n\n//   const renderPosition = map((position: ArenaPosition) =>\n//     DIV(\"position\", renderBoard(position.fen))\n//   );\n\nconst renderTournament = (t: ArenaTournament) =>\n  DETAILS(\n    \"tournament\",\n    renderTitle(t),\n    button(name(tr(\"arena/join\"), \"join\"), () => joinArena(t.id)),\n    ...renderTournamentDetails(t)\n  );\n\nconst formatRemaining = (rem: number) => {\n  const hours = Math.floor(rem / (60 * 60));\n  const remWithoutHours = rem - hours * 60 * 60;\n  const minutes = Math.floor(remWithoutHours / 60);\n  const seconds = Math.floor(remWithoutHours - minutes * 60);\n  return DIV(\n    \"remaining\",\n    [hours, minutes, seconds]\n      .map((t) => padStart(t.toString(), 2, \"0\"))\n      .join(\":\")\n  );\n};\n\nconst renderTournamentCreated = (t: ArenaTournament) => {\n  const start = t.startsAt;\n  const countdown = DIV(\"join\");\n  const joinButton = DIV(\"join\", countdown);\n  const updateCountdown = () => {\n    if (get(\"screen\") !== \"arena\" && interval !== null) {\n      clearInterval(interval);\n      return;\n    }\n    const remaining = start - Date.now();\n    const repl = replaceNodeContent(joinButton);\n    if (remaining < 0) {\n      if (interval !== null) clearInterval(interval);\n      repl(button(name(tr(\"arena/join\"), \"join\"), () => joinArena(t.id)));\n      if (root) {\n        root.classList.remove(\"created\");\n      }\n    } else {\n      repl(formatRemaining(remaining / 1000));\n    }\n  };\n  const interval = setInterval(updateCountdown, 1000);\n  const root = DETAILS(\n    \"tournament created\",\n    renderTitle(t),\n    joinButton,\n    // renderPosition(fromNullable(t.position)),\n    ...renderTournamentDetails(t)\n  );\n\n  return root;\n};\n\nconst renderJoin = (j: TournamentJoin) => {\n  const tournament = get(\"lichess/arena-started\")\n    .concat(get(\"lichess/arena-created\"))\n    .find((a) => a.id === j.id);\n  return tournament === undefined\n    ? DIV(\n        \"join\",\n        H1(\"\", tr(\"arena/waiting\")),\n        button(name(tr(\"arena/leave\"), \"leave\"), clearArenaJoin)\n      )\n    : DIV(\n        \"join\",\n        renderTitle(tournament),\n        H1(\"\", tr(\"arena/waiting\")),\n        button(name(tr(\"arena/leave\"), \"leave\"), clearArenaJoin)\n      );\n};\n\nconst update = (root: HTMLElement) => {\n  const joinState = get(\"lichess/arena-join\");\n  if (joinState) {\n    replaceNodeContent(root)(renderJoin(joinState));\n  } else {\n    replaceNodeContent(root)(\n      DIV(\"help\", tr(\"arena/info\")),\n      ...get(\"lichess/arena-started\")\n        .filter(filterTournament)\n        .map(renderTournament),\n      ...get(\"lichess/arena-created\")\n        .filter(filterTournament)\n        .map(renderTournamentCreated)\n    );\n  }\n};\n\nexport const mountArena = (root: HTMLElement) => {\n  const innerRoot = DIV(\"section\", H1(\"\", tr(\"arena/started\")), DIV(\"inner\"));\n  root.append(\n    DIV(\n      \"arena-page\",\n      DIV(\"header\", DIV(\"title\", tr(\"arena/arena\")), navigateHome()),\n\n      innerRoot\n    )\n  );\n\n  update(innerRoot);\n\n  subscribe(\n    \"lichess/arena-created\",\n    \"lichess/arena-started\",\n    \"lichess/arena-join\"\n  )(() => update(innerRoot));\n};\n\nconst renderPersistent = (root: HTMLElement, state: TournamentJoin) => {\n  emptyElement(root);\n  root.classList.remove(\"hidden\");\n\n  const tournament = get(\"lichess/arena-started\")\n    .concat(get(\"lichess/arena-created\"))\n    .find((a) => a.id === state.id);\n\n  const label = tournament === undefined ? \"Tournament\" : tournament.fullName;\n  root.append(DIV(\"title\", navigate(\"arena\", label)));\n};\n\nexport const mountArenaPersistent = (root: HTMLElement) => {\n  const box = DIV(\"arena-persist hidden\");\n  root.append(box);\n\n  subscribe(\n    \"lichess/arena-join\",\n    \"screen\"\n  )(() => {\n    const state = get(\"lichess/arena-join\");\n    const screen = get(\"screen\");\n    if (state && screen !== \"arena\" && screen !== \"game\") {\n      renderPersistent(box, state);\n    } else {\n      box.classList.add(\"hidden\");\n      emptyElement(box);\n    }\n  });\n};\n","import \"./style.css\";\nimport {\n  batch_dispacther,\n  clearSubscriptions,\n  dispatch,\n  get,\n  StateKey,\n  subscribe,\n} from \"./store\";\nimport { mountHome } from \"./view/home\";\nimport { mountGame } from \"./game\";\nimport { screenLocker } from \"./lock-screen\";\nimport { mountMoveList } from \"./movelist\";\nimport { emptyElement } from \"./lib/dom\";\nimport { map, fromNullable } from \"./lib/option\";\nimport { mountEvents } from \"./view/events\";\nimport { connect } from \"./play\";\nimport { mountChallenge } from \"./view/challenge\";\nimport { mountFollowing } from \"./view/players\";\nimport { chatbox, mountChat } from \"./view/chat\";\nimport { mountOnline } from \"./online\";\nimport { mountSeek } from \"./view/seek\";\nimport { mountEnd } from \"./view/end\";\nimport { setFullScreenRoot, toggleFullscreen } from \"./fullscreen\";\nimport { initLang } from \"./locale\";\nimport { mountArena, mountArenaPersistent } from \"./view/arena\";\n\nconst monitorStream = () => {\n  const onEvent = subscribe(\"lichess/stream-events\");\n  const { assign, end } = batch_dispacther();\n  onEvent(() => {\n    const events = get(\"lichess/stream-events\");\n    if (events.length > 0) {\n      const lastEvent = events[events.length - 1];\n\n      if (lastEvent.type === \"gameStart\") {\n        assign(\"lichess/game-info\", lastEvent.game);\n        assign(\"lichess/challenges\", []);\n        assign(\"screen\", \"game\");\n        connect(lastEvent.game.gameId);\n      } else if (lastEvent.type === \"gameFinish\") {\n        assign(\"lichess/current-challenge\", null);\n        assign(\"lichess/game-info\", lastEvent.game);\n        // assign(\"lichess/game-state\", null);\n        assign(\"screen\", \"end-game\");\n      } else if (lastEvent.type === \"challenge\") {\n        if (lastEvent.challenge.status === \"created\") {\n          dispatch(\"lichess/challenges\", (cs) =>\n            cs.concat(lastEvent.challenge)\n          );\n          if (get(\"screen\") !== \"home\") {\n            chatbox(lastEvent.challenge.challenger.name, \"Shall we play?\"); // TODO translation\n          }\n        }\n      } else if (lastEvent.type === \"challengeCanceled\") {\n        dispatch(\"lichess/challenges\", (cs) =>\n          cs.filter((c) => c.id === lastEvent.challenge.id)\n        );\n      }\n    }\n    end();\n  });\n};\n\nconst main = (root: HTMLElement) => {\n  initLang();\n  setFullScreenRoot(root);\n  screenLocker();\n  mountHome(root);\n  mountChat(document.body);\n  mountArenaPersistent(document.body);\n  mountOnline(document.body);\n  monitorStream();\n\n  let keepSubs: StateKey[] = [\"screen\", \"lockScreen\", \"lichess/chat\", \"online\"];\n\n  subscribe(\"screen\")(() => {\n    clearSubscriptions((k) => keepSubs.includes(k));\n    monitorStream();\n    emptyElement(root);\n    switch (get(\"screen\")) {\n      case \"home\": {\n        return mountHome(root);\n      }\n      case \"events\": {\n        return mountEvents(root);\n      }\n      case \"game\": {\n        return mountGame(root);\n      }\n      case \"movelist\": {\n        toggleFullscreen(false);\n        return mountMoveList(root);\n      }\n      case \"challenge\": {\n        return mountChallenge(root);\n      }\n      case \"seek\": {\n        return mountSeek(root);\n      }\n      case \"follow\": {\n        return mountFollowing(root);\n      }\n      case \"end-game\": {\n        toggleFullscreen(false);\n        return mountEnd(root);\n      }\n      case \"arena\": {\n        return mountArena(root);\n      }\n    }\n  });\n};\n\nmap(main)(fromNullable(document.querySelector<HTMLDivElement>(\"#app\")));\n"],"names":["_none","_some","none","some","value","isOption","n","isNone","o","map","f","orElse","orElseL","fromNullable","pipe2","a","fa","fb","$constructor","name","initializer","params","init","inst","def","_a","k","_","Parent","Definition","fn","_b","$ZodAsyncError","globalConfig","config","newConfig","getEnumValues","entries","numericValues","v","jsonStringifyReplacer","cached","getter","nullish","input","cleanRegex","source","start","end","floatSafeRemainder","val","step","valDecCount","stepDecCount","decCount","valInt","stepInt","defineLazy","object","key","assignProp","target","prop","randomString","length","chars","str","i","esc","isObject","data","allowsEval","F","isPlainObject","ctor","prot","propertyKeyTypes","escapeRegex","clone","cl","normalizeParams","_params","optionalKeys","shape","NUMBER_FORMAT_RANGES","pick","schema","mask","newShape","currDef","omit","extend","_shape","merge","b","partial","Class","oldShape","required","aborted","x","startIndex","prefixIssues","path","issues","iss","unwrapMessage","message","finalizeIssue","ctx","full","_c","_d","_e","_f","getLengthableOrigin","issue","args","util.jsonStringifyReplacer","$ZodError","$ZodRealError","flattenError","error","mapper","fieldErrors","formErrors","sub","formatError","_mapper","processError","curr","el","_parse","_Err","_ctx","result","core.$ZodAsyncError","e","util.finalizeIssue","core.config","_parseAsync","_safeParse","errors.$ZodError","safeParse","errors.$ZodRealError","_safeParseAsync","safeParseAsync","cuid","cuid2","ulid","xid","ksuid","nanoid","duration","guid","uuid","version","email","_emoji","emoji","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","hostname","e164","dateSource","date","timeSource","regex","time","datetime","opts","string","integer","number","boolean","lowercase","uppercase","$ZodCheck","core.$constructor","numericOriginMap","$ZodCheckLessThan","origin","bag","payload","$ZodCheckGreaterThan","$ZodCheckMultipleOf","util.floatSafeRemainder","$ZodCheckNumberFormat","isInt","minimum","maximum","util.NUMBER_FORMAT_RANGES","regexes.integer","$ZodCheckMaxLength","util.nullish","util.getLengthableOrigin","$ZodCheckMinLength","$ZodCheckLengthEquals","tooBig","$ZodCheckStringFormat","$ZodCheckRegex","$ZodCheckLowerCase","regexes.lowercase","$ZodCheckUpperCase","regexes.uppercase","$ZodCheckIncludes","escapedRegex","util.escapeRegex","pattern","$ZodCheckStartsWith","$ZodCheckEndsWith","$ZodCheckOverwrite","Doc","arg","lines","minIndent","dedented","line","$ZodType","util.defineLazy","util.randomString","checks","ch","runChecks","isAborted","util.aborted","asyncResult","currLen","r","$ZodString","regexes.string","$ZodStringFormat","checks.$ZodCheckStringFormat","$ZodGUID","regexes.guid","$ZodUUID","regexes.uuid","$ZodEmail","regexes.email","$ZodURL","url","regexes.hostname","$ZodEmoji","regexes.emoji","$ZodNanoID","regexes.nanoid","$ZodCUID","regexes.cuid","$ZodCUID2","regexes.cuid2","$ZodULID","regexes.ulid","$ZodXID","regexes.xid","$ZodKSUID","regexes.ksuid","$ZodISODateTime","regexes.datetime","$ZodISODate","regexes.date","$ZodISOTime","regexes.time","$ZodISODuration","regexes.duration","$ZodIPv4","regexes.ipv4","$ZodIPv6","regexes.ipv6","$ZodCIDRv4","regexes.cidrv4","$ZodCIDRv6","regexes.cidrv6","address","prefix","prefixNum","isValidBase64","$ZodBase64","regexes.base64","isValidBase64URL","regexes.base64url","c","padded","$ZodBase64URL","$ZodE164","regexes.e164","isValidJWT","token","algorithm","tokensParts","header","parsedHeader","$ZodJWT","$ZodNumber","regexes.number","received","$ZodNumberFormat","checks.$ZodCheckNumberFormat","$ZodBoolean","regexes.boolean","$ZodUnknown","$ZodNever","handleArrayResult","final","index","util.prefixIssues","$ZodArray","proms","item","handleObjectResult","handleOptionalObjectResult","$ZodObject","_normalized","util.cached","keys","okeys","util.optionalKeys","propValues","field","generateFastpass","doc","parseStr","util.esc","ids","id","fastpass","util.isObject","jit","core.globalConfig","fastEnabled","util.allowsEval","catchall","isOptional","unrecognized","keySet","_catchall","t","handleUnionResults","results","$ZodUnion","option","patterns","p","util.cleanRegex","async","$ZodIntersection","left","right","handleIntersectionResults","mergeValues","util.isPlainObject","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","merged","$ZodEnum","values","util.getEnumValues","util.propertyKeyTypes","$ZodLiteral","$ZodTransform","_out","output","$ZodOptional","$ZodNullable","$ZodDefault","handleDefaultResult","$ZodPrefault","$ZodNonOptional","handleNonOptionalResult","$ZodCatch","$ZodPipe","handlePipeResult","$ZodReadonly","handleReadonlyResult","$ZodCustom","checks.$ZodCheck","handleRefineResult","_iss","util.issue","$ZodRegistry","_meta","meta","pm","registry","globalRegistry","_string","util.normalizeParams","_email","_guid","_uuid","_uuidv4","_uuidv6","_uuidv7","_url","_nanoid","_cuid","_cuid2","_ulid","_xid","_ksuid","_ipv4","_ipv6","_cidrv4","_cidrv6","_base64","_base64url","_e164","_jwt","_isoDateTime","_isoDate","_isoTime","_isoDuration","_number","_int","_boolean","_unknown","_never","_lt","checks.$ZodCheckLessThan","_lte","_gt","checks.$ZodCheckGreaterThan","_gte","_multipleOf","checks.$ZodCheckMultipleOf","_maxLength","checks.$ZodCheckMaxLength","_minLength","checks.$ZodCheckMinLength","_length","checks.$ZodCheckLengthEquals","_regex","checks.$ZodCheckRegex","_lowercase","checks.$ZodCheckLowerCase","_uppercase","checks.$ZodCheckUpperCase","_includes","includes","checks.$ZodCheckIncludes","_startsWith","checks.$ZodCheckStartsWith","_endsWith","suffix","checks.$ZodCheckEndsWith","_overwrite","tx","checks.$ZodCheckOverwrite","_normalize","form","_trim","_toLowerCase","_toUpperCase","_array","element","_refine","ZodISODateTime","core.$ZodISODateTime","schemas.ZodStringFormat","core._isoDateTime","ZodISODate","core.$ZodISODate","core._isoDate","ZodISOTime","core.$ZodISOTime","core._isoTime","ZodISODuration","core.$ZodISODuration","core._isoDuration","core.formatError","core.flattenError","ZodRealError","parse","core._parse","parseAsync","core._parseAsync","core._safeParse","core._safeParseAsync","ZodType","core.$ZodType","core.clone","reg","parse.parse","parse.safeParse","parse.parseAsync","parse.safeParseAsync","check","refine","refinement","superRefine","checks.overwrite","optional","nullable","nonoptional","array","union","intersection","pipe","transform","_default","prefault","_catch","readonly","description","core.globalRegistry","_ZodString","core.$ZodString","checks.regex","checks.includes","checks.startsWith","checks.endsWith","checks.minLength","checks.maxLength","checks.length","checks.lowercase","checks.uppercase","checks.trim","checks.normalize","checks.toLowerCase","checks.toUpperCase","ZodString","core._email","ZodEmail","core._url","ZodURL","core._jwt","ZodJWT","core._emoji","ZodEmoji","core._guid","ZodGUID","core._uuid","ZodUUID","core._uuidv4","core._uuidv6","core._uuidv7","core._nanoid","ZodNanoID","core._cuid","ZodCUID","core._cuid2","ZodCUID2","core._ulid","ZodULID","core._base64","ZodBase64","core._base64url","ZodBase64URL","core._xid","ZodXID","core._ksuid","ZodKSUID","core._ipv4","ZodIPv4","core._ipv6","ZodIPv6","core._cidrv4","ZodCIDRv4","core._cidrv6","ZodCIDRv6","core._e164","ZodE164","iso.datetime","iso.date","iso.time","iso.duration","core._string","ZodStringFormat","core.$ZodStringFormat","core.$ZodEmail","core.$ZodGUID","core.$ZodUUID","core.$ZodURL","core.$ZodEmoji","core.$ZodNanoID","core.$ZodCUID","core.$ZodCUID2","core.$ZodULID","core.$ZodXID","core.$ZodKSUID","core.$ZodIPv4","core.$ZodIPv6","core.$ZodCIDRv4","core.$ZodCIDRv6","core.$ZodBase64","core.$ZodBase64URL","core.$ZodE164","core.$ZodJWT","ZodNumber","core.$ZodNumber","checks.gt","checks.gte","checks.lt","checks.lte","int","checks.multipleOf","core._number","ZodNumberFormat","core.$ZodNumberFormat","core._int","ZodBoolean","core.$ZodBoolean","core._boolean","ZodUnknown","core.$ZodUnknown","unknown","core._unknown","ZodNever","core.$ZodNever","never","core._never","ZodArray","core.$ZodArray","minLength","maxLength","len","core._array","ZodObject","core.$ZodObject","_enum","incoming","util.extend","other","util.merge","util.pick","util.omit","util.partial","ZodOptional","util.required","ZodNonOptional","util.assignProp","ZodUnion","core.$ZodUnion","options","ZodIntersection","core.$ZodIntersection","ZodEnum","core.$ZodEnum","newEntries","ZodLiteral","core.$ZodLiteral","literal","ZodTransform","core.$ZodTransform","_issue","core.$ZodOptional","innerType","ZodNullable","core.$ZodNullable","ZodDefault","core.$ZodDefault","defaultValue","ZodPrefault","core.$ZodPrefault","core.$ZodNonOptional","ZodCatch","core.$ZodCatch","catchValue","ZodPipe","core.$ZodPipe","in_","out","ZodReadonly","core.$ZodReadonly","ZodCustom","core.$ZodCustom","core.$ZodCheck","core._refine","LangZ","z.union","z.literal","roleToUCILetter","role","uciLetterToRole","letter","squareFiles","squareRanks","getFile","s","getRank","makeSquare","moveNormal","from","to","capture","promotion","checkmate","moveEnPassant","moveCastle","king","rook","getMoveRole","move","getMoveTo","getMoveFrom","getMoveCapture","moveToUCI","otherColor","color","inputNone","inputRole","inputCandidates","candidates","inputMove","getInputRole","stampEvent","event","seekRequestSending","request","seekRequestSent","cancel","body","messageFromChatEvent","username","text","group","as","localPatterns","isPrivateIP","re","defaultTimeControls","padStart","targetLength","padString","attrs","events","listener","emptyElement","elem","removeElement","keepChildren","parent","createBase","tag","appendText","node","createWithClass","className","appendLiteral","appendElement","appendBaseNode","appendNode","inner","replaceNodeContent","append","hasClass","addClass","removeClass","createWithChildren","ns","DIV","PARA","SPAN","H1","H2","PRE","INPUT","inputType","set","ANCHOR","href","IMG","src","AUDIO","DETAILS","summary","rest","details","rootNode","comment","nag","variations","lineToTree","nodes","root","child","pgn","headers","game","next","peg$subclass","C","peg$SyntaxError","expected","found","location","self","peg$padEnd","sources","offset_s","loc","filler","last","hatLen","DESCRIBE_EXPECTATION_FNS","expectation","literalEscape","escapedParts","part","classEscape","hex","describeExpectation","describeExpected","descriptions","j","describeFound","peg$parse","peg$FAILED","peg$source","peg$startRuleFunctions","peg$parsepgn","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$r6","peg$r7","peg$r8","peg$r9","peg$e0","peg$otherExpectation","peg$e1","peg$literalExpectation","peg$e2","peg$e3","peg$e4","peg$e5","peg$classExpectation","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$f0","peg$f1","tagPairs","peg$f2","tagName","tagValue","peg$f3","marker","peg$f4","moves","peg$f5","san","peg$f6","peg$f7","peg$f8","peg$f9","peg$f10","peg$currPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","ignoreCase","parts","inverted","peg$endExpectation","peg$computePosDetails","pos","peg$computeLocation","startPos","endPos","offset","startPosDetails","endPosDetails","res","peg$fail","peg$buildStructuredError","s0","s1","s2","peg$parsetagPairSection","peg$parsemoveTextSection","peg$parsetagPair","peg$parse_","s4","s6","s7","s8","s10","peg$parsetagName","peg$parsetagValue","s3","peg$parseline","peg$parsegameTerminationMarker","peg$parsecomment","peg$parsemove","s5","s9","peg$parsemoveNumber","peg$parsesan","peg$parsesuffixAnnotation","peg$parsenag","peg$parsevariation","peg$parsebraceComment","peg$parserestOfLineComment","pgn_1","MASK64","rotl","wrappingMul","y","xoroshiro128","state","rand","PIECE_KEYS","EP_KEYS","CASTLING_KEYS","SIDE_KEY","WHITE","BLACK","PAWN","KNIGHT","BISHOP","ROOK","QUEEN","KING","DEFAULT_POSITION","Move","chess","internal","__publicField","piece","flags","captured","fromAlgebraic","algebraic","toAlgebraic","flag","BITS","FLAGS","EMPTY","SEVEN_TAG_ROSTER","SUPLEMENTAL_TAGS","HEADER_TEMPLATE","Ox88","PAWN_OFFSETS","PIECE_OFFSETS","ATTACKS","RAYS","PIECE_MASKS","SYMBOLS","PROMOTIONS","RANK_1","RANK_2","RANK_7","RANK_8","SIDES","ROOKS","SECOND_RANK","rank","square","file","isDigit","swapColor","validateFen","fen","tokens","moveNumber","halfMoves","rows","sumFields","previousWasNumber","kings","char","getDisambiguator","ambiguities","sameRank","sameFile","ambigFrom","ambigTo","ambigPiece","addMove","inferPieceType","pieceType","strippedSan","Chess","skipValidation","preserveHeaders","adjustments","ok","position","forceEnpassantSquare","empty","castling","epSquare","bigPawnSquare","squares","isLegal","type","colorIndex","typeIndex","hash","sq","currentPieceOnSquare","whiteKingInPlace","blackKingInPlace","_g","_h","_i","_j","_k","_l","startSquare","currentSquare","attackers","canCapture","verbose","difference","blocked","attackedBy","pieces","bishops","numPieces","squareColor","sum","legal","forSquare","forPiece","us","them","firstSquare","lastSquare","singleSquare","castlingFrom","castlingTo","legalMoves","strict","moveObj","prettyMove","old","newline","maxWidth","headerExists","appendComment","moveString","delimiter","reversedHistory","strip","wrapComment","width","currentWidth","nonNullHeaders","newlineChar","parsedPgn","disambiguator","cleanMove","matches","overlyDisambiguated","symbol","depth","row","moveHistory","currentCount","currentComments","copyComment","rights","side","ROLE_LIST","BLACK_PAWN","BLACK_ROOK","BLACK_KNIGHT","BLACK_BISHOP","BLACK_QUEEN","BLACK_KING","WHITE_PAWN","WHITE_ROOK","WHITE_KNIGHT","WHITE_BISHOP","WHITE_QUEEN","WHITE_KING","hide","show","uciToObj","uci","uciMoveList","uciString","m","legalMovesCache","legalKey","gameMoves","at","annotatedMove","chessjsMoveToMove","fenFromUciMoves","lastMove","getMoveListFromMoveString","uciMove","chessJsMove","noop","getTurn","get","getOponentColor","getPlayerColor","info","getMoveList","getLang","defaultInput","defaultScreen","storedKeys","loadFromStorage","subs","batch_dispacther","dispatch","subscribers","handler","withBatch","immediate_dispatch","dispatchOpt","assign","getMutable","allKeys","subscribe","callback","clearSubscriptions","filter","encodeComponent","encodeQueryString","withQueryString","defaultGetOptions","contentType","fetchWithClient","client","zt","response","obj","fetchZ","defaultPostOptions","postWithClient","postZ","ColorZ","SourceZ","StatusZ","z.object","SpeedZ","GameEventOpponentZ","z.string","z.number","GameEventOpponentAIZ","GameCompatZ","z.boolean","VariantKeyZ","VariantZ","GameEventInfoZ","GameStartEventZ","GameFinishEventZ","ChallengeStatusZ","ChallengeUserZ","RealTimeZ","CorrespondenceZ","UnlimitedZ","TimeControlZ","ChallengeJsonZ","z.url","PerfTypeZ","GameStatusNameZ","z.int","ChallengeEventZ","ChallengeCanceledEventZ","DeclineReasonZ","ChallengeDeclinedJsonZ","ChallengeDeclinedEventZ","StreamEventZ","RulesZ","RequestChallengeCreateClockZ","ResponseIdZ","CorrespondenceDaysZ","RequesChallengeCreateCorrespondenceZ","ResponseOkZ","ClockZ","PerfNameZ","TitleZ","GameEventPlayerNormalZ","GameEventPlayerAIZ","GameEventPlayerZ","GameStateEventZ","GameFullEventZ","ChatLineEventZ","OpponentGoneEventZ","BoardEventZ","PerfZ","PerfsZ","ProfileZ","PlayTimeZ","UserZ","RealTimeUserStatusZ","ArenaStatusZ","ArenaPerfZ","ArenaRatingObjZ","ThematicZ","CustomPositionZ","ArenaPositionZ","LightUserZ","ArenaClockZ","ArenaTournamentZ","ArenaTournamentResponseZ","apiUrl","streamEvent","then","stream","streamBoard","gameId","streamFollowing","getFetch","throwMissingUser","userConfig","getPoster","challengeAccept","challengeId","challengeDecline","reason","boardMove","boardResign","boardDraw","accept","getUserById","users","user","challengeUser","challengeLichessAI","userStatus","usernames","__ping","postSeek","seek","onClose","resolve","_reject","getArenaTournaments","postArenaTournamentJoin","postArenaTournamentLeave","home","buttons","players","challenge$1","formated","clock","arena$1","messages","challenge","arena","formatedMessages","tr","trf","initLang","candidate","lang","initClock","updater","stopClock","interval","checkNeedClock","mountClock","white","black","renderClockTime","renderClockTurn","nullTime","currentTime","turn","formatTime","ellapsed","white_time","black_time","setWhite","setBlack","current","floor","millis","seconds","sec","minutes","hours","fs","fm","fh","removeActive","addActive","isActive","toggleActive","sanNormal","sanCastle","sanCandidates","disambiguate","ambiguous","ambiguous_file","ambiguous_rank","roleLetter","roleSymbol","fromMove","legals","formatOptions","defaultFormatSymbol","toString","withAnnotation","formatMove","render","opponentInfo","opponentState","playerColor","setOpponent","mountOpponent","engine","displayName","button","action","add","navigate","screen","navigateHome","navigateSeek","timeoutRef","renderMessage","mountChat","chatBox","chatbox","playSound","makeAudio","audio","sounds","err","handleStart","makeNoise","handleMove","handleChat","handleIcoming","connect","sendMove","setFile","setRank","clearSan","hasMoves","moveList","selClass","renderPieces","selected","playMove","makeFinder","selectableMove","renderSelect","renderFiles","selectedFile","candidateFiles","renderRanks","findMoves","renderMoves","selectElement","files","ranks","mountInput","inputElement","update","replacePieces","replaceMoves","lgs","selectedRole","appRoot","setFullScreenRoot","toggleFullscreen","toggle","startNewGame","declineChallenge","cs","mountLock","lock","setLock","delLock","FULLSCREEN_CHAR","DRAW_CHAR","RESIGN_CHAR","MOVELIST_CHAR","fullscreen","isDrawOffer","ocolor","draw","resign","antiSlip","antiSlipTimeout","mountActions","viewActions","gameActions","mountGame","__extends","this","extendStatics","d","__","__assign","__awaiter","thisArg","_arguments","P","generator","adopt","reject","fulfilled","rejected","__generator","g","verb","op","__spreadArrays","il","jl","exports","ErrorOAuth2","ErrorUnknown","_super","ErrorNoAuthCode","ErrorInvalidReturnedStateParam","ErrorInvalidJson","ErrorInvalidScope","ErrorInvalidRequest","ErrorInvalidToken","ErrorAuthenticationGrant","ErrorUnauthorizedClient","ErrorAccessDenied","ErrorUnsupportedResponseType","ErrorServerError","ErrorTemporarilyUnavailable","ErrorAccessTokenResponse","ErrorInvalidClient","ErrorInvalidGrant","ErrorUnsupportedGrantType","ErrorWWWAuthenticate","toErrorClass","rawError","fromWWWAuthenticateHeaderStringToObject","HEADER_AUTHORIZATION","HEADER_WWW_AUTHENTICATE","PKCE_CHARSET","OAuth2AuthCodePKCE","fetch","_this","configNew","code","stateQueryParam","oneTimeParams","clientId","extraAuthorizationParams","redirectUrl","scopes","codeChallenge","codeVerifier","extraParameters","onAccessTokenExpiry","accessToken","authorizationCode","explicitlyExposedTokens","hasAuthCodeBeenExchangedForAccessToken","refreshToken","extraRefreshParams","tokenUrl","json","access_token","expires_in","refresh_token","scope","tokensToExpose","refreshToken_1","tokenName","tokenValue","accessContext","onInvalidGrant","codeOverride","jsonPromise","param","queryString","paramIdx","dict","num","buffer","binary","hashLength","lengthOfState","newLine","getJSONNDStream","responseBody","reader","controller","decoder","push","done","chunk","tdata","streamWith","onMessageListeners","onCloseListeners","queue","readStream","readOne","dispatchEvent","dispatchClose","onMessage","basePath","join","separator","replace","basedPath","clientUrl","auth","lichessHost","oauth","refreshAccessToken","authenticate","login","logout","httpClient","authObject","uc","listening","listenEvents","buttonLogin","notLogged","withUser","renderUser","renderLogin","mountLogin","withoutUser","remount","getFollowing","status","u","userElement","perfs","classical","rapid","renderLookupUser","lookup","submit","aiButton","level","levels","renderLichessAI","mountFollowing","refresh","rtc","tc","renderChallenge","renderChallenges","challenges","footer","intro","challengeBlock","replaceCh","createGame","created","started","mountHome","replaceRoot","updateAll","hasLockAPI","screenLocker","subAll","wakeLockSentinel","testShouldLock","testShouldRelease","lockScreen","sentinel","release","rolesIds","upperInitials","occupFor","roleTuple","fenToRanks","proc","rankStrings","ri","rankString","occups","occup","fi","makeOccup","renderBoard","renderStatusString","renderStatus","resultString","winner","renderWinner","renderRematch","userId","renderLink","mountInfo","mountEnd","renderInfo","pendingMove","renderNonPendingMove","moveIndex","renderPending","withFinishedGame","renderMove","renderOrd","groupIdx","makeMoves","m0","m1","baseIndex","makePosition","board","renderResign","renderDraw","withStartedGame","dflt","renderActions","renderOutcome","renderHeader","mountMoveList","actions","outcome","replaceBoard","replaceOutcome","replaceActions","replaceHeader","subList","subBoard","onInfoChanged","mountEvents","title","updateEvents","isAI","increment","challengeAI","colorString","challengeButton","renderRated","renderAColor","renderColor","mountChallenge","opponent","choices","rated","timeout","maxTime","onChange","total","score","startMonitor","updateStatus","q","mountOnline","onSeekClose","wrapTime","renderSeek","mountSeek","clearArenaJoin","joinArena","gameState","run","renderTime","detail","renderTournamentDetails","goodTime","filterTournament","variant","renderTitle","fullName","nbPlayers","renderTournament","formatRemaining","rem","remWithoutHours","renderTournamentCreated","countdown","joinButton","remaining","repl","renderJoin","tournament","joinState","mountArena","innerRoot","renderPersistent","label","mountArenaPersistent","box","monitorStream","onEvent","lastEvent","main","keepSubs"],"mappings":"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G,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAChD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAChD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAEMC,GAAO,CACT,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAChD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAChD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAChD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EA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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,46]}